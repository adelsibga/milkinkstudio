a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{font:inherit;font-size:100%;margin:0;padding:0;vertical-align:baseline;border:0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-spacing:0;border-collapse:collapse}.footer{font-size:16px;color:red}@keyframes a{0%{opacity:0}to{opacity:1}}.fadeIn{animation-name:a}@keyframes b{0%{opacity:0;transform:translate3d(0,-100%,0)}to{opacity:1;transform:none}}.fadeInDown{animation-name:b}@keyframes c{0%{opacity:0;transform:translate3d(-100%,0,0)}to{opacity:1;transform:none}}.fadeInLeft{animation-name:c}@keyframes d{0%{opacity:0;transform:translate3d(100%,0,0)}to{opacity:1;transform:none}}.fadeInRight{animation-name:d}@keyframes e{0%{opacity:0;transform:translate3d(0,100%,0)}to{opacity:1;transform:none}}.fadeInUp{animation-name:e}@keyframes f{0%{transform:translate3d(0,100%,0);visibility:visible}to{transform:translateZ(0)}}.slideInUp{animation-name:f}.reverse{animation-direction:reverse;animation-fill-mode:forwards}.gray-layer{position:absolute;z-index:-1;width:100%;height:100%;opacity:.3;background-color:#030303}.close{display:block;width:45px;height:45px}.close__svg{transition:all .4s ease;fill:#ddd3c7}.close__svg:active,.close__svg:focus,.close__svg:hover{transition:all .4s ease;transform:rotate(4deg);fill:#8d2323}header{position:sticky;top:0}.header__logo svg{width:130px;height:45px}.header__burger svg{width:45px;height:45px;transition:all .4s ease}.header__burger svg:active,.header__burger svg:focus,.header__burger svg:hover{transition:all .4s ease;transform:rotate(4deg)}.header__burger svg:active path,.header__burger svg:focus path,.header__burger svg:hover path,.header__logo svg:active path,.header__logo svg:focus path,.header__logo svg:hover path{transition:all .4s ease;fill:#8d2323}.header__burger svg path,.header__logo svg path{transition:all .4s ease;fill:#ddd3c7}.header__burger-wrapper{position:fixed;z-index:9999;bottom:0;left:0;display:flex;align-items:center;flex-direction:column;justify-content:center;width:100%;height:100%;animation-duration:.6s;text-align:center;background-image:url(../../images/menu/menu-background.png);background-attachment:fixed;background-position:50%;background-size:cover}.header__about,.header__services,.header__talk,.header__welcome,.header__work{font-size:52px;font-weight:700;line-height:1.2em;display:block;width:100%;transition:all .4s ease;text-decoration:none;letter-spacing:-1.1px;color:#ddd3c7}.header__about:active,.header__about:focus,.header__about:hover,.header__services:active,.header__services:focus,.header__services:hover,.header__talk:active,.header__talk:focus,.header__talk:hover,.header__welcome:active,.header__welcome:focus,.header__welcome:hover,.header__work:active,.header__work:focus,.header__work:hover{transition:all .4s ease;color:#8d2323}.header__about_red,.header__services_red,.header__talk_red,.header__welcome_red,.header__work_red{color:#8d2323}.header__menu{display:flex;align-content:center;flex-direction:row;justify-content:space-between;padding:30px 0;text-align:center}.header__menu-item{transition:all .4s ease;text-decoration:none}.header__menu-item:active,.header__menu-item:focus,.header__menu-item:hover{transition:all .4s ease;transform:skew(-8deg)}.header__menu-item-list{width:100%;max-width:80%;padding:0 0 25px}.header__mobile-privacy{font-family:Basier Bold,sans-serif;font-size:17px;font-weight:600;line-height:1.3em;transition:all .4s ease;text-decoration:none;letter-spacing:0;color:#ddd3c7}.header__mobile-privacy:active,.header__mobile-privacy:focus,.header__mobile-privacy:hover{transition:all .4s ease;color:#8d2323}.icons-wrapper{display:flex;flex-direction:row;justify-content:space-evenly;max-width:160px;margin:0 auto;padding:15px 0 0}.icon-svg__behance,.icon-svg__dribbble,.icon-svg__instagram,.icon-svg__linkedin{width:20px;height:20px;fill:#ddd3c7}.icon-behance,.icon-dribbble,.icon-instagram,.icon-linkedin{width:40px;height:40px;padding:10px;transition:all .4s ease}.icon-behance:active,.icon-behance:focus,.icon-behance:hover,.icon-dribbble:active,.icon-dribbble:focus,.icon-dribbble:hover,.icon-instagram:active,.icon-instagram:focus,.icon-instagram:hover,.icon-linkedin:active,.icon-linkedin:focus,.icon-linkedin:hover{transition:all .4s ease;transform:translateY(8px);opacity:.9;border-radius:10px;background-color:#8d2323}.hidden{display:none}*{box-sizing:border-box;margin:0;padding:0;color:#fff}.container_main{min-height:100vh;background-color:rgba(0,0,0,.2)}.page-content{margin:0 auto;padding:0 30px}body{font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif;background-repeat:repeat-y;background-position:top;background-size:cover;background-image:url(../../images/about-milkink/background-table.png);background-position:100%}@media screen and (min-width:768px){.header__burger-wrapper{border-radius:30px 0 0 30px}}@media screen and (min-width:1025px){.header__menu{padding:43px 0}.header__mobile{display:none}body{background-repeat:no-repeat;background-attachment:fixed;background-position:50%}.page-content{width:90%;padding:0}body{background-image:url(../../images/about-milkink/background.png)}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFib3V0LW1pbGtpbmsuY3NzIiwiYW5pbWF0aW9ucy9mYWRlSW4uc2NzcyIsImFib3V0LW1pbGtpbmsvYWJvdXQtbWlsa2luay5jc3MiLCJhbmltYXRpb25zL3NsaWRlSW4uc2NzcyIsImNvbXBvbmVudHMvaGVhZGVyLnNjc3MiLCJjb25maWcvX2NvbnN0LnNjc3MiLCJjb25maWcvX2NvbmZpZy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUtBLDJaQ3dCRSxhRDBEQSxBQzFEQSxlRDJEQSxBQzFERSxTQUNBLEFDMERGLFVEeERBLEFDd0RBLHdCRkVBLEFDMURBLFFBQ0UsQ0QwREgsQUFJRCw4RUVXRSxhQUFBLENGR0YsQUVGQSxLQUdBLGFBQUEsQ0ZDQyxBQUVELE1BRUUsZUN2REUsQ0R3REgsQUFFRCxhRUVFLFdBQUEsQ0ZHRixBRUZBLG9EQ3pIRSxXSGdJQSxBR2hJQSxZQUNFLENIZ0lILEFBRUQsTUFDRSxpQkVDQSxBQ2hJRSx3QkRnSUYsQ0ZHRixBRUZBLFFBR0EsZUZDRSxBRURGLFNGQ2EsQ0FHYixBSTFJQSxhRjJJQSxHRkNJLFNBQVcsQ0l2SWYsQUFFRSxHQUNBLFNBQUEsQ0FDQSxDSnlJRCxBRUVELFFGQ0UsZ0JBQXVCLENBR3pCLEFJMUlBLGFBR0UsR0Z5SUYsVUFBQSxBRXZJRSxnQ0FBQSxDRjJJRixBRTFJSSxHQUdBLFVBQUEsQUFHRSxjQUFBLENBQ0EsQ0p1SUwsQUFFRCxZSW5JQSxnQkFBQSxDSnFJQyxBRUVELGFGQ0UsR0lsSUEsVUFBQSxBQUNFLGdDQUFBLENBQ0EsQUFHRixHQUNFLFVBQUEsQUFDQSxjQUFBLENBQ0EsQ0pxSUosQUVGQSxZRTdITSxnQkFBQSxDSm1JTixBRUZBLGFFdEhRLEdGMEhSLFVBQUEsQUV0SEksK0JBQUEsQ0YwSEosQUV6SE0sR0FLSixVQUFBLEFBQ0UsY0FBQSxDQUNBLENKc0hILEFBRUQsYUlwSEksZ0JBQUEsQ0pzSEgsQUFFRCxhSXBISSxHQUNBLFVBQUEsQUFDQSwrQkFBQSxDQUNBLEFBRUEsR0FDQSxVRnNISixBRXRISSxjRnNISixDRW5IRSxDSnFIRCxBQUVELFVJL0dJLGdCQUFBLENKaUhILEFBRUQsYUkvR0ksR0FDQSxnQ0ZpSEosQUc5TnFCLGtCSDhOckIsQ0UvR0ksQUFJRSxHRitHTix1QkFBQSxDRTVHSSxDSjhHSCxBSXpHQyxXQUNFLGdCQUFBLENKNEdILEFBRUQsU0kxR0ksNEJBQUEsQUFDQSw0QkFBQSxDSjhHSixBRUZBLFlFeEdNLGtCRjRHTixBRTVHTSxXRjRHTixBRTFHTSxXQUFBLEFBR0UsWUFBQSxBQUNBLFdGMEdSLEFFMUdRLHdCRjBHUixDRkdBLEFJMUdNLE9BR0UsY0Z5R1IsQUV6R1EsV0Z5R1IsQUVuR0ksV0FBQSxDSnFHSCxBQUVELFlJbkdNLHdCQUFBLEFBQ0EsWUFBQSxDSnFHTCxBQUVELHVESS9GUSx3QkFDQSxBQy9KWSx1QkhrUXBCLEFHdlEwQixZSHVRMUIsQ0ZDQyxBQUVELE9JOUZFLGdCQUFBLEFBQ0EsS0FBQSxDSmdHRCxBQUVELGtCRUNBLFlGQ0UsQUVERixXRkNlLENBR2YsQUloR0Usb0JBTUUsV0Y0RkosQUU1RkksWUo2RkYsQUVERix1QkZDNEIsQ0FHNUIsQUkzRkUsK0VGOEZGLHdCQUFBLEFFckZJLHNCQUFBLENKdUZILEFBRUQsc0xJNUVFLHdCRm1GRixBRW5GRSxZRm1GRixDRkNDLEFBRUQsZ0RFRUUsd0JBQUEsQUFDRixZQUFBLENGR0EsQUlqRkEsd0JGa0ZFLGVBQUEsQUU1RUUsYUo4RUYsQUk5RUUsU0YrRUYsQUU5RUksT0Y4RUosQUFDRixhQUFBLEFJalRBLG1CQUFBLEFBQ0Usc0JBQUEsQUFDQSx1QkFBQSxBQUNBLFdBQUEsQUFDQSxZSm1URixBSW5URSx1Qk5vVEEsQUVERixrQkZDcUIsQU1qVHJCLDREQUFBLEFBQ0UsNEJBQUEsQUFDQSx3QkptVEYsQUluVEUscUJKbVRGLENGQ0MsQUFFRCw4RU03U0UsZUFBQSxBQUNBLGdCQUFBLEFBQ0Esa0JBQUEsQUFDQSxjSm1URixBSW5URSxXTm9UQSxBRURGLHdCRkM0QixBTTdTNUIscUJBQUEsQUFDRSxzQk4rU0EsQU0vU0EsYUFDRSxDTitTSCxBQUVELHlVRWVBLHdCRkNFLEFFREYsYUZDaUIsQ0FDaEIsQUFFRCxrR0FLRSxhQUFlLENBQ2hCLEFBRUQsY0FDRSxhQUFjLEFBQ2QscUJBQXNCLEFBQ3RCLG1CQUFvQixBQUNwQiw4QkFBK0IsQUFDL0IsZUFBZ0IsQUFDaEIsaUJBQW1CLENBQ3BCLEFBRUQsbUJBQ0Usd0JBQTBCLEFBQzFCLG9CQUFzQixDQUN2QixBQUVELDRFQUdFLHdCQUEwQixBQUMxQixxQkFBdUIsQ0FDeEIsQUFFRCx3QkFDRSxXQUFZLEFBQ1osY0FBZSxBQUNmLGdCQUFrQixDQUNuQixBQUVELHdCQUNFLG1DQUF1QyxBQUN2QyxlQUFnQixBQUNoQixnQkFBaUIsQUFDakIsa0JBQW1CLEFBQ25CLHdCQUEwQixBQUMxQixxQkFBc0IsQUFDdEIsaUJBQWtCLEFBQ2xCLGFBQWUsQ0FDaEIsQUFFRCwyRkFHRSx3QkFBMEIsQUFDMUIsYUFBZSxDQUNoQixBQUVELGVBQ0UsYUFBYyxBQUNkLG1CQUFvQixBQUNwQiw2QkFBOEIsQUFDOUIsZ0JBQWlCLEFBQ2pCLGNBQWUsQUFDZixnQkFBa0IsQ0FDbkIsQUFFRCxnRkFJRSxXQUFZLEFBQ1osWUFBYSxBQUNiLFlBQWMsQ0FDZixBQUVELDREQUlFLFdBQVksQUFDWixZQUFhLEFBQ2IsYUFBYyxBQUNkLHVCQUEwQixDQUMzQixBQUVELGdRQVlFLHdCQUEwQixBQUMxQiwwQkFBMkIsQUFDM0IsV0FBYSxBQUNiLG1CQUFvQixBQUNwQix3QkFBMEIsQ0FDM0IsQUFFRCxRQUNFLFlBQWMsQ0FDZixBQUVELEVBQ0Usc0JBQXVCLEFBQ3ZCLFNBQVUsQUFDVixVQUFXLEFBQ1gsVUFBZSxDQUNoQixBQUVELGdCQUNFLGlCQUFrQixBQUNsQiwrQkFBcUMsQ0FDdEMsQUFFRCxjQUNFLGNBQWUsQUFDZixjQUFnQixDQUNqQixBQUVELEtBQ0UsdUdBQXFMLEFBQ3JMLDJCQUE0QixBQUM1Qix3QkFBZ0MsQUFDaEMsc0JBQXVCLEFBSXZCLHNFQUF5RSxBQUN6RSx3QkFBa0MsQ0FKbkMsQUFPRCxvQ0FDRSx3QkFDRSwyQkFBNkIsQ0FDOUIsQ0FDRixBQUVELHFDQUNFLGNBQ0UsY0FBZ0IsQ0FDakIsQUFFRCxnQkFDRSxZQUFjLENBQ2YsQUFFRCxLQUNFLDRCQUE2QixBQUM3Qiw0QkFBNkIsQUFDN0IsdUJBQW1DLENBQ3BDLEFBRUQsY0FDRSxVQUFXLEFBQ1gsU0FBVyxDQUNaLEFBRUQsS0FDRSwrREFBbUUsQ0FDcEUsQ0FDRiIsImZpbGUiOiJhYm91dC1taWxraW5rL2Fib3V0LW1pbGtpbmsubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGh0dHA6Ly9tZXllcndlYi5jb20vZXJpYy90b29scy9jc3MvcmVzZXQvXG4gICB2Mi4wIHwgMjAxMTAxMjZcbiAgIExpY2Vuc2U6IG5vbmUgKHB1YmxpYyBkb21haW4pXG4qL1xuXG5odG1sLFxuYm9keSxcbmRpdixcbnNwYW4sXG5hcHBsZXQsXG5vYmplY3QsXG5pZnJhbWUsXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYsXG5wLFxuYmxvY2txdW90ZSxcbnByZSxcbmEsXG5hYmJyLFxuYWNyb255bSxcbmFkZHJlc3MsXG5iaWcsXG5jaXRlLFxuY29kZSxcbmRlbCxcbmRmbixcbmVtLFxuaW1nLFxuaW5zLFxua2JkLFxucSxcbnMsXG5zYW1wLFxuc21hbGwsXG5zdHJpa2UsXG5zdHJvbmcsXG5zdWIsXG5zdXAsXG50dCxcbnZhcixcbmIsXG51LFxuaSxcbmNlbnRlcixcbmRsLFxuZHQsXG5kZCxcbm9sLFxudWwsXG5saSxcbmZpZWxkc2V0LFxuZm9ybSxcbmxhYmVsLFxubGVnZW5kLFxudGFibGUsXG5jYXB0aW9uLFxudGJvZHksXG50Zm9vdCxcbnRoZWFkLFxudHIsXG50aCxcbnRkLFxuYXJ0aWNsZSxcbmFzaWRlLFxuY2FudmFzLFxuZGV0YWlscyxcbmVtYmVkLFxuZmlndXJlLFxuZmlnY2FwdGlvbixcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1lbnUsXG5uYXYsXG5vdXRwdXQsXG5ydWJ5LFxuc2VjdGlvbixcbnN1bW1hcnksXG50aW1lLFxubWFyayxcbmF1ZGlvLFxudmlkZW8ge1xuICBmb250OiBpbmhlcml0O1xuICBmb250LXNpemU6IDEwMCU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICBib3JkZXI6IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tZW51LFxubmF2LFxuc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5ib2R5IHtcbiAgbGluZS1oZWlnaHQ6IDE7XG59XG5cbm9sLFxudWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5ibG9ja3F1b3RlLFxucSB7XG4gIHF1b3Rlczogbm9uZTtcbn1cblxuYmxvY2txdW90ZTpiZWZvcmUsXG5ibG9ja3F1b3RlOmFmdGVyLFxucTpiZWZvcmUsXG5xOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgY29udGVudDogbm9uZTtcbn1cblxudGFibGUge1xuICBib3JkZXItc3BhY2luZzogMDtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbn1cblxuLmZvb3RlciB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgY29sb3I6IHJlZDtcbn1cblxuQGtleWZyYW1lcyBmYWRlSW4ge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG5cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cblxuLmZhZGVJbiB7XG4gIGFuaW1hdGlvbi1uYW1lOiBmYWRlSW47XG59XG5cbkBrZXlmcmFtZXMgZmFkZUluRG93biB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAtMTAwJSwgMCk7XG4gIH1cblxuICB0byB7XG4gICAgb3BhY2l0eTogMTtcbiAgICB0cmFuc2Zvcm06IG5vbmU7XG4gIH1cbn1cblxuLmZhZGVJbkRvd24ge1xuICBhbmltYXRpb24tbmFtZTogZmFkZUluRG93bjtcbn1cblxuQGtleWZyYW1lcyBmYWRlSW5MZWZ0IHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC0xMDAlLCAwLCAwKTtcbiAgfVxuXG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogbm9uZTtcbiAgfVxufVxuXG4uZmFkZUluTGVmdCB7XG4gIGFuaW1hdGlvbi1uYW1lOiBmYWRlSW5MZWZ0O1xufVxuXG5Aa2V5ZnJhbWVzIGZhZGVJblJpZ2h0IHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDEwMCUsIDAsIDApO1xuICB9XG5cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNmb3JtOiBub25lO1xuICB9XG59XG5cbi5mYWRlSW5SaWdodCB7XG4gIGFuaW1hdGlvbi1uYW1lOiBmYWRlSW5SaWdodDtcbn1cblxuQGtleWZyYW1lcyBmYWRlSW5VcCB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAxMDAlLCAwKTtcbiAgfVxuXG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogbm9uZTtcbiAgfVxufVxuXG4uZmFkZUluVXAge1xuICBhbmltYXRpb24tbmFtZTogZmFkZUluVXA7XG59XG5cbkBrZXlmcmFtZXMgc2xpZGVJblVwIHtcbiAgZnJvbSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAxMDAlLCAwKTtcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICB9XG5cbiAgdG8ge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gIH1cbn1cblxuLnNsaWRlSW5VcCB7XG4gIGFuaW1hdGlvbi1uYW1lOiBzbGlkZUluVXA7XG59XG5cbi5yZXZlcnNlIHtcbiAgYW5pbWF0aW9uLWRpcmVjdGlvbjogcmV2ZXJzZTtcbiAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG59XG5cbi5ncmF5LWxheWVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAtMTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgb3BhY2l0eTogMC4zO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDMwMzAzO1xufVxuXG4uY2xvc2Uge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDQ1cHg7XG4gIGhlaWdodDogNDVweDtcbn1cblxuLmNsb3NlX19zdmcge1xuICB0cmFuc2l0aW9uOiBhbGwgMC40cyBlYXNlO1xuICBmaWxsOiAjREREM0M3O1xufVxuXG4uY2xvc2VfX3N2Zzpob3Zlcixcbi5jbG9zZV9fc3ZnOmZvY3VzLFxuLmNsb3NlX19zdmc6YWN0aXZlIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNHMgZWFzZTtcbiAgdHJhbnNmb3JtOiByb3RhdGUoNGRlZyk7XG4gIGZpbGw6ICM4RDIzMjM7XG59XG5cbmhlYWRlciB7XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogMDtcbn1cblxuLmhlYWRlcl9fbG9nbyBzdmcge1xuICB3aWR0aDogMTMwcHg7XG4gIGhlaWdodDogNDVweDtcbn1cblxuLmhlYWRlcl9fYnVyZ2VyIHN2ZyB7XG4gIHdpZHRoOiA0NXB4O1xuICBoZWlnaHQ6IDQ1cHg7XG4gIHRyYW5zaXRpb246IGFsbCAwLjRzIGVhc2U7XG59XG5cbi5oZWFkZXJfX2J1cmdlciBzdmc6aG92ZXIsXG4uaGVhZGVyX19idXJnZXIgc3ZnOmZvY3VzLFxuLmhlYWRlcl9fYnVyZ2VyIHN2ZzphY3RpdmUge1xuICB0cmFuc2l0aW9uOiBhbGwgMC40cyBlYXNlO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg0ZGVnKTtcbn1cblxuLmhlYWRlcl9fbG9nbyBzdmc6aG92ZXIgcGF0aCxcbi5oZWFkZXJfX2xvZ28gc3ZnOmZvY3VzIHBhdGgsXG4uaGVhZGVyX19sb2dvIHN2ZzphY3RpdmUgcGF0aCxcbi5oZWFkZXJfX2J1cmdlciBzdmc6aG92ZXIgcGF0aCxcbi5oZWFkZXJfX2J1cmdlciBzdmc6Zm9jdXMgcGF0aCxcbi5oZWFkZXJfX2J1cmdlciBzdmc6YWN0aXZlIHBhdGgge1xuICB0cmFuc2l0aW9uOiBhbGwgMC40cyBlYXNlO1xuICBmaWxsOiAjOEQyMzIzO1xufVxuXG4uaGVhZGVyX19sb2dvIHN2ZyBwYXRoLFxuLmhlYWRlcl9fYnVyZ2VyIHN2ZyBwYXRoIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNHMgZWFzZTtcbiAgZmlsbDogI0RERDNDNztcbn1cblxuLmhlYWRlcl9fYnVyZ2VyLXdyYXBwZXIge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDk5OTk7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMC42cztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi8uLi9pbWFnZXMvbWVudS9tZW51LWJhY2tncm91bmQucG5nXCIpO1xuICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IGZpeGVkO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufVxuXG4uaGVhZGVyX193ZWxjb21lLFxuLmhlYWRlcl9fd29yayxcbi5oZWFkZXJfX2Fib3V0LFxuLmhlYWRlcl9fc2VydmljZXMsXG4uaGVhZGVyX190YWxrIHtcbiAgZm9udC1zaXplOiA1MnB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbGluZS1oZWlnaHQ6IDEuMmVtO1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIHRyYW5zaXRpb246IGFsbCAwLjRzIGVhc2U7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgbGV0dGVyLXNwYWNpbmc6IC0xLjFweDtcbiAgY29sb3I6ICNEREQzQzc7XG59XG5cbi5oZWFkZXJfX3dlbGNvbWU6aG92ZXIsXG4uaGVhZGVyX193ZWxjb21lOmZvY3VzLFxuLmhlYWRlcl9fd2VsY29tZTphY3RpdmUsXG4uaGVhZGVyX193b3JrOmhvdmVyLFxuLmhlYWRlcl9fd29yazpmb2N1cyxcbi5oZWFkZXJfX3dvcms6YWN0aXZlLFxuLmhlYWRlcl9fYWJvdXQ6aG92ZXIsXG4uaGVhZGVyX19hYm91dDpmb2N1cyxcbi5oZWFkZXJfX2Fib3V0OmFjdGl2ZSxcbi5oZWFkZXJfX3NlcnZpY2VzOmhvdmVyLFxuLmhlYWRlcl9fc2VydmljZXM6Zm9jdXMsXG4uaGVhZGVyX19zZXJ2aWNlczphY3RpdmUsXG4uaGVhZGVyX190YWxrOmhvdmVyLFxuLmhlYWRlcl9fdGFsazpmb2N1cyxcbi5oZWFkZXJfX3RhbGs6YWN0aXZlIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNHMgZWFzZTtcbiAgY29sb3I6ICM4RDIzMjM7XG59XG5cbi5oZWFkZXJfX3dlbGNvbWVfcmVkLFxuLmhlYWRlcl9fd29ya19yZWQsXG4uaGVhZGVyX19hYm91dF9yZWQsXG4uaGVhZGVyX19zZXJ2aWNlc19yZWQsXG4uaGVhZGVyX190YWxrX3JlZCB7XG4gIGNvbG9yOiAjOEQyMzIzO1xufVxuXG4uaGVhZGVyX19tZW51IHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24tY29udGVudDogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHBhZGRpbmc6IDMwcHggMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uaGVhZGVyX19tZW51LWl0ZW0ge1xuICB0cmFuc2l0aW9uOiBhbGwgMC40cyBlYXNlO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5oZWFkZXJfX21lbnUtaXRlbTpob3Zlcixcbi5oZWFkZXJfX21lbnUtaXRlbTpmb2N1cyxcbi5oZWFkZXJfX21lbnUtaXRlbTphY3RpdmUge1xuICB0cmFuc2l0aW9uOiBhbGwgMC40cyBlYXNlO1xuICB0cmFuc2Zvcm06IHNrZXcoLThkZWcpO1xufVxuXG4uaGVhZGVyX19tZW51LWl0ZW0tbGlzdCB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDgwJTtcbiAgcGFkZGluZzogMCAwIDI1cHg7XG59XG5cbi5oZWFkZXJfX21vYmlsZS1wcml2YWN5IHtcbiAgZm9udC1mYW1pbHk6IFwiQmFzaWVyIEJvbGRcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxN3B4O1xuICBmb250LXdlaWdodDogNjAwO1xuICBsaW5lLWhlaWdodDogMS4zZW07XG4gIHRyYW5zaXRpb246IGFsbCAwLjRzIGVhc2U7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gIGNvbG9yOiAjREREM0M3O1xufVxuXG4uaGVhZGVyX19tb2JpbGUtcHJpdmFjeTpob3Zlcixcbi5oZWFkZXJfX21vYmlsZS1wcml2YWN5OmZvY3VzLFxuLmhlYWRlcl9fbW9iaWxlLXByaXZhY3k6YWN0aXZlIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNHMgZWFzZTtcbiAgY29sb3I6ICM4RDIzMjM7XG59XG5cbi5pY29ucy13cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XG4gIG1heC13aWR0aDogMTYwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nOiAxNXB4IDAgMDtcbn1cblxuLmljb24tc3ZnX19pbnN0YWdyYW0sXG4uaWNvbi1zdmdfX2JlaGFuY2UsXG4uaWNvbi1zdmdfX2RyaWJiYmxlLFxuLmljb24tc3ZnX19saW5rZWRpbiB7XG4gIHdpZHRoOiAyMHB4O1xuICBoZWlnaHQ6IDIwcHg7XG4gIGZpbGw6ICNEREQzQzc7XG59XG5cbi5pY29uLWluc3RhZ3JhbSxcbi5pY29uLWJlaGFuY2UsXG4uaWNvbi1kcmliYmJsZSxcbi5pY29uLWxpbmtlZGluIHtcbiAgd2lkdGg6IDQwcHg7XG4gIGhlaWdodDogNDBweDtcbiAgcGFkZGluZzogMTBweDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNHMgZWFzZTtcbn1cblxuLmljb24taW5zdGFncmFtOmhvdmVyLFxuLmljb24taW5zdGFncmFtOmZvY3VzLFxuLmljb24taW5zdGFncmFtOmFjdGl2ZSxcbi5pY29uLWJlaGFuY2U6aG92ZXIsXG4uaWNvbi1iZWhhbmNlOmZvY3VzLFxuLmljb24tYmVoYW5jZTphY3RpdmUsXG4uaWNvbi1kcmliYmJsZTpob3Zlcixcbi5pY29uLWRyaWJiYmxlOmZvY3VzLFxuLmljb24tZHJpYmJibGU6YWN0aXZlLFxuLmljb24tbGlua2VkaW46aG92ZXIsXG4uaWNvbi1saW5rZWRpbjpmb2N1cyxcbi5pY29uLWxpbmtlZGluOmFjdGl2ZSB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjRzIGVhc2U7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg4cHgpO1xuICBvcGFjaXR5OiAwLjk7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICM4RDIzMjM7XG59XG5cbi5oaWRkZW4ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4qIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBjb2xvcjogI0ZGRkZGRjtcbn1cblxuLmNvbnRhaW5lcl9tYWluIHtcbiAgbWluLWhlaWdodDogMTAwdmg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yKTtcbn1cblxuLnBhZ2UtY29udGVudCB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nOiAwIDMwcHg7XG59XG5cbmJvZHkge1xuICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBTZWdvZSBVSSwgUm9ib3RvLCBIZWx2ZXRpY2EgTmV1ZSwgQXJpYWwsIE5vdG8gU2Fucywgc2Fucy1zZXJpZiwgQXBwbGUgQ29sb3IgRW1vamksIFNlZ29lIFVJIEVtb2ppLCBTZWdvZSBVSSBTeW1ib2wsIE5vdG8gQ29sb3IgRW1vamk7XG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3Zlcjtcbn1cblxuYm9keSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uLy4uL2ltYWdlcy9hYm91dC1taWxraW5rL2JhY2tncm91bmQtdGFibGUucG5nXCIpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgcmlnaHQ7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5oZWFkZXJfX2J1cmdlci13cmFwcGVyIHtcbiAgICBib3JkZXItcmFkaXVzOiAzMHB4IDAgMCAzMHB4O1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkge1xuICAuaGVhZGVyX19tZW51IHtcbiAgICBwYWRkaW5nOiA0M3B4IDA7XG4gIH1cblxuICAuaGVhZGVyX19tb2JpbGUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICBib2R5IHtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogZml4ZWQ7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgfVxuXG4gIC5wYWdlLWNvbnRlbnQge1xuICAgIHdpZHRoOiA5MCU7XG4gICAgcGFkZGluZzogMDtcbiAgfVxuXG4gIGJvZHkge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uLy4uL2ltYWdlcy9hYm91dC1taWxraW5rL2JhY2tncm91bmQucG5nXCIpO1xuICB9XG59XG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltTnZibVpwWnk5ZmNtVnpaWFF1YzJOemN5SXNJbUZpYjNWMExXMXBiR3RwYm1zdllXSnZkWFF0Yldsc2EybHVheTVqYzNNaUxDSmpiMjF3YjI1bGJuUnpMMlp2YjNSbGNpNXpZM056SWl3aVlXNXBiV0YwYVc5dWN5OW1ZV1JsU1c0dWMyTnpjeUlzSW1GdWFXMWhkR2x2Ym5NdmMyeHBaR1ZKYmk1elkzTnpJaXdpWTI5dGNHOXVaVzUwY3k5b1pXRmtaWEl1YzJOemN5SXNJbU52Ym1acFp5OWZZMjl1YzNRdWMyTnpjeUlzSW1OdmJtWnBaeTlmWTI5dVptbG5Mbk5qYzNNaUxDSmhZbTkxZEMxdGFXeHJhVzVyTDJGaWIzVjBMVzFwYkd0cGJtc3VjMk56Y3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFUczdPME5CUVVFN1FVRkxRVHM3T3pzN096czdPenM3T3p0RlFXRkZMR0ZCUVVFN1JVRkRRU3hsUVVGQk8wVkJRMEVzVTBGQlFUdEZRVU5CTEZWQlFVRTdSVUZEUVN4M1FrRkJRVHRGUVVOQkxGTkJRVUU3UVVOQlJqczdRVVJIUVN4blJFRkJRVHRCUVVOQk96dEZRVVZGTEdOQlFVRTdRVU5CUmpzN1FVUkhRVHRGUVVORkxHTkJRVUU3UVVOQlJqczdRVVJIUVR0RlFVTkZMR2RDUVVGQk8wRkRRVVk3TzBGRVIwRTdSVUZEUlN4WlFVRkJPMEZEUVVZN08wRkVSMEU3TzBWQlJVVXNWMEZCUVR0RlFVTkJMR0ZCUVVFN1FVTkJSanM3UVVSSFFUdEZRVU5GTEdsQ1FVRkJPMFZCUTBFc2VVSkJRVUU3UVVOQlJqczdRVU53UkVFN1JVRkRSU3hsUVVGQk8wVkJRMEVzVlVGQlFUdEJSSFZFUmpzN1FVVjZSRUU3UlVGRFJUdEpRVU5GTEZWQlFVRTdSVVkwUkVZN1JVVXhSRUU3U1VGRFJTeFZRVUZCTzBWR05FUkdPMEZCUTBZN1FVVjZSRUU3UlVGRFJTeHpRa0ZCUVR0QlJqSkVSanM3UVVWNFJFRTdSVUZEUlR0SlFVTkZMRlZCUVVFN1NVRkRRU3h0UTBGQlFUdEZSakpFUmp0RlJYcEVRVHRKUVVORkxGVkJRVUU3U1VGRFFTeGxRVUZCTzBWR01rUkdPMEZCUTBZN1FVVjRSRUU3UlVGRFJTd3dRa0ZCUVR0QlJqQkVSanM3UVVWMlJFRTdSVUZEUlR0SlFVTkZMRlZCUVVFN1NVRkRRU3h0UTBGQlFUdEZSakJFUmp0RlJYaEVRVHRKUVVORkxGVkJRVUU3U1VGRFFTeGxRVUZCTzBWR01FUkdPMEZCUTBZN1FVVjJSRUU3UlVGRFJTd3dRa0ZCUVR0QlJubEVSanM3UVVWMFJFRTdSVUZEUlR0SlFVTkZMRlZCUVVFN1NVRkRRU3hyUTBGQlFUdEZSbmxFUmp0RlJYWkVRVHRKUVVORkxGVkJRVUU3U1VGRFFTeGxRVUZCTzBWR2VVUkdPMEZCUTBZN1FVVjBSRUU3UlVGRFJTd3lRa0ZCUVR0QlJuZEVSanM3UVVWeVJFRTdSVUZEUlR0SlFVTkZMRlZCUVVFN1NVRkRRU3hyUTBGQlFUdEZSbmRFUmp0RlJYUkVRVHRKUVVORkxGVkJRVUU3U1VGRFFTeGxRVUZCTzBWR2QwUkdPMEZCUTBZN1FVVnlSRUU3UlVGRFJTeDNRa0ZCUVR0QlJuVkVSanM3UVVjM1NFRTdSVUZEUlR0SlFVTkZMR3REUVVGQk8wbEJRMEVzYlVKQlFVRTdSVWhuU1VZN1JVYzVTRUU3U1VGRFJTd3JRa0ZCUVR0RlNHZEpSanRCUVVOR08wRkhOMGhCTzBWQlEwVXNlVUpCUVVFN1FVZ3JTRVk3TzBGSmRFbEJPMFZCUTBVc05FSkJRVUU3UlVGRFFTdzJRa0ZCUVR0QlNubEpSanM3UVVsMFNVRTdSVUZEUlN4clFrRkJRVHRGUVVOQkxGZEJRVUU3UlVGRFFTeFhRVUZCTzBWQlEwRXNXVUZCUVR0RlFVTkJMRmxCUVVFN1JVRkRRU3g1UWtOWVowSTdRVXh2U214Q096dEJTWFJKUVR0RlFVTkZMR05CUVVFN1JVRkRRU3hYUVVGQk8wVkJRMEVzV1VGQlFUdEJTbmxKUmp0QlNYWkpSVHRGUVVORkxIbENRMnBDWjBJN1JVUnJRbWhDTEdGRGVFSnBRanRCVEdsTGNrSTdRVWwyU1VrN1JVRkhSU3g1UWtOMlFtTTdSVVIzUW1Rc2RVSkJRVUU3UlVGRFFTeGhRemxDYjBJN1FVeHhTekZDT3p0QlNXeEpRVHRGUVVORkxHZENRVUZCTzBWQlEwRXNUVUZCUVR0QlNuRkpSanM3UVVscVNVVTdSVUZEUlN4WlFVRkJPMFZCUTBFc1dVRkJRVHRCU205SlNqdEJTV3BKUlR0RlFVTkZMRmRCUVVFN1JVRkRRU3haUVVGQk8wVkJRMEVzZVVKRE5VTm5RanRCVEN0TGNFSTdRVWxxU1VrN1JVRkhSU3g1UWtOcVJHTTdSVVJyUkdRc2RVSkJRVUU3UVVwcFNVNDdRVWw0U0UwN1JVRkRSU3g1UWtNMVJGazdSVVEyUkZvc1lVTnNSV3RDTzBGTU5Fd3hRanRCU1hSSVNUdEZRVU5GTEhsQ1EyeEZZenRGUkcxRlpDeGhRM3BGWlR0QlRHbE5ja0k3UVVsd1NFVTdSVUZEUlN4bFFVRkJPMFZCUTBFc1lVRkJRVHRGUVVOQkxGTkJRVUU3UlVGRFFTeFBRVUZCTzBWQlEwRXNZVUZCUVR0RlFVTkJMRzFDUVVGQk8wVkJRMEVzYzBKQlFVRTdSVUZEUVN4MVFrRkJRVHRGUVVOQkxGZEJRVUU3UlVGRFFTeFpRVUZCTzBWQlEwRXNkMEpEYWtaMVFqdEZSR3RHZGtJc2EwSkJRVUU3UlVGRFFTdzRSRUZCUVR0RlFVTkJMRFJDUVVGQk8wVkJRMEVzYTBOQlFVRTdSVUZEUVN4elFrRkJRVHRCU25OSVNqdEJTVzVJUlR0RlFVdEZMR1ZCUVVFN1JVRkRRU3hwUWtGQlFUdEZRVU5CTEd0Q1FVRkJPMFZCUTBFc1kwRkJRVHRGUVVOQkxGZEJRVUU3UlVGRFFTeDVRa053UjJkQ08wVkVjVWRvUWl4eFFrRkJRVHRGUVVOQkxITkNRVUZCTzBWQlEwRXNZME0zUjJsQ08wRk1PRTV5UWp0QlNTOUhTVHRGUVVkRkxIbENRelZIWXp0RlJEWkhaQ3hqUTJ4SWIwSTdRVXhwVHpGQ08wRkpOVWRKTzBWQlEwVXNZME4wU0c5Q08wRk1iMDh4UWp0QlNURkhSVHRGUVVORkxHRkJRVUU3UlVGRFFTeHhRa0ZCUVR0RlFVTkJMRzFDUVVGQk8wVkJRMEVzT0VKQlFVRTdSVUZEUVN4bFFVRkJPMFZCUTBFc2EwSkJRVUU3UVVvMFIwbzdRVWt4UjBrN1JVRkRSU3g1UWtNNVNHTTdSVVFyU0dRc2NVSkJRVUU3UVVvMFIwNDdRVWt4UjAwN1JVRkhSU3g1UWtOd1NWazdSVVJ4U1Zvc2MwSkJRVUU3UVVvd1IxSTdRVWwyUjAwN1JVRkRSU3hYUVVGQk8wVkJRMEVzWTBGQlFUdEZRVU5CTEdsQ1FVRkJPMEZLZVVkU08wRkpia2RKTzBWQlEwVXNjME5CUVVFN1JVRkRRU3hsUVVGQk8wVkJRMEVzWjBKQlFVRTdSVUZEUVN4clFrRkJRVHRGUVVOQkxIbENRM1JLWXp0RlJIVktaQ3h4UWtGQlFUdEZRVU5CTEdsQ1FVRkJPMFZCUTBFc1kwTXZTbVU3UVV4dlVYSkNPMEZKYmtkTk8wVkJSMFVzZVVKRE9VcFpPMFZFSzBwYUxHTkRjRXRyUWp0QlRIVlJNVUk3TzBGSk4wWkJPMFZCUTBVc1lVRkJRVHRGUVVOQkxHMUNRVUZCTzBWQlEwRXNOa0pCUVVFN1JVRkRRU3huUWtGQlFUdEZRVU5CTEdOQlFVRTdSVUZEUVN4cFFrRkJRVHRCU21kSFJqczdRVWsxUmtVN1JVRkpSU3hYUVVGQk8wVkJRMEVzV1VGQlFUdEZRVU5CTEdGRE0weHBRanRCVEhWU2NrSTdPMEZKZGtaRk8wVkJTVVVzVjBGQlFUdEZRVU5CTEZsQlFVRTdSVUZEUVN4aFFVRkJPMFZCUTBFc2VVSkRhazFuUWp0QlRIZFNjRUk3UVVseVJrazdSVUZIUlN4NVFrTjBUV003UlVSMVRXUXNNRUpCUVVFN1JVRkRRU3haUVVGQk8wVkJRMEVzYlVKQlFVRTdSVUZEUVN4NVFrTXZUVzlDTzBGTWIxTXhRanM3UVVsb1JrRTdSVUZEUlN4aFFVRkJPMEZLYlVaR096dEJTV2hHUVR0RlFVVkpPMGxCUTBVc05FSkJRVUU3UlVwclJrbzdRVUZEUmp0QlNUbEZRVHRGUVVWSk8wbEJRMFVzWlVGQlFUdEZTaXRGU2p0RlNUVkZSVHRKUVVORkxHRkJRVUU3UlVvNFJVbzdRVUZEUmp0QlRXcFVRVHRGUVVORkxITkNRVUZCTzBWQlEwRXNVMEZCUVR0RlFVTkJMRlZCUVVFN1JVRkRRU3hqUVVGQk8wRk9iVlJHT3p0QlRXaFVRVHRGUVVORkxHbENRVUZCTzBWQlEwRXNiME5FWW5OQ08wRk1aMVY0UWpzN1FVMW9WRUU3UlVGRFJTeGpRVUZCTzBWQlEwRXNaVUZCUVR0QlRtMVVSanM3UVUxb1ZFRTdSVUZEUlN4dlRFRkJRVHRGUVVOQkxESkNRVUZCTzBWQlEwRXNLMEpCUVVFN1JVRkRRU3h6UWtGQlFUdEJUbTFVUmpzN1FVMDFVMEU3UlVGRFJUdEpRVU5GTERSQ1FVRkJPMGxCUTBFc05FSkJRVUU3U1VGRFFTeHJRMEZCUVR0RlRpdFRSanRGVFRWVFFUdEpRVU5GTEZWQmRFTnRRanRKUVhWRGJrSXNWVUZCUVR0RlRqaFRSanRCUVVOR08wRlBlbFpCTzBWQlEwVXNkMFZCUVVFN1JVRkRRU3hwUTBGQlFUdEJVREpXUmpzN1FVOTJWa0U3UlVGRFJUdEpRVU5GTEd0RlFVRkJPMFZRTUZaR08wRkJRMFlpTENKbWFXeGxJam9pWVdKdmRYUXRiV2xzYTJsdWF5OWhZbTkxZEMxdGFXeHJhVzVyTG1OemN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJaThxSUdoMGRIQTZMeTl0WlhsbGNuZGxZaTVqYjIwdlpYSnBZeTkwYjI5c2N5OWpjM012Y21WelpYUXZYRzRnSUNCMk1pNHdJSHdnTWpBeE1UQXhNalpjYmlBZ0lFeHBZMlZ1YzJVNklHNXZibVVnS0hCMVlteHBZeUJrYjIxaGFXNHBYRzRxTDF4dVhHNW9kRzFzTENCaWIyUjVMQ0JrYVhZc0lITndZVzRzSUdGd2NHeGxkQ3dnYjJKcVpXTjBMQ0JwWm5KaGJXVXNYRzVvTVN3Z2FESXNJR2d6TENCb05Dd2dhRFVzSUdnMkxDQndMQ0JpYkc5amEzRjFiM1JsTENCd2NtVXNYRzVoTENCaFltSnlMQ0JoWTNKdmJubHRMQ0JoWkdSeVpYTnpMQ0JpYVdjc0lHTnBkR1VzSUdOdlpHVXNYRzVrWld3c0lHUm1iaXdnWlcwc0lHbHRaeXdnYVc1ekxDQnJZbVFzSUhFc0lITXNJSE5oYlhBc1hHNXpiV0ZzYkN3Z2MzUnlhV3RsTENCemRISnZibWNzSUhOMVlpd2djM1Z3TENCMGRDd2dkbUZ5TEZ4dVlpd2dkU3dnYVN3Z1kyVnVkR1Z5TEZ4dVpHd3NJR1IwTENCa1pDd2diMndzSUhWc0xDQnNhU3hjYm1acFpXeGtjMlYwTENCbWIzSnRMQ0JzWVdKbGJDd2diR1ZuWlc1a0xGeHVkR0ZpYkdVc0lHTmhjSFJwYjI0c0lIUmliMlI1TENCMFptOXZkQ3dnZEdobFlXUXNJSFJ5TENCMGFDd2dkR1FzWEc1aGNuUnBZMnhsTENCaGMybGtaU3dnWTJGdWRtRnpMQ0JrWlhSaGFXeHpMQ0JsYldKbFpDeGNibVpwWjNWeVpTd2dabWxuWTJGd2RHbHZiaXdnWm05dmRHVnlMQ0JvWldGa1pYSXNJR2huY205MWNDeGNibTFsYm5Vc0lHNWhkaXdnYjNWMGNIVjBMQ0J5ZFdKNUxDQnpaV04wYVc5dUxDQnpkVzF0WVhKNUxGeHVkR2x0WlN3Z2JXRnlheXdnWVhWa2FXOHNJSFpwWkdWdklIdGNiaUFnWm05dWREb2dhVzVvWlhKcGREdGNiaUFnWm05dWRDMXphWHBsT2lBeE1EQWxPMXh1SUNCdFlYSm5hVzQ2SURBN1hHNGdJSEJoWkdScGJtYzZJREE3WEc0Z0lIWmxjblJwWTJGc0xXRnNhV2R1T2lCaVlYTmxiR2x1WlR0Y2JpQWdZbTl5WkdWeU9pQXdPMXh1ZlZ4dVhHNHZLaUJJVkUxTU5TQmthWE53YkdGNUxYSnZiR1VnY21WelpYUWdabTl5SUc5c1pHVnlJR0p5YjNkelpYSnpJQ292WEc1aGNuUnBZMnhsTENCaGMybGtaU3dnWkdWMFlXbHNjeXdnWm1sblkyRndkR2x2Yml3Z1ptbG5kWEpsTEZ4dVptOXZkR1Z5TENCb1pXRmtaWElzSUdobmNtOTFjQ3dnYldWdWRTd2dibUYyTENCelpXTjBhVzl1SUh0Y2JpQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNTlYRzVjYm1KdlpIa2dlMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dNVHRjYm4xY2JseHViMndzSUhWc0lIdGNiaUFnYkdsemRDMXpkSGxzWlRvZ2JtOXVaVHRjYm4xY2JseHVZbXh2WTJ0eGRXOTBaU3dnY1NCN1hHNGdJSEYxYjNSbGN6b2dibTl1WlR0Y2JuMWNibHh1WW14dlkydHhkVzkwWlRwaVpXWnZjbVVzSUdKc2IyTnJjWFZ2ZEdVNllXWjBaWElzWEc1eE9tSmxabTl5WlN3Z2NUcGhablJsY2lCN1hHNGdJR052Ym5SbGJuUTZJQ2NuTzF4dUlDQmpiMjUwWlc1ME9pQnViMjVsTzF4dWZWeHVYRzUwWVdKc1pTQjdYRzRnSUdKdmNtUmxjaTF6Y0dGamFXNW5PaUF3TzF4dUlDQmliM0prWlhJdFkyOXNiR0Z3YzJVNklHTnZiR3hoY0hObE8xeHVmU0lzSWk4cUlHaDBkSEE2THk5dFpYbGxjbmRsWWk1amIyMHZaWEpwWXk5MGIyOXNjeTlqYzNNdmNtVnpaWFF2WEc0Z0lDQjJNaTR3SUh3Z01qQXhNVEF4TWpaY2JpQWdJRXhwWTJWdWMyVTZJRzV2Ym1VZ0tIQjFZbXhwWXlCa2IyMWhhVzRwWEc0cUwxeHVhSFJ0YkN3Z1ltOWtlU3dnWkdsMkxDQnpjR0Z1TENCaGNIQnNaWFFzSUc5aWFtVmpkQ3dnYVdaeVlXMWxMRnh1YURFc0lHZ3lMQ0JvTXl3Z2FEUXNJR2cxTENCb05pd2djQ3dnWW14dlkydHhkVzkwWlN3Z2NISmxMRnh1WVN3Z1lXSmljaXdnWVdOeWIyNTViU3dnWVdSa2NtVnpjeXdnWW1sbkxDQmphWFJsTENCamIyUmxMRnh1WkdWc0xDQmtabTRzSUdWdExDQnBiV2NzSUdsdWN5d2dhMkprTENCeExDQnpMQ0J6WVcxd0xGeHVjMjFoYkd3c0lITjBjbWxyWlN3Z2MzUnliMjVuTENCemRXSXNJSE4xY0N3Z2RIUXNJSFpoY2l4Y2JtSXNJSFVzSUdrc0lHTmxiblJsY2l4Y2JtUnNMQ0JrZEN3Z1pHUXNJRzlzTENCMWJDd2diR2tzWEc1bWFXVnNaSE5sZEN3Z1ptOXliU3dnYkdGaVpXd3NJR3hsWjJWdVpDeGNiblJoWW14bExDQmpZWEIwYVc5dUxDQjBZbTlrZVN3Z2RHWnZiM1FzSUhSb1pXRmtMQ0IwY2l3Z2RHZ3NJSFJrTEZ4dVlYSjBhV05zWlN3Z1lYTnBaR1VzSUdOaGJuWmhjeXdnWkdWMFlXbHNjeXdnWlcxaVpXUXNYRzVtYVdkMWNtVXNJR1pwWjJOaGNIUnBiMjRzSUdadmIzUmxjaXdnYUdWaFpHVnlMQ0JvWjNKdmRYQXNYRzV0Wlc1MUxDQnVZWFlzSUc5MWRIQjFkQ3dnY25WaWVTd2djMlZqZEdsdmJpd2djM1Z0YldGeWVTeGNiblJwYldVc0lHMWhjbXNzSUdGMVpHbHZMQ0IyYVdSbGJ5QjdYRzRnSUdadmJuUTZJR2x1YUdWeWFYUTdYRzRnSUdadmJuUXRjMmw2WlRvZ01UQXdKVHRjYmlBZ2JXRnlaMmx1T2lBd08xeHVJQ0J3WVdSa2FXNW5PaUF3TzF4dUlDQjJaWEowYVdOaGJDMWhiR2xuYmpvZ1ltRnpaV3hwYm1VN1hHNGdJR0p2Y21SbGNqb2dNRHRjYm4xY2JseHVMeW9nU0ZSTlREVWdaR2x6Y0d4aGVTMXliMnhsSUhKbGMyVjBJR1p2Y2lCdmJHUmxjaUJpY205M2MyVnljeUFxTDF4dVlYSjBhV05zWlN3Z1lYTnBaR1VzSUdSbGRHRnBiSE1zSUdacFoyTmhjSFJwYjI0c0lHWnBaM1Z5WlN4Y2JtWnZiM1JsY2l3Z2FHVmhaR1Z5TENCb1ozSnZkWEFzSUcxbGJuVXNJRzVoZGl3Z2MyVmpkR2x2YmlCN1hHNGdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVmVnh1WEc1aWIyUjVJSHRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREU3WEc1OVhHNWNibTlzTENCMWJDQjdYRzRnSUd4cGMzUXRjM1I1YkdVNklHNXZibVU3WEc1OVhHNWNibUpzYjJOcmNYVnZkR1VzSUhFZ2UxeHVJQ0J4ZFc5MFpYTTZJRzV2Ym1VN1hHNTlYRzVjYm1Kc2IyTnJjWFZ2ZEdVNlltVm1iM0psTENCaWJHOWphM0YxYjNSbE9tRm1kR1Z5TEZ4dWNUcGlaV1p2Y21Vc0lIRTZZV1owWlhJZ2UxeHVJQ0JqYjI1MFpXNTBPaUJjSWx3aU8xeHVJQ0JqYjI1MFpXNTBPaUJ1YjI1bE8xeHVmVnh1WEc1MFlXSnNaU0I3WEc0Z0lHSnZjbVJsY2kxemNHRmphVzVuT2lBd08xeHVJQ0JpYjNKa1pYSXRZMjlzYkdGd2MyVTZJR052Ykd4aGNITmxPMXh1ZlZ4dVhHNHVabTl2ZEdWeUlIdGNiaUFnWm05dWRDMXphWHBsT2lBeE5uQjRPMXh1SUNCamIyeHZjam9nY21Wa08xeHVmVnh1WEc1QWEyVjVabkpoYldWeklHWmhaR1ZKYmlCN1hHNGdJR1p5YjIwZ2UxeHVJQ0FnSUc5d1lXTnBkSGs2SURBN1hHNGdJSDFjYmlBZ2RHOGdlMXh1SUNBZ0lHOXdZV05wZEhrNklERTdYRzRnSUgxY2JuMWNiaTVtWVdSbFNXNGdlMXh1SUNCaGJtbHRZWFJwYjI0dGJtRnRaVG9nWm1Ga1pVbHVPMXh1ZlZ4dVhHNUFhMlY1Wm5KaGJXVnpJR1poWkdWSmJrUnZkMjRnZTF4dUlDQm1jbTl0SUh0Y2JpQWdJQ0J2Y0dGamFYUjVPaUF3TzF4dUlDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsTTJRb01Dd2dMVEV3TUNVc0lEQXBPMXh1SUNCOVhHNGdJSFJ2SUh0Y2JpQWdJQ0J2Y0dGamFYUjVPaUF4TzF4dUlDQWdJSFJ5WVc1elptOXliVG9nYm05dVpUdGNiaUFnZlZ4dWZWeHVMbVpoWkdWSmJrUnZkMjRnZTF4dUlDQmhibWx0WVhScGIyNHRibUZ0WlRvZ1ptRmtaVWx1Ukc5M2JqdGNibjFjYmx4dVFHdGxlV1p5WVcxbGN5Qm1ZV1JsU1c1TVpXWjBJSHRjYmlBZ1puSnZiU0I3WEc0Z0lDQWdiM0JoWTJsMGVUb2dNRHRjYmlBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVE5rS0MweE1EQWxMQ0F3TENBd0tUdGNiaUFnZlZ4dUlDQjBieUI3WEc0Z0lDQWdiM0JoWTJsMGVUb2dNVHRjYmlBZ0lDQjBjbUZ1YzJadmNtMDZJRzV2Ym1VN1hHNGdJSDFjYm4xY2JpNW1ZV1JsU1c1TVpXWjBJSHRjYmlBZ1lXNXBiV0YwYVc5dUxXNWhiV1U2SUdaaFpHVkpia3hsWm5RN1hHNTlYRzVjYmtCclpYbG1jbUZ0WlhNZ1ptRmtaVWx1VW1sbmFIUWdlMXh1SUNCbWNtOXRJSHRjYmlBZ0lDQnZjR0ZqYVhSNU9pQXdPMXh1SUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxNMlFvTVRBd0pTd2dNQ3dnTUNrN1hHNGdJSDFjYmlBZ2RHOGdlMXh1SUNBZ0lHOXdZV05wZEhrNklERTdYRzRnSUNBZ2RISmhibk5tYjNKdE9pQnViMjVsTzF4dUlDQjlYRzU5WEc0dVptRmtaVWx1VW1sbmFIUWdlMXh1SUNCaGJtbHRZWFJwYjI0dGJtRnRaVG9nWm1Ga1pVbHVVbWxuYUhRN1hHNTlYRzVjYmtCclpYbG1jbUZ0WlhNZ1ptRmtaVWx1VlhBZ2UxeHVJQ0JtY205dElIdGNiaUFnSUNCdmNHRmphWFI1T2lBd08xeHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbE0yUW9NQ3dnTVRBd0pTd2dNQ2s3WEc0Z0lIMWNiaUFnZEc4Z2UxeHVJQ0FnSUc5d1lXTnBkSGs2SURFN1hHNGdJQ0FnZEhKaGJuTm1iM0p0T2lCdWIyNWxPMXh1SUNCOVhHNTlYRzR1Wm1Ga1pVbHVWWEFnZTF4dUlDQmhibWx0WVhScGIyNHRibUZ0WlRvZ1ptRmtaVWx1VlhBN1hHNTlYRzVjYmtCclpYbG1jbUZ0WlhNZ2MyeHBaR1ZKYmxWd0lIdGNiaUFnWm5KdmJTQjdYRzRnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVXpaQ2d3TENBeE1EQWxMQ0F3S1R0Y2JpQWdJQ0IyYVhOcFltbHNhWFI1T2lCMmFYTnBZbXhsTzF4dUlDQjlYRzRnSUhSdklIdGNiaUFnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpUTmtLREFzSURBc0lEQXBPMXh1SUNCOVhHNTlYRzR1YzJ4cFpHVkpibFZ3SUh0Y2JpQWdZVzVwYldGMGFXOXVMVzVoYldVNklITnNhV1JsU1c1VmNEdGNibjFjYmx4dUxuSmxkbVZ5YzJVZ2UxeHVJQ0JoYm1sdFlYUnBiMjR0WkdseVpXTjBhVzl1T2lCeVpYWmxjbk5sTzF4dUlDQmhibWx0WVhScGIyNHRabWxzYkMxdGIyUmxPaUJtYjNKM1lYSmtjenRjYm4xY2JseHVMbWR5WVhrdGJHRjVaWElnZTF4dUlDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUhvdGFXNWtaWGc2SUMweE8xeHVJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdhR1ZwWjJoME9pQXhNREFsTzF4dUlDQnZjR0ZqYVhSNU9pQXdMak03WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTXdNekF6TURNN1hHNTlYRzVjYmk1amJHOXpaU0I3WEc0Z0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQjNhV1IwYURvZ05EVndlRHRjYmlBZ2FHVnBaMmgwT2lBME5YQjRPMXh1ZlZ4dUxtTnNiM05sWDE5emRtY2dlMXh1SUNCMGNtRnVjMmwwYVc5dU9pQmhiR3dnTUM0MGN5QmxZWE5sTzF4dUlDQm1hV3hzT2lBalJFUkVNME0zTzF4dWZWeHVMbU5zYjNObFgxOXpkbWM2YUc5MlpYSXNJQzVqYkc5elpWOWZjM1puT21adlkzVnpMQ0F1WTJ4dmMyVmZYM04yWnpwaFkzUnBkbVVnZTF4dUlDQjBjbUZ1YzJsMGFXOXVPaUJoYkd3Z01DNDBjeUJsWVhObE8xeHVJQ0IwY21GdWMyWnZjbTA2SUhKdmRHRjBaU2cwWkdWbktUdGNiaUFnWm1sc2JEb2dJemhFTWpNeU16dGNibjFjYmx4dWFHVmhaR1Z5SUh0Y2JpQWdjRzl6YVhScGIyNDZJSE4wYVdOcmVUdGNiaUFnZEc5d09pQXdPMXh1ZlZ4dVhHNHVhR1ZoWkdWeVgxOXNiMmR2SUhOMlp5QjdYRzRnSUhkcFpIUm9PaUF4TXpCd2VEdGNiaUFnYUdWcFoyaDBPaUEwTlhCNE8xeHVmVnh1TG1obFlXUmxjbDlmWW5WeVoyVnlJSE4yWnlCN1hHNGdJSGRwWkhSb09pQTBOWEI0TzF4dUlDQm9aV2xuYUhRNklEUTFjSGc3WEc0Z0lIUnlZVzV6YVhScGIyNDZJR0ZzYkNBd0xqUnpJR1ZoYzJVN1hHNTlYRzR1YUdWaFpHVnlYMTlpZFhKblpYSWdjM1puT21odmRtVnlMQ0F1YUdWaFpHVnlYMTlpZFhKblpYSWdjM1puT21adlkzVnpMQ0F1YUdWaFpHVnlYMTlpZFhKblpYSWdjM1puT21GamRHbDJaU0I3WEc0Z0lIUnlZVzV6YVhScGIyNDZJR0ZzYkNBd0xqUnpJR1ZoYzJVN1hHNGdJSFJ5WVc1elptOXliVG9nY205MFlYUmxLRFJrWldjcE8xeHVmVnh1TG1obFlXUmxjbDlmYkc5bmJ5QnpkbWM2YUc5MlpYSWdjR0YwYUN3Z0xtaGxZV1JsY2w5ZmJHOW5ieUJ6ZG1jNlptOWpkWE1nY0dGMGFDd2dMbWhsWVdSbGNsOWZiRzluYnlCemRtYzZZV04wYVhabElIQmhkR2dzSUM1b1pXRmtaWEpmWDJKMWNtZGxjaUJ6ZG1jNmFHOTJaWElnY0dGMGFDd2dMbWhsWVdSbGNsOWZZblZ5WjJWeUlITjJaenBtYjJOMWN5QndZWFJvTENBdWFHVmhaR1Z5WDE5aWRYSm5aWElnYzNabk9tRmpkR2wyWlNCd1lYUm9JSHRjYmlBZ2RISmhibk5wZEdsdmJqb2dZV3hzSURBdU5ITWdaV0Z6WlR0Y2JpQWdabWxzYkRvZ0l6aEVNak15TXp0Y2JuMWNiaTVvWldGa1pYSmZYMnh2WjI4Z2MzWm5JSEJoZEdnc0lDNW9aV0ZrWlhKZlgySjFjbWRsY2lCemRtY2djR0YwYUNCN1hHNGdJSFJ5WVc1emFYUnBiMjQ2SUdGc2JDQXdMalJ6SUdWaGMyVTdYRzRnSUdacGJHdzZJQ05FUkVRelF6YzdYRzU5WEc0dWFHVmhaR1Z5WDE5aWRYSm5aWEl0ZDNKaGNIQmxjaUI3WEc0Z0lIQnZjMmwwYVc5dU9pQm1hWGhsWkR0Y2JpQWdlaTFwYm1SbGVEb2dPVGs1T1R0Y2JpQWdZbTkwZEc5dE9pQXdPMXh1SUNCc1pXWjBPaUF3TzF4dUlDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQmhiR2xuYmkxcGRHVnRjem9nWTJWdWRHVnlPMXh1SUNCbWJHVjRMV1JwY21WamRHbHZiam9nWTI5c2RXMXVPMXh1SUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUdObGJuUmxjanRjYmlBZ2QybGtkR2c2SURFd01DVTdYRzRnSUdobGFXZG9kRG9nTVRBd0pUdGNiaUFnWVc1cGJXRjBhVzl1TFdSMWNtRjBhVzl1T2lBd0xqWnpPMXh1SUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNGdJR0poWTJ0bmNtOTFibVF0YVcxaFoyVTZJSFZ5YkNoY0lpNHVMeTR1TDJsdFlXZGxjeTl0Wlc1MUwyMWxiblV0WW1GamEyZHliM1Z1WkM1d2JtZGNJaWs3WEc0Z0lHSmhZMnRuY205MWJtUXRZWFIwWVdOb2JXVnVkRG9nWm1sNFpXUTdYRzRnSUdKaFkydG5jbTkxYm1RdGNHOXphWFJwYjI0NklHTmxiblJsY2lCalpXNTBaWEk3WEc0Z0lHSmhZMnRuY205MWJtUXRjMmw2WlRvZ1kyOTJaWEk3WEc1OVhHNHVhR1ZoWkdWeVgxOTNaV3hqYjIxbExDQXVhR1ZoWkdWeVgxOTNiM0pyTENBdWFHVmhaR1Z5WDE5aFltOTFkQ3dnTG1obFlXUmxjbDlmYzJWeWRtbGpaWE1zSUM1b1pXRmtaWEpmWDNSaGJHc2dlMXh1SUNCbWIyNTBMWE5wZW1VNklEVXljSGc3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUJpYjJ4a08xeHVJQ0JzYVc1bExXaGxhV2RvZERvZ01TNHlaVzA3WEc0Z0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ2RISmhibk5wZEdsdmJqb2dZV3hzSURBdU5ITWdaV0Z6WlR0Y2JpQWdkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQnViMjVsTzF4dUlDQnNaWFIwWlhJdGMzQmhZMmx1WnpvZ0xURXVNWEI0TzF4dUlDQmpiMnh2Y2pvZ0kwUkVSRE5ETnp0Y2JuMWNiaTVvWldGa1pYSmZYM2RsYkdOdmJXVTZhRzkyWlhJc0lDNW9aV0ZrWlhKZlgzZGxiR052YldVNlptOWpkWE1zSUM1b1pXRmtaWEpmWDNkbGJHTnZiV1U2WVdOMGFYWmxMQ0F1YUdWaFpHVnlYMTkzYjNKck9taHZkbVZ5TENBdWFHVmhaR1Z5WDE5M2IzSnJPbVp2WTNWekxDQXVhR1ZoWkdWeVgxOTNiM0pyT21GamRHbDJaU3dnTG1obFlXUmxjbDlmWVdKdmRYUTZhRzkyWlhJc0lDNW9aV0ZrWlhKZlgyRmliM1YwT21adlkzVnpMQ0F1YUdWaFpHVnlYMTloWW05MWREcGhZM1JwZG1Vc0lDNW9aV0ZrWlhKZlgzTmxjblpwWTJWek9taHZkbVZ5TENBdWFHVmhaR1Z5WDE5elpYSjJhV05sY3pwbWIyTjFjeXdnTG1obFlXUmxjbDlmYzJWeWRtbGpaWE02WVdOMGFYWmxMQ0F1YUdWaFpHVnlYMTkwWVd4ck9taHZkbVZ5TENBdWFHVmhaR1Z5WDE5MFlXeHJPbVp2WTNWekxDQXVhR1ZoWkdWeVgxOTBZV3hyT21GamRHbDJaU0I3WEc0Z0lIUnlZVzV6YVhScGIyNDZJR0ZzYkNBd0xqUnpJR1ZoYzJVN1hHNGdJR052Ykc5eU9pQWpPRVF5TXpJek8xeHVmVnh1TG1obFlXUmxjbDlmZDJWc1kyOXRaVjl5WldRc0lDNW9aV0ZrWlhKZlgzZHZjbXRmY21Wa0xDQXVhR1ZoWkdWeVgxOWhZbTkxZEY5eVpXUXNJQzVvWldGa1pYSmZYM05sY25acFkyVnpYM0psWkN3Z0xtaGxZV1JsY2w5ZmRHRnNhMTl5WldRZ2UxeHVJQ0JqYjJ4dmNqb2dJemhFTWpNeU16dGNibjFjYmk1b1pXRmtaWEpmWDIxbGJuVWdlMXh1SUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNCaGJHbG5iaTFqYjI1MFpXNTBPaUJqWlc1MFpYSTdYRzRnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJ5YjNjN1hHNGdJR3AxYzNScFpua3RZMjl1ZEdWdWREb2djM0JoWTJVdFltVjBkMlZsYmp0Y2JpQWdjR0ZrWkdsdVp6b2dNekJ3ZUNBd08xeHVJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEc1OVhHNHVhR1ZoWkdWeVgxOXRaVzUxTFdsMFpXMGdlMXh1SUNCMGNtRnVjMmwwYVc5dU9pQmhiR3dnTUM0MGN5QmxZWE5sTzF4dUlDQjBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVU3WEc1OVhHNHVhR1ZoWkdWeVgxOXRaVzUxTFdsMFpXMDZhRzkyWlhJc0lDNW9aV0ZrWlhKZlgyMWxiblV0YVhSbGJUcG1iMk4xY3l3Z0xtaGxZV1JsY2w5ZmJXVnVkUzFwZEdWdE9tRmpkR2wyWlNCN1hHNGdJSFJ5WVc1emFYUnBiMjQ2SUdGc2JDQXdMalJ6SUdWaGMyVTdYRzRnSUhSeVlXNXpabTl5YlRvZ2MydGxkeWd0T0dSbFp5azdYRzU5WEc0dWFHVmhaR1Z5WDE5dFpXNTFMV2wwWlcwdGJHbHpkQ0I3WEc0Z0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNCdFlYZ3RkMmxrZEdnNklEZ3dKVHRjYmlBZ2NHRmtaR2x1WnpvZ01DQXdJREkxY0hnN1hHNTlYRzR1YUdWaFpHVnlYMTl0YjJKcGJHVXRjSEpwZG1GamVTQjdYRzRnSUdadmJuUXRabUZ0YVd4NU9pQmNJa0poYzJsbGNpQkNiMnhrWENJc0lITmhibk10YzJWeWFXWTdYRzRnSUdadmJuUXRjMmw2WlRvZ01UZHdlRHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJRFl3TUR0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SURFdU0yVnRPMXh1SUNCMGNtRnVjMmwwYVc5dU9pQmhiR3dnTUM0MGN5QmxZWE5sTzF4dUlDQjBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVU3WEc0Z0lHeGxkSFJsY2kxemNHRmphVzVuT2lBd08xeHVJQ0JqYjJ4dmNqb2dJMFJFUkRORE56dGNibjFjYmk1b1pXRmtaWEpmWDIxdlltbHNaUzF3Y21sMllXTjVPbWh2ZG1WeUxDQXVhR1ZoWkdWeVgxOXRiMkpwYkdVdGNISnBkbUZqZVRwbWIyTjFjeXdnTG1obFlXUmxjbDlmYlc5aWFXeGxMWEJ5YVhaaFkzazZZV04wYVhabElIdGNiaUFnZEhKaGJuTnBkR2x2YmpvZ1lXeHNJREF1TkhNZ1pXRnpaVHRjYmlBZ1kyOXNiM0k2SUNNNFJESXpNak03WEc1OVhHNWNiaTVwWTI5dWN5MTNjbUZ3Y0dWeUlIdGNiaUFnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnWm14bGVDMWthWEpsWTNScGIyNDZJSEp2ZHp0Y2JpQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQnpjR0ZqWlMxbGRtVnViSGs3WEc0Z0lHMWhlQzEzYVdSMGFEb2dNVFl3Y0hnN1hHNGdJRzFoY21kcGJqb2dNQ0JoZFhSdk8xeHVJQ0J3WVdSa2FXNW5PaUF4TlhCNElEQWdNRHRjYm4xY2JseHVMbWxqYjI0dGMzWm5YMTlwYm5OMFlXZHlZVzBzSUM1cFkyOXVMWE4yWjE5ZlltVm9ZVzVqWlN3Z0xtbGpiMjR0YzNablgxOWtjbWxpWW1Kc1pTd2dMbWxqYjI0dGMzWm5YMTlzYVc1clpXUnBiaUI3WEc0Z0lIZHBaSFJvT2lBeU1IQjRPMXh1SUNCb1pXbG5hSFE2SURJd2NIZzdYRzRnSUdacGJHdzZJQ05FUkVRelF6YzdYRzU5WEc1Y2JpNXBZMjl1TFdsdWMzUmhaM0poYlN3Z0xtbGpiMjR0WW1Wb1lXNWpaU3dnTG1samIyNHRaSEpwWW1KaWJHVXNJQzVwWTI5dUxXeHBibXRsWkdsdUlIdGNiaUFnZDJsa2RHZzZJRFF3Y0hnN1hHNGdJR2hsYVdkb2REb2dOREJ3ZUR0Y2JpQWdjR0ZrWkdsdVp6b2dNVEJ3ZUR0Y2JpQWdkSEpoYm5OcGRHbHZiam9nWVd4c0lEQXVOSE1nWldGelpUdGNibjFjYmk1cFkyOXVMV2x1YzNSaFozSmhiVHBvYjNabGNpd2dMbWxqYjI0dGFXNXpkR0ZuY21GdE9tWnZZM1Z6TENBdWFXTnZiaTFwYm5OMFlXZHlZVzA2WVdOMGFYWmxMQ0F1YVdOdmJpMWlaV2hoYm1ObE9taHZkbVZ5TENBdWFXTnZiaTFpWldoaGJtTmxPbVp2WTNWekxDQXVhV052YmkxaVpXaGhibU5sT21GamRHbDJaU3dnTG1samIyNHRaSEpwWW1KaWJHVTZhRzkyWlhJc0lDNXBZMjl1TFdSeWFXSmlZbXhsT21adlkzVnpMQ0F1YVdOdmJpMWtjbWxpWW1Kc1pUcGhZM1JwZG1Vc0lDNXBZMjl1TFd4cGJtdGxaR2x1T21odmRtVnlMQ0F1YVdOdmJpMXNhVzVyWldScGJqcG1iMk4xY3l3Z0xtbGpiMjR0YkdsdWEyVmthVzQ2WVdOMGFYWmxJSHRjYmlBZ2RISmhibk5wZEdsdmJqb2dZV3hzSURBdU5ITWdaV0Z6WlR0Y2JpQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZaS0Rod2VDazdYRzRnSUc5d1lXTnBkSGs2SURBdU9UdGNiaUFnWW05eVpHVnlMWEpoWkdsMWN6b2dNVEJ3ZUR0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJemhFTWpNeU16dGNibjFjYmx4dUxtaHBaR1JsYmlCN1hHNGdJR1JwYzNCc1lYazZJRzV2Ym1VN1hHNTlYRzVjYmtCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNklEYzJPSEI0S1NCN1hHNGdJQzVvWldGa1pYSmZYMkoxY21kbGNpMTNjbUZ3Y0dWeUlIdGNiaUFnSUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUF6TUhCNElEQWdNQ0F6TUhCNE8xeHVJQ0I5WEc1OVhHNUFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV2x1TFhkcFpIUm9PaUF4TURJMWNIZ3BJSHRjYmlBZ0xtaGxZV1JsY2w5ZmJXVnVkU0I3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dORE53ZUNBd08xeHVJQ0I5WEc0Z0lDNW9aV0ZrWlhKZlgyMXZZbWxzWlNCN1hHNGdJQ0FnWkdsemNHeGhlVG9nYm05dVpUdGNiaUFnZlZ4dWZWeHVLaUI3WEc0Z0lHSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2c3WEc0Z0lHMWhjbWRwYmpvZ01EdGNiaUFnY0dGa1pHbHVaem9nTUR0Y2JpQWdZMjlzYjNJNklDTkdSa1pHUmtZN1hHNTlYRzVjYmk1amIyNTBZV2x1WlhKZmJXRnBiaUI3WEc0Z0lHMXBiaTFvWldsbmFIUTZJREV3TUhab08xeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUJ5WjJKaEtEQXNJREFzSURBc0lEQXVNaWs3WEc1OVhHNWNiaTV3WVdkbExXTnZiblJsYm5RZ2UxeHVJQ0J0WVhKbmFXNDZJREFnWVhWMGJ6dGNiaUFnY0dGa1pHbHVaem9nTUNBek1IQjRPMXh1ZlZ4dVhHNWliMlI1SUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUMxaGNIQnNaUzF6ZVhOMFpXMHNJRUpzYVc1clRXRmpVM2x6ZEdWdFJtOXVkQ3dnVTJWbmIyVWdWVWtzSUZKdlltOTBieXdnU0dWc2RtVjBhV05oSUU1bGRXVXNJRUZ5YVdGc0xDQk9iM1J2SUZOaGJuTXNJSE5oYm5NdGMyVnlhV1lzSUVGd2NHeGxJRU52Ykc5eUlFVnRiMnBwTENCVFpXZHZaU0JWU1NCRmJXOXFhU3dnVTJWbmIyVWdWVWtnVTNsdFltOXNMQ0JPYjNSdklFTnZiRzl5SUVWdGIycHBPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYSmxjR1ZoZERvZ2NtVndaV0YwTFhrN1hHNGdJR0poWTJ0bmNtOTFibVF0Y0c5emFYUnBiMjQ2SUhSdmNDQmpaVzUwWlhJN1hHNGdJR0poWTJ0bmNtOTFibVF0YzJsNlpUb2dZMjkyWlhJN1hHNTlYRzVjYmtCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNklERXdNalZ3ZUNrZ2UxeHVJQ0JpYjJSNUlIdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xYSmxjR1ZoZERvZ2JtOHRjbVZ3WldGME8xeHVJQ0FnSUdKaFkydG5jbTkxYm1RdFlYUjBZV05vYldWdWREb2dabWw0WldRN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkMxd2IzTnBkR2x2YmpvZ1kyVnVkR1Z5SUdObGJuUmxjanRjYmlBZ2ZWeHVJQ0F1Y0dGblpTMWpiMjUwWlc1MElIdGNiaUFnSUNCM2FXUjBhRG9nT1RBbE8xeHVJQ0FnSUhCaFpHUnBibWM2SURBN1hHNGdJSDFjYm4xY2JtSnZaSGtnZTF4dUlDQmlZV05yWjNKdmRXNWtMV2x0WVdkbE9pQjFjbXdvWENJdUxpOHVMaTlwYldGblpYTXZZV0p2ZFhRdGJXbHNhMmx1YXk5aVlXTnJaM0p2ZFc1a0xYUmhZbXhsTG5CdVoxd2lLVHRjYmlBZ1ltRmphMmR5YjNWdVpDMXdiM05wZEdsdmJqb2dZMlZ1ZEdWeUlISnBaMmgwTzF4dWZWeHVYRzVBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldsdUxYZHBaSFJvT2lBeE1ESTFjSGdwSUh0Y2JpQWdZbTlrZVNCN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkMxcGJXRm5aVG9nZFhKc0tGd2lMaTR2TGk0dmFXMWhaMlZ6TDJGaWIzVjBMVzFwYkd0cGJtc3ZZbUZqYTJkeWIzVnVaQzV3Ym1kY0lpazdYRzRnSUgxY2JuMGlMQ0l1Wm05dmRHVnlJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXhObkI0TzF4dUlDQmpiMnh2Y2pvZ2NtVmtPMXh1ZlNJc0lrQnJaWGxtY21GdFpYTWdabUZrWlVsdUlIdGNiaUFnWm5KdmJTQjdYRzRnSUNBZ2IzQmhZMmwwZVRvZ01GeHVJQ0I5WEc0Z0lIUnZJSHRjYmlBZ0lDQnZjR0ZqYVhSNU9pQXhPMXh1SUNCOVhHNTlYRzVjYmk1bVlXUmxTVzRnZTF4dUlDQmhibWx0WVhScGIyNHRibUZ0WlRvZ1ptRmtaVWx1TzF4dWZWeHVYRzVBYTJWNVpuSmhiV1Z6SUdaaFpHVkpia1J2ZDI0Z2UxeHVJQ0JtY205dElIdGNiaUFnSUNCdmNHRmphWFI1T2lBd08xeHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbE0yUW9NQ3dnTFRFd01DVXNJREFwTzF4dUlDQjlYRzRnSUhSdklIdGNiaUFnSUNCdmNHRmphWFI1T2lBeE8xeHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2JtOXVaVHRjYmlBZ2ZWeHVmVnh1WEc0dVptRmtaVWx1Ukc5M2JpQjdYRzRnSUdGdWFXMWhkR2x2YmkxdVlXMWxPaUJtWVdSbFNXNUViM2R1TzF4dWZWeHVYRzVBYTJWNVpuSmhiV1Z6SUdaaFpHVkpia3hsWm5RZ2UxeHVJQ0JtY205dElIdGNiaUFnSUNCdmNHRmphWFI1T2lBd08xeHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbE0yUW9MVEV3TUNVc0lEQXNJREFwTzF4dUlDQjlYRzRnSUhSdklIdGNiaUFnSUNCdmNHRmphWFI1T2lBeE8xeHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2JtOXVaVHRjYmlBZ2ZWeHVmVnh1WEc0dVptRmtaVWx1VEdWbWRDQjdYRzRnSUdGdWFXMWhkR2x2YmkxdVlXMWxPaUJtWVdSbFNXNU1aV1owTzF4dWZWeHVYRzVBYTJWNVpuSmhiV1Z6SUdaaFpHVkpibEpwWjJoMElIdGNiaUFnWm5KdmJTQjdYRzRnSUNBZ2IzQmhZMmwwZVRvZ01EdGNiaUFnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpUTmtLREV3TUNVc0lEQXNJREFwTzF4dUlDQjlYRzRnSUhSdklIdGNiaUFnSUNCdmNHRmphWFI1T2lBeE8xeHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2JtOXVaVHRjYmlBZ2ZWeHVmVnh1WEc0dVptRmtaVWx1VW1sbmFIUWdlMXh1SUNCaGJtbHRZWFJwYjI0dGJtRnRaVG9nWm1Ga1pVbHVVbWxuYUhRN1hHNTlYRzVjYmtCclpYbG1jbUZ0WlhNZ1ptRmtaVWx1VlhBZ2UxeHVJQ0JtY205dElIdGNiaUFnSUNCdmNHRmphWFI1T2lBd08xeHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbE0yUW9NQ3dnTVRBd0pTd2dNQ2s3WEc0Z0lIMWNiaUFnZEc4Z2UxeHVJQ0FnSUc5d1lXTnBkSGs2SURFN1hHNGdJQ0FnZEhKaGJuTm1iM0p0T2lCdWIyNWxPMXh1SUNCOVhHNTlYRzVjYmk1bVlXUmxTVzVWY0NCN1hHNGdJR0Z1YVcxaGRHbHZiaTF1WVcxbE9pQm1ZV1JsU1c1VmNEdGNibjBpTENKQWEyVjVabkpoYldWeklITnNhV1JsU1c1VmNDQjdYRzRnSUdaeWIyMGdlMXh1SUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxNMlFvTUN3Z01UQXdKU3dnTUNrN1hHNGdJQ0FnZG1semFXSnBiR2wwZVRvZ2RtbHphV0pzWlZ4dUlDQjlYRzRnSUhSdklIdGNiaUFnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpUTmtLREFzSURBc0lEQXBYRzRnSUgxY2JuMWNibHh1TG5Oc2FXUmxTVzVWY0NCN1hHNGdJR0Z1YVcxaGRHbHZiaTF1WVcxbE9pQnpiR2xrWlVsdVZYQmNibjBpTENKQWFXMXdiM0owSUNjdUxpOWpiMjVtYVdjdlkyOXVjM1FuTzF4dVFHbHRjRzl5ZENBbkxpNHZZVzVwYldGMGFXOXVjeTltWVdSbFNXNG5PMXh1UUdsdGNHOXlkQ0FuTGk0dllXNXBiV0YwYVc5dWN5OXpiR2xrWlVsdUp6dGNibHh1TG5KbGRtVnljMlVnZTF4dUlDQmhibWx0WVhScGIyNHRaR2x5WldOMGFXOXVPaUJ5WlhabGNuTmxPMXh1SUNCaGJtbHRZWFJwYjI0dFptbHNiQzF0YjJSbE9pQm1iM0ozWVhKa2N6dGNibjFjYmx4dUxtZHlZWGt0YkdGNVpYSWdlMXh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJSG90YVc1a1pYZzZJQzB4TzF4dUlDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ2FHVnBaMmgwT2lBeE1EQWxPMXh1SUNCdmNHRmphWFI1T2lBd0xqTTdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNSbmJHOWlZV3hIY21GNVRHRjVaWEk3WEc1OVhHNWNiaTVqYkc5elpTQjdYRzRnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNCM2FXUjBhRG9nTkRWd2VEdGNiaUFnYUdWcFoyaDBPaUEwTlhCNE8xeHVYRzRnSUNaZlgzTjJaeUI3WEc0Z0lDQWdkSEpoYm5OcGRHbHZiam9nSkdSbFptRjFiSFJVY21GdWMybDBhVzl1TzF4dUlDQWdJR1pwYkd3NklDUm5iRzlpWVd4RGIyeHZjbEJ5YVcxaGNuazdYRzVjYmlBZ0lDQW1PbWh2ZG1WeUxGeHVJQ0FnSUNZNlptOWpkWE1zWEc0Z0lDQWdKanBoWTNScGRtVWdlMXh1SUNBZ0lDQWdkSEpoYm5OcGRHbHZiam9nSkdSbFptRjFiSFJVY21GdWMybDBhVzl1TzF4dUlDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCeWIzUmhkR1VvTkdSbFp5azdYRzRnSUNBZ0lDQm1hV3hzT2lBa1oyeHZZbUZzUTI5c2IzSlFjbWx0WVhKNVNHOTJaWEk3WEc0Z0lDQWdmVnh1SUNCOVhHNTlYRzVjYm1obFlXUmxjaUI3WEc0Z0lIQnZjMmwwYVc5dU9pQnpkR2xqYTNrN1hHNGdJSFJ2Y0RvZ01EdGNibjFjYmx4dUxtaGxZV1JsY2lCN1hHNGdJQ1pmWDJ4dloyOGdjM1puSUh0Y2JpQWdJQ0IzYVdSMGFEb2dNVE13Y0hnN1hHNGdJQ0FnYUdWcFoyaDBPaUEwTlhCNE8xeHVJQ0I5WEc1Y2JpQWdKbDlmWW5WeVoyVnlJSE4yWnlCN1hHNGdJQ0FnZDJsa2RHZzZJRFExY0hnN1hHNGdJQ0FnYUdWcFoyaDBPaUEwTlhCNE8xeHVJQ0FnSUhSeVlXNXphWFJwYjI0NklDUmtaV1poZFd4MFZISmhibk5wZEdsdmJqdGNibHh1SUNBZ0lDWTZhRzkyWlhJc1hHNGdJQ0FnSmpwbWIyTjFjeXhjYmlBZ0lDQW1PbUZqZEdsMlpTQjdYRzRnSUNBZ0lDQjBjbUZ1YzJsMGFXOXVPaUFrWkdWbVlYVnNkRlJ5WVc1emFYUnBiMjQ3WEc0Z0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhKdmRHRjBaU2cwWkdWbktUdGNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQW1YMTlzYjJkdklITjJaeXhjYmlBZ0psOWZZblZ5WjJWeUlITjJaeUI3WEc0Z0lDQWdKanBvYjNabGNpeGNiaUFnSUNBbU9tWnZZM1Z6TEZ4dUlDQWdJQ1k2WVdOMGFYWmxJSHRjYmlBZ0lDQWdJSEJoZEdnZ2UxeHVJQ0FnSUNBZ0lDQjBjbUZ1YzJsMGFXOXVPaUFrWkdWbVlYVnNkRlJ5WVc1emFYUnBiMjQ3WEc0Z0lDQWdJQ0FnSUdacGJHdzZJQ1JuYkc5aVlXeERiMnh2Y2xCeWFXMWhjbmxJYjNabGNqdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNCd1lYUm9JSHRjYmlBZ0lDQWdJSFJ5WVc1emFYUnBiMjQ2SUNSa1pXWmhkV3gwVkhKaGJuTnBkR2x2Ymp0Y2JpQWdJQ0FnSUdacGJHdzZJQ1JuYkc5aVlXeERiMnh2Y2xCeWFXMWhjbms3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnSmw5ZlluVnlaMlZ5TFhkeVlYQndaWElnZTF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJtYVhobFpEdGNiaUFnSUNCNkxXbHVaR1Y0T2lBNU9UazVPMXh1SUNBZ0lHSnZkSFJ2YlRvZ01EdGNiaUFnSUNCc1pXWjBPaUF3TzF4dUlDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJQ0FnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2JpQWdJQ0JtYkdWNExXUnBjbVZqZEdsdmJqb2dZMjlzZFcxdU8xeHVJQ0FnSUdwMWMzUnBabmt0WTI5dWRHVnVkRG9nWTJWdWRHVnlPMXh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lHaGxhV2RvZERvZ01UQXdKVHRjYmlBZ0lDQmhibWx0WVhScGIyNHRaSFZ5WVhScGIyNDZJQ1JrWldaaGRXeDBRVzVwYldGMGFXOXVSSFZ5WVhScGIyNDdYRzRnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHVJQ0FnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUhWeWJDZ25MaTR2TGk0dmFXMWhaMlZ6TDIxbGJuVXZiV1Z1ZFMxaVlXTnJaM0p2ZFc1a0xuQnVaeWNwTzF4dUlDQWdJR0poWTJ0bmNtOTFibVF0WVhSMFlXTm9iV1Z1ZERvZ1ptbDRaV1E3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzF3YjNOcGRHbHZiam9nWTJWdWRHVnlJR05sYm5SbGNqdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xYTnBlbVU2SUdOdmRtVnlPMXh1SUNCOVhHNWNiaUFnSmw5ZmQyVnNZMjl0WlN4Y2JpQWdKbDlmZDI5eWF5eGNiaUFnSmw5ZllXSnZkWFFzWEc0Z0lDWmZYM05sY25acFkyVnpMRnh1SUNBbVgxOTBZV3hySUh0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURVeWNIZzdYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJR0p2YkdRN1hHNGdJQ0FnYkdsdVpTMW9aV2xuYUhRNklERXVNbVZ0TzF4dUlDQWdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHVJQ0FnSUhSeVlXNXphWFJwYjI0NklDUmtaV1poZFd4MFZISmhibk5wZEdsdmJqdGNiaUFnSUNCMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUc1dmJtVTdYRzRnSUNBZ2JHVjBkR1Z5TFhOd1lXTnBibWM2SUMweExqRndlRHRjYmlBZ0lDQmpiMnh2Y2pvZ0pHZHNiMkpoYkVOdmJHOXlVSEpwYldGeWVUdGNibHh1SUNBZ0lDWTZhRzkyWlhJc1hHNGdJQ0FnSmpwbWIyTjFjeXhjYmlBZ0lDQW1PbUZqZEdsMlpTQjdYRzRnSUNBZ0lDQjBjbUZ1YzJsMGFXOXVPaUFrWkdWbVlYVnNkRlJ5WVc1emFYUnBiMjQ3WEc0Z0lDQWdJQ0JqYjJ4dmNqb2dKR2RzYjJKaGJFTnZiRzl5VUhKcGJXRnllVWh2ZG1WeU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUNaZmNtVmtJSHRjYmlBZ0lDQWdJR052Ykc5eU9pQWtaMnh2WW1Gc1EyOXNiM0pRY21sdFlYSjVTRzkyWlhJN1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ0psOWZiV1Z1ZFNCN1hHNGdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnSUNCaGJHbG5iaTFqYjI1MFpXNTBPaUJqWlc1MFpYSTdYRzRnSUNBZ1pteGxlQzFrYVhKbFkzUnBiMjQ2SUhKdmR6dGNiaUFnSUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUhOd1lXTmxMV0psZEhkbFpXNDdYRzRnSUNBZ2NHRmtaR2x1WnpvZ016QndlQ0F3TzF4dUlDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjYmx4dUlDQWdJQ1l0YVhSbGJTQjdYRzRnSUNBZ0lDQjBjbUZ1YzJsMGFXOXVPaUFrWkdWbVlYVnNkRlJ5WVc1emFYUnBiMjQ3WEc0Z0lDQWdJQ0IwWlhoMExXUmxZMjl5WVhScGIyNDZJRzV2Ym1VN1hHNWNiaUFnSUNBZ0lDWTZhRzkyWlhJc1hHNGdJQ0FnSUNBbU9tWnZZM1Z6TEZ4dUlDQWdJQ0FnSmpwaFkzUnBkbVVnZTF4dUlDQWdJQ0FnSUNCMGNtRnVjMmwwYVc5dU9pQWtaR1ZtWVhWc2RGUnlZVzV6YVhScGIyNDdYRzRnSUNBZ0lDQWdJSFJ5WVc1elptOXliVG9nYzJ0bGR5Z3RPR1JsWnlrN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDWXRiR2x6ZENCN1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lDQWdJQ0J0WVhndGQybGtkR2c2SURnd0pUdGNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp6b2dNQ0F3SURJMWNIZzdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdKbDlmYlc5aWFXeGxJSHRjYmlBZ0lDQW1MWEJ5YVhaaFkza2dlMXh1SUNBZ0lDQWdabTl1ZEMxbVlXMXBiSGs2SUNkQ1lYTnBaWElnUW05c1pDY3NJSE5oYm5NdGMyVnlhV1k3WEc0Z0lDQWdJQ0JtYjI1MExYTnBlbVU2SURFM2NIZzdYRzRnSUNBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nTmpBd08xeHVJQ0FnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREV1TTJWdE8xeHVJQ0FnSUNBZ2RISmhibk5wZEdsdmJqb2dKR1JsWm1GMWJIUlVjbUZ1YzJsMGFXOXVPMXh1SUNBZ0lDQWdkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQnViMjVsTzF4dUlDQWdJQ0FnYkdWMGRHVnlMWE53WVdOcGJtYzZJREE3WEc0Z0lDQWdJQ0JqYjJ4dmNqb2dKR2RzYjJKaGJFTnZiRzl5VUhKcGJXRnllVHRjYmx4dUlDQWdJQ0FnSmpwb2IzWmxjaXhjYmlBZ0lDQWdJQ1k2Wm05amRYTXNYRzRnSUNBZ0lDQW1PbUZqZEdsMlpTQjdYRzRnSUNBZ0lDQWdJSFJ5WVc1emFYUnBiMjQ2SUNSa1pXWmhkV3gwVkhKaGJuTnBkR2x2Ymp0Y2JpQWdJQ0FnSUNBZ1kyOXNiM0k2SUNSbmJHOWlZV3hEYjJ4dmNsQnlhVzFoY25sSWIzWmxjanRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUgxY2JuMWNibHh1TG1samIyNXpMWGR5WVhCd1pYSWdlMXh1SUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNCbWJHVjRMV1JwY21WamRHbHZiam9nY205M08xeHVJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJSE53WVdObExXVjJaVzVzZVR0Y2JpQWdiV0Y0TFhkcFpIUm9PaUF4TmpCd2VEdGNiaUFnYldGeVoybHVPaUF3SUdGMWRHODdYRzRnSUhCaFpHUnBibWM2SURFMWNIZ2dNQ0F3TzF4dWZWeHVYRzR1YVdOdmJpMXpkbWNnZTF4dUlDQW1YMTlwYm5OMFlXZHlZVzBzWEc0Z0lDWmZYMkpsYUdGdVkyVXNYRzRnSUNaZlgyUnlhV0ppWW14bExGeHVJQ0FtWDE5c2FXNXJaV1JwYmlCN1hHNGdJQ0FnZDJsa2RHZzZJREl3Y0hnN1hHNGdJQ0FnYUdWcFoyaDBPaUF5TUhCNE8xeHVJQ0FnSUdacGJHdzZJQ1JuYkc5aVlXeERiMnh2Y2xCeWFXMWhjbms3WEc0Z0lIMWNibjFjYmx4dUxtbGpiMjRnZTF4dUlDQW1MV2x1YzNSaFozSmhiU3hjYmlBZ0ppMWlaV2hoYm1ObExGeHVJQ0FtTFdSeWFXSmlZbXhsTEZ4dUlDQW1MV3hwYm10bFpHbHVJSHRjYmlBZ0lDQjNhV1IwYURvZ05EQndlRHRjYmlBZ0lDQm9aV2xuYUhRNklEUXdjSGc3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNVEJ3ZUR0Y2JpQWdJQ0IwY21GdWMybDBhVzl1T2lBa1pHVm1ZWFZzZEZSeVlXNXphWFJwYjI0N1hHNWNiaUFnSUNBbU9taHZkbVZ5TEZ4dUlDQWdJQ1k2Wm05amRYTXNYRzRnSUNBZ0pqcGhZM1JwZG1VZ2UxeHVJQ0FnSUNBZ2RISmhibk5wZEdsdmJqb2dKR1JsWm1GMWJIUlVjbUZ1YzJsMGFXOXVPMXh1SUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZaS0Rod2VDazdYRzRnSUNBZ0lDQnZjR0ZqYVhSNU9pQXVPVHRjYmlBZ0lDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklERXdjSGc3WEc0Z0lDQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFrWjJ4dlltRnNRMjlzYjNKUWNtbHRZWEo1U0c5MlpYSTdYRzRnSUNBZ2ZWeHVJQ0I5WEc1OVhHNWNiaTVvYVdSa1pXNGdlMXh1SUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1ZlZ4dVhHNUFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV2x1TFhkcFpIUm9PaUEzTmpod2VDa2dlMXh1SUNBdWFHVmhaR1Z5SUh0Y2JpQWdJQ0FtWDE5aWRYSm5aWEl0ZDNKaGNIQmxjaUI3WEc0Z0lDQWdJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXpNSEI0SURBZ01DQXpNSEI0TzF4dUlDQWdJSDFjYmlBZ2ZWeHVmVnh1WEc1QWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXbHVMWGRwWkhSb09pQXhNREkxY0hncElIdGNiaUFnTG1obFlXUmxjaUI3WEc0Z0lDQWdKbDlmYldWdWRTQjdYRzRnSUNBZ0lDQndZV1JrYVc1bk9pQTBNM0I0SURBN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnSmw5ZmJXOWlhV3hsSUh0Y2JpQWdJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzRnSUNBZ2ZWeHVJQ0I5WEc1OUlpd2lMeThnUTI5c2IzSnpYRzRrWjJ4dlltRnNRMjlzYjNKUWNtbHRZWEo1T2lBalJFUkVNME0zTzF4dUpHZHNiMkpoYkVOdmJHOXlVSEpwYldGeWVVaHZkbVZ5T2lBak9FUXlNekl6TzF4dUpHZHNiMkpoYkVKaFkydG5jbTkxYm1SRGIyeHZjam9nSXpBd01EQXdNRE16TzF4dUpHZHNiMkpoYkVkeVlYbE1ZWGxsY2pvZ0l6QXpNRE13TXp0Y2JseHVMeThnUTI5dWMzUmNiaVJrWldaaGRXeDBWSEpoYm5OcGRHbHZiam9nWVd4c0lDNDBjeUJsWVhObE8xeHVKR1JsWm1GMWJIUkJibWx0WVhScGIyNUVkWEpoZEdsdmJqb2dMalp6T3lJc0lrQnBiWEJ2Y25RZ0p5NHZjbVZ6WlhRbk8xeHVRR2x0Y0c5eWRDQW5MaTh1TGk5amIyMXdiMjVsYm5SekwyWnZiM1JsY2ljN1hHNUFhVzF3YjNKMElDY3VMeTR1TDJOdmJYQnZibVZ1ZEhNdmFHVmhaR1Z5Snp0Y2JrQnBiWEJ2Y25RZ0p5NHVMMk52Ym1acFp5OWpiMjV6ZENjN1hHNWNiaVJuYkc5aVlXeERiMjUwWVdsdVpYSlhhV1IwYURvZ09UQWxPMXh1WEc0cUlIdGNiaUFnWW05NExYTnBlbWx1WnpvZ1ltOXlaR1Z5TFdKdmVEdGNiaUFnYldGeVoybHVPaUF3TzF4dUlDQndZV1JrYVc1bk9pQXdPMXh1SUNCamIyeHZjam9nSTBaR1JrWkdSanRjYm4xY2JseHVMbU52Ym5SaGFXNWxjbDl0WVdsdUlIdGNiaUFnYldsdUxXaGxhV2RvZERvZ01UQXdkbWc3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDUm5iRzlpWVd4Q1lXTnJaM0p2ZFc1a1EyOXNiM0k3WEc1OVhHNWNiaTV3WVdkbExXTnZiblJsYm5RZ2UxeHVJQ0J0WVhKbmFXNDZJREFnWVhWMGJ6dGNiaUFnY0dGa1pHbHVaem9nTUNBek1IQjRPMXh1ZlZ4dVhHNWliMlI1SUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUMxaGNIQnNaUzF6ZVhOMFpXMHNJRUpzYVc1clRXRmpVM2x6ZEdWdFJtOXVkQ3dnVTJWbmIyVWdWVWtzSUZKdlltOTBieXdnU0dWc2RtVjBhV05oSUU1bGRXVXNJRUZ5YVdGc0xDQk9iM1J2SUZOaGJuTXNJSE5oYm5NdGMyVnlhV1lzSUVGd2NHeGxJRU52Ykc5eUlFVnRiMnBwTENCVFpXZHZaU0JWU1NCRmJXOXFhU3dnVTJWbmIyVWdWVWtnVTNsdFltOXNMQ0JPYjNSdklFTnZiRzl5SUVWdGIycHBPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYSmxjR1ZoZERvZ2NtVndaV0YwTFhrN1hHNGdJR0poWTJ0bmNtOTFibVF0Y0c5emFYUnBiMjQ2SUhSdmNDQmpaVzUwWlhJN1hHNGdJR0poWTJ0bmNtOTFibVF0YzJsNlpUb2dZMjkyWlhJN1hHNTlYRzVjYmtCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNklEYzJPSEI0S1NCN1hHNWNibjFjYmx4dVFHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMXBiaTEzYVdSMGFEb2dNVEF5TlhCNEtTQjdYRzRnSUdKdlpIa2dlMXh1SUNBZ0lHSmhZMnRuY205MWJtUXRjbVZ3WldGME9pQnVieTF5WlhCbFlYUTdYRzRnSUNBZ1ltRmphMmR5YjNWdVpDMWhkSFJoWTJodFpXNTBPaUJtYVhobFpEdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xYQnZjMmwwYVc5dU9pQmpaVzUwWlhJZ1kyVnVkR1Z5TzF4dUlDQjlYRzVjYmlBZ0xuQmhaMlV0WTI5dWRHVnVkQ0I3WEc0Z0lDQWdkMmxrZEdnNklDUm5iRzlpWVd4RGIyNTBZV2x1WlhKWGFXUjBhRHRjYmlBZ0lDQndZV1JrYVc1bk9pQXdPMXh1SUNCOVhHNTlJaXdpUUdsdGNHOXlkQ0FuTGk0dlkyOXVabWxuTDJOdmJtWnBaeWM3WEc1Y2JtSnZaSGtnZTF4dUlDQmlZV05yWjNKdmRXNWtMV2x0WVdkbE9pQjFjbXdvSnk0dUx5NHVMMmx0WVdkbGN5OWhZbTkxZEMxdGFXeHJhVzVyTDJKaFkydG5jbTkxYm1RdGRHRmliR1V1Y0c1bkp5azdYRzRnSUdKaFkydG5jbTkxYm1RdGNHOXphWFJwYjI0NklHTmxiblJsY2lCeWFXZG9kRHRjYmx4dWZWeHVYRzVBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldsdUxYZHBaSFJvT2lBeE1ESTFjSGdwSUh0Y2JpQWdZbTlrZVNCN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkMxcGJXRm5aVG9nZFhKc0tDY3VMaTh1TGk5cGJXRm5aWE12WVdKdmRYUXRiV2xzYTJsdWF5OWlZV05yWjNKdmRXNWtMbkJ1WnljcE8xeHVJQ0I5WEc1OUlsMTkgKi9cbiIsIkBrZXlmcmFtZXMgZmFkZUluIHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMFxuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG59XG5cbi5mYWRlSW4ge1xuICBhbmltYXRpb24tbmFtZTogZmFkZUluO1xufVxuXG5Aa2V5ZnJhbWVzIGZhZGVJbkRvd24ge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgLTEwMCUsIDApO1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogbm9uZTtcbiAgfVxufVxuXG4uZmFkZUluRG93biB7XG4gIGFuaW1hdGlvbi1uYW1lOiBmYWRlSW5Eb3duO1xufVxuXG5Aa2V5ZnJhbWVzIGZhZGVJbkxlZnQge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTEwMCUsIDAsIDApO1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogbm9uZTtcbiAgfVxufVxuXG4uZmFkZUluTGVmdCB7XG4gIGFuaW1hdGlvbi1uYW1lOiBmYWRlSW5MZWZ0O1xufVxuXG5Aa2V5ZnJhbWVzIGZhZGVJblJpZ2h0IHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDEwMCUsIDAsIDApO1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogbm9uZTtcbiAgfVxufVxuXG4uZmFkZUluUmlnaHQge1xuICBhbmltYXRpb24tbmFtZTogZmFkZUluUmlnaHQ7XG59XG5cbkBrZXlmcmFtZXMgZmFkZUluVXAge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMTAwJSwgMCk7XG4gIH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNmb3JtOiBub25lO1xuICB9XG59XG5cbi5mYWRlSW5VcCB7XG4gIGFuaW1hdGlvbi1uYW1lOiBmYWRlSW5VcDtcbn0iLCIvKiBodHRwOi8vbWV5ZXJ3ZWIuY29tL2VyaWMvdG9vbHMvY3NzL3Jlc2V0L1xuICAgdjIuMCB8IDIwMTEwMTI2XG4gICBMaWNlbnNlOiBub25lIChwdWJsaWMgZG9tYWluKVxuKi9cbmh0bWwsIGJvZHksIGRpdiwgc3BhbiwgYXBwbGV0LCBvYmplY3QsIGlmcmFtZSxcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHAsIGJsb2NrcXVvdGUsIHByZSxcbmEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSxcbmRlbCwgZGZuLCBlbSwgaW1nLCBpbnMsIGtiZCwgcSwgcywgc2FtcCxcbnNtYWxsLCBzdHJpa2UsIHN0cm9uZywgc3ViLCBzdXAsIHR0LCB2YXIsXG5iLCB1LCBpLCBjZW50ZXIsXG5kbCwgZHQsIGRkLCBvbCwgdWwsIGxpLFxuZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsXG50YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCxcbmFydGljbGUsIGFzaWRlLCBjYW52YXMsIGRldGFpbHMsIGVtYmVkLFxuZmlndXJlLCBmaWdjYXB0aW9uLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLFxubWVudSwgbmF2LCBvdXRwdXQsIHJ1YnksIHNlY3Rpb24sIHN1bW1hcnksXG50aW1lLCBtYXJrLCBhdWRpbywgdmlkZW8ge1xuICBmb250OiBpbmhlcml0O1xuICBmb250LXNpemU6IDEwMCU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICBib3JkZXI6IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cbmFydGljbGUsIGFzaWRlLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsXG5mb290ZXIsIGhlYWRlciwgaGdyb3VwLCBtZW51LCBuYXYsIHNlY3Rpb24ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuYm9keSB7XG4gIGxpbmUtaGVpZ2h0OiAxO1xufVxuXG5vbCwgdWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5ibG9ja3F1b3RlLCBxIHtcbiAgcXVvdGVzOiBub25lO1xufVxuXG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlcixcbnE6YmVmb3JlLCBxOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgY29udGVudDogbm9uZTtcbn1cblxudGFibGUge1xuICBib3JkZXItc3BhY2luZzogMDtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbn1cblxuLmZvb3RlciB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgY29sb3I6IHJlZDtcbn1cblxuQGtleWZyYW1lcyBmYWRlSW4ge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG59XG4uZmFkZUluIHtcbiAgYW5pbWF0aW9uLW5hbWU6IGZhZGVJbjtcbn1cblxuQGtleWZyYW1lcyBmYWRlSW5Eb3duIHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIC0xMDAlLCAwKTtcbiAgfVxuICB0byB7XG4gICAgb3BhY2l0eTogMTtcbiAgICB0cmFuc2Zvcm06IG5vbmU7XG4gIH1cbn1cbi5mYWRlSW5Eb3duIHtcbiAgYW5pbWF0aW9uLW5hbWU6IGZhZGVJbkRvd247XG59XG5cbkBrZXlmcmFtZXMgZmFkZUluTGVmdCB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtMTAwJSwgMCwgMCk7XG4gIH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNmb3JtOiBub25lO1xuICB9XG59XG4uZmFkZUluTGVmdCB7XG4gIGFuaW1hdGlvbi1uYW1lOiBmYWRlSW5MZWZ0O1xufVxuXG5Aa2V5ZnJhbWVzIGZhZGVJblJpZ2h0IHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDEwMCUsIDAsIDApO1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogbm9uZTtcbiAgfVxufVxuLmZhZGVJblJpZ2h0IHtcbiAgYW5pbWF0aW9uLW5hbWU6IGZhZGVJblJpZ2h0O1xufVxuXG5Aa2V5ZnJhbWVzIGZhZGVJblVwIHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDEwMCUsIDApO1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogbm9uZTtcbiAgfVxufVxuLmZhZGVJblVwIHtcbiAgYW5pbWF0aW9uLW5hbWU6IGZhZGVJblVwO1xufVxuXG5Aa2V5ZnJhbWVzIHNsaWRlSW5VcCB7XG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMTAwJSwgMCk7XG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgfVxuICB0byB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgfVxufVxuLnNsaWRlSW5VcCB7XG4gIGFuaW1hdGlvbi1uYW1lOiBzbGlkZUluVXA7XG59XG5cbi5yZXZlcnNlIHtcbiAgYW5pbWF0aW9uLWRpcmVjdGlvbjogcmV2ZXJzZTtcbiAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG59XG5cbi5ncmF5LWxheWVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAtMTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgb3BhY2l0eTogMC4zO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDMwMzAzO1xufVxuXG4uY2xvc2Uge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDQ1cHg7XG4gIGhlaWdodDogNDVweDtcbn1cbi5jbG9zZV9fc3ZnIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNHMgZWFzZTtcbiAgZmlsbDogI0RERDNDNztcbn1cbi5jbG9zZV9fc3ZnOmhvdmVyLCAuY2xvc2VfX3N2Zzpmb2N1cywgLmNsb3NlX19zdmc6YWN0aXZlIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNHMgZWFzZTtcbiAgdHJhbnNmb3JtOiByb3RhdGUoNGRlZyk7XG4gIGZpbGw6ICM4RDIzMjM7XG59XG5cbmhlYWRlciB7XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogMDtcbn1cblxuLmhlYWRlcl9fbG9nbyBzdmcge1xuICB3aWR0aDogMTMwcHg7XG4gIGhlaWdodDogNDVweDtcbn1cbi5oZWFkZXJfX2J1cmdlciBzdmcge1xuICB3aWR0aDogNDVweDtcbiAgaGVpZ2h0OiA0NXB4O1xuICB0cmFuc2l0aW9uOiBhbGwgMC40cyBlYXNlO1xufVxuLmhlYWRlcl9fYnVyZ2VyIHN2Zzpob3ZlciwgLmhlYWRlcl9fYnVyZ2VyIHN2Zzpmb2N1cywgLmhlYWRlcl9fYnVyZ2VyIHN2ZzphY3RpdmUge1xuICB0cmFuc2l0aW9uOiBhbGwgMC40cyBlYXNlO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg0ZGVnKTtcbn1cbi5oZWFkZXJfX2xvZ28gc3ZnOmhvdmVyIHBhdGgsIC5oZWFkZXJfX2xvZ28gc3ZnOmZvY3VzIHBhdGgsIC5oZWFkZXJfX2xvZ28gc3ZnOmFjdGl2ZSBwYXRoLCAuaGVhZGVyX19idXJnZXIgc3ZnOmhvdmVyIHBhdGgsIC5oZWFkZXJfX2J1cmdlciBzdmc6Zm9jdXMgcGF0aCwgLmhlYWRlcl9fYnVyZ2VyIHN2ZzphY3RpdmUgcGF0aCB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjRzIGVhc2U7XG4gIGZpbGw6ICM4RDIzMjM7XG59XG4uaGVhZGVyX19sb2dvIHN2ZyBwYXRoLCAuaGVhZGVyX19idXJnZXIgc3ZnIHBhdGgge1xuICB0cmFuc2l0aW9uOiBhbGwgMC40cyBlYXNlO1xuICBmaWxsOiAjREREM0M3O1xufVxuLmhlYWRlcl9fYnVyZ2VyLXdyYXBwZXIge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDk5OTk7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMC42cztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi8uLi9pbWFnZXMvbWVudS9tZW51LWJhY2tncm91bmQucG5nXCIpO1xuICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IGZpeGVkO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufVxuLmhlYWRlcl9fd2VsY29tZSwgLmhlYWRlcl9fd29yaywgLmhlYWRlcl9fYWJvdXQsIC5oZWFkZXJfX3NlcnZpY2VzLCAuaGVhZGVyX190YWxrIHtcbiAgZm9udC1zaXplOiA1MnB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbGluZS1oZWlnaHQ6IDEuMmVtO1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIHRyYW5zaXRpb246IGFsbCAwLjRzIGVhc2U7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgbGV0dGVyLXNwYWNpbmc6IC0xLjFweDtcbiAgY29sb3I6ICNEREQzQzc7XG59XG4uaGVhZGVyX193ZWxjb21lOmhvdmVyLCAuaGVhZGVyX193ZWxjb21lOmZvY3VzLCAuaGVhZGVyX193ZWxjb21lOmFjdGl2ZSwgLmhlYWRlcl9fd29yazpob3ZlciwgLmhlYWRlcl9fd29yazpmb2N1cywgLmhlYWRlcl9fd29yazphY3RpdmUsIC5oZWFkZXJfX2Fib3V0OmhvdmVyLCAuaGVhZGVyX19hYm91dDpmb2N1cywgLmhlYWRlcl9fYWJvdXQ6YWN0aXZlLCAuaGVhZGVyX19zZXJ2aWNlczpob3ZlciwgLmhlYWRlcl9fc2VydmljZXM6Zm9jdXMsIC5oZWFkZXJfX3NlcnZpY2VzOmFjdGl2ZSwgLmhlYWRlcl9fdGFsazpob3ZlciwgLmhlYWRlcl9fdGFsazpmb2N1cywgLmhlYWRlcl9fdGFsazphY3RpdmUge1xuICB0cmFuc2l0aW9uOiBhbGwgMC40cyBlYXNlO1xuICBjb2xvcjogIzhEMjMyMztcbn1cbi5oZWFkZXJfX3dlbGNvbWVfcmVkLCAuaGVhZGVyX193b3JrX3JlZCwgLmhlYWRlcl9fYWJvdXRfcmVkLCAuaGVhZGVyX19zZXJ2aWNlc19yZWQsIC5oZWFkZXJfX3RhbGtfcmVkIHtcbiAgY29sb3I6ICM4RDIzMjM7XG59XG4uaGVhZGVyX19tZW51IHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24tY29udGVudDogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHBhZGRpbmc6IDMwcHggMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmhlYWRlcl9fbWVudS1pdGVtIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNHMgZWFzZTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuLmhlYWRlcl9fbWVudS1pdGVtOmhvdmVyLCAuaGVhZGVyX19tZW51LWl0ZW06Zm9jdXMsIC5oZWFkZXJfX21lbnUtaXRlbTphY3RpdmUge1xuICB0cmFuc2l0aW9uOiBhbGwgMC40cyBlYXNlO1xuICB0cmFuc2Zvcm06IHNrZXcoLThkZWcpO1xufVxuLmhlYWRlcl9fbWVudS1pdGVtLWxpc3Qge1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiA4MCU7XG4gIHBhZGRpbmc6IDAgMCAyNXB4O1xufVxuLmhlYWRlcl9fbW9iaWxlLXByaXZhY3kge1xuICBmb250LWZhbWlseTogXCJCYXNpZXIgQm9sZFwiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDE3cHg7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjNlbTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNHMgZWFzZTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBsZXR0ZXItc3BhY2luZzogMDtcbiAgY29sb3I6ICNEREQzQzc7XG59XG4uaGVhZGVyX19tb2JpbGUtcHJpdmFjeTpob3ZlciwgLmhlYWRlcl9fbW9iaWxlLXByaXZhY3k6Zm9jdXMsIC5oZWFkZXJfX21vYmlsZS1wcml2YWN5OmFjdGl2ZSB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjRzIGVhc2U7XG4gIGNvbG9yOiAjOEQyMzIzO1xufVxuXG4uaWNvbnMtd3JhcHBlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICBtYXgtd2lkdGg6IDE2MHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZzogMTVweCAwIDA7XG59XG5cbi5pY29uLXN2Z19faW5zdGFncmFtLCAuaWNvbi1zdmdfX2JlaGFuY2UsIC5pY29uLXN2Z19fZHJpYmJibGUsIC5pY29uLXN2Z19fbGlua2VkaW4ge1xuICB3aWR0aDogMjBweDtcbiAgaGVpZ2h0OiAyMHB4O1xuICBmaWxsOiAjREREM0M3O1xufVxuXG4uaWNvbi1pbnN0YWdyYW0sIC5pY29uLWJlaGFuY2UsIC5pY29uLWRyaWJiYmxlLCAuaWNvbi1saW5rZWRpbiB7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIHRyYW5zaXRpb246IGFsbCAwLjRzIGVhc2U7XG59XG4uaWNvbi1pbnN0YWdyYW06aG92ZXIsIC5pY29uLWluc3RhZ3JhbTpmb2N1cywgLmljb24taW5zdGFncmFtOmFjdGl2ZSwgLmljb24tYmVoYW5jZTpob3ZlciwgLmljb24tYmVoYW5jZTpmb2N1cywgLmljb24tYmVoYW5jZTphY3RpdmUsIC5pY29uLWRyaWJiYmxlOmhvdmVyLCAuaWNvbi1kcmliYmJsZTpmb2N1cywgLmljb24tZHJpYmJibGU6YWN0aXZlLCAuaWNvbi1saW5rZWRpbjpob3ZlciwgLmljb24tbGlua2VkaW46Zm9jdXMsIC5pY29uLWxpbmtlZGluOmFjdGl2ZSB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjRzIGVhc2U7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg4cHgpO1xuICBvcGFjaXR5OiAwLjk7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICM4RDIzMjM7XG59XG5cbi5oaWRkZW4ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAuaGVhZGVyX19idXJnZXItd3JhcHBlciB7XG4gICAgYm9yZGVyLXJhZGl1czogMzBweCAwIDAgMzBweDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gIC5oZWFkZXJfX21lbnUge1xuICAgIHBhZGRpbmc6IDQzcHggMDtcbiAgfVxuICAuaGVhZGVyX19tb2JpbGUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGNvbG9yOiAjRkZGRkZGO1xufVxuXG4uY29udGFpbmVyX21haW4ge1xuICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjIpO1xufVxuXG4ucGFnZS1jb250ZW50IHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDAgMzBweDtcbn1cblxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFNlZ29lIFVJLCBSb2JvdG8sIEhlbHZldGljYSBOZXVlLCBBcmlhbCwgTm90byBTYW5zLCBzYW5zLXNlcmlmLCBBcHBsZSBDb2xvciBFbW9qaSwgU2Vnb2UgVUkgRW1vamksIFNlZ29lIFVJIFN5bWJvbCwgTm90byBDb2xvciBFbW9qaTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC15O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3AgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgYm9keSB7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IGZpeGVkO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIH1cbiAgLnBhZ2UtY29udGVudCB7XG4gICAgd2lkdGg6IDkwJTtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG59XG5ib2R5IHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vLi4vaW1hZ2VzL2Fib3V0LW1pbGtpbmsvYmFja2dyb3VuZC10YWJsZS5wbmdcIik7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciByaWdodDtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gIGJvZHkge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uLy4uL2ltYWdlcy9hYm91dC1taWxraW5rL2JhY2tncm91bmQucG5nXCIpO1xuICB9XG59IiwiQGtleWZyYW1lcyBzbGlkZUluVXAge1xuICBmcm9tIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDEwMCUsIDApO1xuICAgIHZpc2liaWxpdHk6IHZpc2libGVcbiAgfVxuICB0byB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKVxuICB9XG59XG5cbi5zbGlkZUluVXAge1xuICBhbmltYXRpb24tbmFtZTogc2xpZGVJblVwXG59IiwiQGltcG9ydCAnLi4vY29uZmlnL2NvbnN0JztcbkBpbXBvcnQgJy4uL2FuaW1hdGlvbnMvZmFkZUluJztcbkBpbXBvcnQgJy4uL2FuaW1hdGlvbnMvc2xpZGVJbic7XG5cbi5yZXZlcnNlIHtcbiAgYW5pbWF0aW9uLWRpcmVjdGlvbjogcmV2ZXJzZTtcbiAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG59XG5cbi5ncmF5LWxheWVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAtMTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgb3BhY2l0eTogMC4zO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ2xvYmFsR3JheUxheWVyO1xufVxuXG4uY2xvc2Uge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDQ1cHg7XG4gIGhlaWdodDogNDVweDtcblxuICAmX19zdmcge1xuICAgIHRyYW5zaXRpb246ICRkZWZhdWx0VHJhbnNpdGlvbjtcbiAgICBmaWxsOiAkZ2xvYmFsQ29sb3JQcmltYXJ5O1xuXG4gICAgJjpob3ZlcixcbiAgICAmOmZvY3VzLFxuICAgICY6YWN0aXZlIHtcbiAgICAgIHRyYW5zaXRpb246ICRkZWZhdWx0VHJhbnNpdGlvbjtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDRkZWcpO1xuICAgICAgZmlsbDogJGdsb2JhbENvbG9yUHJpbWFyeUhvdmVyO1xuICAgIH1cbiAgfVxufVxuXG5oZWFkZXIge1xuICBwb3NpdGlvbjogc3RpY2t5O1xuICB0b3A6IDA7XG59XG5cbi5oZWFkZXIge1xuICAmX19sb2dvIHN2ZyB7XG4gICAgd2lkdGg6IDEzMHB4O1xuICAgIGhlaWdodDogNDVweDtcbiAgfVxuXG4gICZfX2J1cmdlciBzdmcge1xuICAgIHdpZHRoOiA0NXB4O1xuICAgIGhlaWdodDogNDVweDtcbiAgICB0cmFuc2l0aW9uOiAkZGVmYXVsdFRyYW5zaXRpb247XG5cbiAgICAmOmhvdmVyLFxuICAgICY6Zm9jdXMsXG4gICAgJjphY3RpdmUge1xuICAgICAgdHJhbnNpdGlvbjogJGRlZmF1bHRUcmFuc2l0aW9uO1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNGRlZyk7XG4gICAgfVxuICB9XG5cbiAgJl9fbG9nbyBzdmcsXG4gICZfX2J1cmdlciBzdmcge1xuICAgICY6aG92ZXIsXG4gICAgJjpmb2N1cyxcbiAgICAmOmFjdGl2ZSB7XG4gICAgICBwYXRoIHtcbiAgICAgICAgdHJhbnNpdGlvbjogJGRlZmF1bHRUcmFuc2l0aW9uO1xuICAgICAgICBmaWxsOiAkZ2xvYmFsQ29sb3JQcmltYXJ5SG92ZXI7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcGF0aCB7XG4gICAgICB0cmFuc2l0aW9uOiAkZGVmYXVsdFRyYW5zaXRpb247XG4gICAgICBmaWxsOiAkZ2xvYmFsQ29sb3JQcmltYXJ5O1xuICAgIH1cbiAgfVxuXG4gICZfX2J1cmdlci13cmFwcGVyIHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgei1pbmRleDogOTk5OTtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogMDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAkZGVmYXVsdEFuaW1hdGlvbkR1cmF0aW9uO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uLy4uL2ltYWdlcy9tZW51L21lbnUtYmFja2dyb3VuZC5wbmcnKTtcbiAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IGZpeGVkO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgfVxuXG4gICZfX3dlbGNvbWUsXG4gICZfX3dvcmssXG4gICZfX2Fib3V0LFxuICAmX19zZXJ2aWNlcyxcbiAgJl9fdGFsayB7XG4gICAgZm9udC1zaXplOiA1MnB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjJlbTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTAwJTtcbiAgICB0cmFuc2l0aW9uOiAkZGVmYXVsdFRyYW5zaXRpb247XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGxldHRlci1zcGFjaW5nOiAtMS4xcHg7XG4gICAgY29sb3I6ICRnbG9iYWxDb2xvclByaW1hcnk7XG5cbiAgICAmOmhvdmVyLFxuICAgICY6Zm9jdXMsXG4gICAgJjphY3RpdmUge1xuICAgICAgdHJhbnNpdGlvbjogJGRlZmF1bHRUcmFuc2l0aW9uO1xuICAgICAgY29sb3I6ICRnbG9iYWxDb2xvclByaW1hcnlIb3ZlcjtcbiAgICB9XG5cbiAgICAmX3JlZCB7XG4gICAgICBjb2xvcjogJGdsb2JhbENvbG9yUHJpbWFyeUhvdmVyO1xuICAgIH1cbiAgfVxuXG4gICZfX21lbnUge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24tY29udGVudDogY2VudGVyO1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIHBhZGRpbmc6IDMwcHggMDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICAmLWl0ZW0ge1xuICAgICAgdHJhbnNpdGlvbjogJGRlZmF1bHRUcmFuc2l0aW9uO1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXG4gICAgICAmOmhvdmVyLFxuICAgICAgJjpmb2N1cyxcbiAgICAgICY6YWN0aXZlIHtcbiAgICAgICAgdHJhbnNpdGlvbjogJGRlZmF1bHRUcmFuc2l0aW9uO1xuICAgICAgICB0cmFuc2Zvcm06IHNrZXcoLThkZWcpO1xuICAgICAgfVxuXG4gICAgICAmLWxpc3Qge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgbWF4LXdpZHRoOiA4MCU7XG4gICAgICAgIHBhZGRpbmc6IDAgMCAyNXB4O1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gICZfX21vYmlsZSB7XG4gICAgJi1wcml2YWN5IHtcbiAgICAgIGZvbnQtZmFtaWx5OiAnQmFzaWVyIEJvbGQnLCBzYW5zLXNlcmlmO1xuICAgICAgZm9udC1zaXplOiAxN3B4O1xuICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjNlbTtcbiAgICAgIHRyYW5zaXRpb246ICRkZWZhdWx0VHJhbnNpdGlvbjtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIGxldHRlci1zcGFjaW5nOiAwO1xuICAgICAgY29sb3I6ICRnbG9iYWxDb2xvclByaW1hcnk7XG5cbiAgICAgICY6aG92ZXIsXG4gICAgICAmOmZvY3VzLFxuICAgICAgJjphY3RpdmUge1xuICAgICAgICB0cmFuc2l0aW9uOiAkZGVmYXVsdFRyYW5zaXRpb247XG4gICAgICAgIGNvbG9yOiAkZ2xvYmFsQ29sb3JQcmltYXJ5SG92ZXI7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi5pY29ucy13cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XG4gIG1heC13aWR0aDogMTYwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nOiAxNXB4IDAgMDtcbn1cblxuLmljb24tc3ZnIHtcbiAgJl9faW5zdGFncmFtLFxuICAmX19iZWhhbmNlLFxuICAmX19kcmliYmJsZSxcbiAgJl9fbGlua2VkaW4ge1xuICAgIHdpZHRoOiAyMHB4O1xuICAgIGhlaWdodDogMjBweDtcbiAgICBmaWxsOiAkZ2xvYmFsQ29sb3JQcmltYXJ5O1xuICB9XG59XG5cbi5pY29uIHtcbiAgJi1pbnN0YWdyYW0sXG4gICYtYmVoYW5jZSxcbiAgJi1kcmliYmJsZSxcbiAgJi1saW5rZWRpbiB7XG4gICAgd2lkdGg6IDQwcHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgdHJhbnNpdGlvbjogJGRlZmF1bHRUcmFuc2l0aW9uO1xuXG4gICAgJjpob3ZlcixcbiAgICAmOmZvY3VzLFxuICAgICY6YWN0aXZlIHtcbiAgICAgIHRyYW5zaXRpb246ICRkZWZhdWx0VHJhbnNpdGlvbjtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg4cHgpO1xuICAgICAgb3BhY2l0eTogLjk7XG4gICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGdsb2JhbENvbG9yUHJpbWFyeUhvdmVyO1xuICAgIH1cbiAgfVxufVxuXG4uaGlkZGVuIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmhlYWRlciB7XG4gICAgJl9fYnVyZ2VyLXdyYXBwZXIge1xuICAgICAgYm9yZGVyLXJhZGl1czogMzBweCAwIDAgMzBweDtcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gIC5oZWFkZXIge1xuICAgICZfX21lbnUge1xuICAgICAgcGFkZGluZzogNDNweCAwO1xuICAgIH1cblxuICAgICZfX21vYmlsZSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgfVxufSIsIi8vIENvbG9yc1xuJGdsb2JhbENvbG9yUHJpbWFyeTogI0RERDNDNztcbiRnbG9iYWxDb2xvclByaW1hcnlIb3ZlcjogIzhEMjMyMztcbiRnbG9iYWxCYWNrZ3JvdW5kQ29sb3I6ICMwMDAwMDAzMztcbiRnbG9iYWxHcmF5TGF5ZXI6ICMwMzAzMDM7XG5cbi8vIENvbnN0XG4kZGVmYXVsdFRyYW5zaXRpb246IGFsbCAuNHMgZWFzZTtcbiRkZWZhdWx0QW5pbWF0aW9uRHVyYXRpb246IC42czsiLCJAaW1wb3J0ICcuL3Jlc2V0JztcbkBpbXBvcnQgJy4vLi4vY29tcG9uZW50cy9mb290ZXInO1xuQGltcG9ydCAnLi8uLi9jb21wb25lbnRzL2hlYWRlcic7XG5AaW1wb3J0ICcuLi9jb25maWcvY29uc3QnO1xuXG4kZ2xvYmFsQ29udGFpbmVyV2lkdGg6IDkwJTtcblxuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgY29sb3I6ICNGRkZGRkY7XG59XG5cbi5jb250YWluZXJfbWFpbiB7XG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ2xvYmFsQmFja2dyb3VuZENvbG9yO1xufVxuXG4ucGFnZS1jb250ZW50IHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDAgMzBweDtcbn1cblxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFNlZ29lIFVJLCBSb2JvdG8sIEhlbHZldGljYSBOZXVlLCBBcmlhbCwgTm90byBTYW5zLCBzYW5zLXNlcmlmLCBBcHBsZSBDb2xvciBFbW9qaSwgU2Vnb2UgVUkgRW1vamksIFNlZ29lIFVJIFN5bWJvbCwgTm90byBDb2xvciBFbW9qaTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC15O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3AgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuXG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkge1xuICBib2R5IHtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogZml4ZWQ7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgfVxuXG4gIC5wYWdlLWNvbnRlbnQge1xuICAgIHdpZHRoOiAkZ2xvYmFsQ29udGFpbmVyV2lkdGg7XG4gICAgcGFkZGluZzogMDtcbiAgfVxufSJdfQ== */
