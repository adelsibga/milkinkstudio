a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{font:inherit;font-size:100%;margin:0;padding:0;vertical-align:baseline;border:0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-spacing:0;border-collapse:collapse}.footer{font-size:16px;color:red}.header__logo svg{width:130px;height:45px}.header__burger svg{width:45px;height:45px;transition:all .3s ease}.header__burger svg:active,.header__burger svg:focus,.header__burger svg:hover{transition:all .3s ease;transform:rotate(4deg)}.header__burger svg:active path,.header__burger svg:focus path,.header__burger svg:hover path,.header__logo svg:active path,.header__logo svg:focus path,.header__logo svg:hover path{transition:all .3s ease;fill:#8d2323}.header__burger svg path,.header__logo svg path{transition:all .3s ease;fill:#ddd3c7}.header__menu{display:flex;align-content:center;flex-direction:row;justify-content:space-between;padding:30px 0;text-align:center}*{box-sizing:border-box;margin:0;padding:0;color:#fff}.container_main{min-height:100vh;background-color:rgba(0,0,0,.2)}.page-content{margin:0 auto;padding:0 30px}body{font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif;background-repeat:repeat-y;background-position:top;background-size:cover;background-image:url(../../images/about-milkink/background-table.png);background-position:100%}@media screen and (min-width:1025px){.header__menu{padding:43px 0}body{background-repeat:no-repeat;background-attachment:fixed;background-position:50%}.page-content{width:90%;padding:0}body{background-image:url(../../images/about-milkink/background.png)}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFib3V0LW1pbGtpbmsuY3NzIiwiY29tcG9uZW50cy9oZWFkZXIuc2NzcyIsImFib3V0LW1pbGtpbmsvYWJvdXQtbWlsa2luay5jc3MiLCJjb25maWcvX2NvbmZpZy5zY3NzIiwiYWJvdXQtbWlsa2luay9hYm91dC1taWxraW5rLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS0EsMlpDdUNJLGFBQUEsQUMyQ0osZUZDRSxBRURGLFNGQ1ksQUN4Q1osVUFBQSxBQUVJLHdCRHlDRixBQ3pDRSxRQUNFLENEeUNMLEFBSUQsOEVHNUVFLGFBQUEsQ0h3RkQsQUFFRCxLR3RGQSxhQUFBLENId0ZDLEFBRUQsTUVFQSxlQUFBLENGQ0MsQUFFRCxhQUVFLFdHdkZFLENId0ZILEFBRUQsb0RFSUEsV0FBQSxBRTlIQSxZQUFBLENKZ0lDLEFFRUQsTUZDRSxpQkFBa0IsQUk3SHBCLHdCQUFBLENKK0hDLEFBRUQsUUVDQSxlRkNFLEFFREYsU0ZDYSxDQUNaLEFBRUQsa0JBQ0UsWUFBYSxBQUNiLFdBQWEsQ0FDZCxBQUVELG9CQUNFLFdBQVksQUFDWixZQUFhLEFBQ2IsdUJBQTBCLENBQzNCLEFBRUQsK0VBR0Usd0JBQTBCLEFBQzFCLHNCQUF3QixDQUN6QixBQUVELHNMQU1FLHdCQUEwQixBQUMxQixZQUFjLENBQ2YsQUFFRCxnREFFRSx3QkFBMEIsQUFDMUIsWUFBYyxDQUNmLEFBRUQsY0FDRSxhQUFjLEFBQ2QscUJBQXNCLEFBQ3RCLG1CQUFvQixBQUNwQiw4QkFBK0IsQUFDL0IsZUFBZ0IsQUFDaEIsaUJBQW1CLENBQ3BCLEFBRUQsRUFDRSxzQkFBdUIsQUFDdkIsU0FBVSxBQUNWLFVBQVcsQUFDWCxVQUFlLENBQ2hCLEFBRUQsZ0JBQ0UsaUJBQWtCLEFBQ2xCLCtCQUFxQyxDQUN0QyxBQUVELGNBQ0UsY0FBZSxBQUNmLGNBQWdCLENBQ2pCLEFBRUQsS0FDRSx1R0FBcUwsQUFDckwsMkJBQTRCLEFBQzVCLHdCQUFnQyxBQUNoQyxzQkFBdUIsQUFJdkIsc0VBQXlFLEFBQ3pFLHdCQUFrQyxDQUpuQyxBQU9ELHFDQUNFLGNBQ0UsY0FBZ0IsQ0FDakIsQUFFRCxLQUNFLDRCQUE2QixBQUM3Qiw0QkFBNkIsQUFDN0IsdUJBQW1DLENBQ3BDLEFBRUQsY0FDRSxVQUFXLEFBQ1gsU0FBVyxDQUNaLEFBRUQsS0FDRSwrREFBbUUsQ0FDcEUsQ0FDRiIsImZpbGUiOiJhYm91dC1taWxraW5rL2Fib3V0LW1pbGtpbmsubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGh0dHA6Ly9tZXllcndlYi5jb20vZXJpYy90b29scy9jc3MvcmVzZXQvXG4gICB2Mi4wIHwgMjAxMTAxMjZcbiAgIExpY2Vuc2U6IG5vbmUgKHB1YmxpYyBkb21haW4pXG4qL1xuXG5odG1sLFxuYm9keSxcbmRpdixcbnNwYW4sXG5hcHBsZXQsXG5vYmplY3QsXG5pZnJhbWUsXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYsXG5wLFxuYmxvY2txdW90ZSxcbnByZSxcbmEsXG5hYmJyLFxuYWNyb255bSxcbmFkZHJlc3MsXG5iaWcsXG5jaXRlLFxuY29kZSxcbmRlbCxcbmRmbixcbmVtLFxuaW1nLFxuaW5zLFxua2JkLFxucSxcbnMsXG5zYW1wLFxuc21hbGwsXG5zdHJpa2UsXG5zdHJvbmcsXG5zdWIsXG5zdXAsXG50dCxcbnZhcixcbmIsXG51LFxuaSxcbmNlbnRlcixcbmRsLFxuZHQsXG5kZCxcbm9sLFxudWwsXG5saSxcbmZpZWxkc2V0LFxuZm9ybSxcbmxhYmVsLFxubGVnZW5kLFxudGFibGUsXG5jYXB0aW9uLFxudGJvZHksXG50Zm9vdCxcbnRoZWFkLFxudHIsXG50aCxcbnRkLFxuYXJ0aWNsZSxcbmFzaWRlLFxuY2FudmFzLFxuZGV0YWlscyxcbmVtYmVkLFxuZmlndXJlLFxuZmlnY2FwdGlvbixcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1lbnUsXG5uYXYsXG5vdXRwdXQsXG5ydWJ5LFxuc2VjdGlvbixcbnN1bW1hcnksXG50aW1lLFxubWFyayxcbmF1ZGlvLFxudmlkZW8ge1xuICBmb250OiBpbmhlcml0O1xuICBmb250LXNpemU6IDEwMCU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICBib3JkZXI6IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tZW51LFxubmF2LFxuc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5ib2R5IHtcbiAgbGluZS1oZWlnaHQ6IDE7XG59XG5cbm9sLFxudWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5ibG9ja3F1b3RlLFxucSB7XG4gIHF1b3Rlczogbm9uZTtcbn1cblxuYmxvY2txdW90ZTpiZWZvcmUsXG5ibG9ja3F1b3RlOmFmdGVyLFxucTpiZWZvcmUsXG5xOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgY29udGVudDogbm9uZTtcbn1cblxudGFibGUge1xuICBib3JkZXItc3BhY2luZzogMDtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbn1cblxuLmZvb3RlciB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgY29sb3I6IHJlZDtcbn1cblxuLmhlYWRlcl9fbG9nbyBzdmcge1xuICB3aWR0aDogMTMwcHg7XG4gIGhlaWdodDogNDVweDtcbn1cblxuLmhlYWRlcl9fYnVyZ2VyIHN2ZyB7XG4gIHdpZHRoOiA0NXB4O1xuICBoZWlnaHQ6IDQ1cHg7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG59XG5cbi5oZWFkZXJfX2J1cmdlciBzdmc6aG92ZXIsXG4uaGVhZGVyX19idXJnZXIgc3ZnOmZvY3VzLFxuLmhlYWRlcl9fYnVyZ2VyIHN2ZzphY3RpdmUge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg0ZGVnKTtcbn1cblxuLmhlYWRlcl9fbG9nbyBzdmc6aG92ZXIgcGF0aCxcbi5oZWFkZXJfX2xvZ28gc3ZnOmZvY3VzIHBhdGgsXG4uaGVhZGVyX19sb2dvIHN2ZzphY3RpdmUgcGF0aCxcbi5oZWFkZXJfX2J1cmdlciBzdmc6aG92ZXIgcGF0aCxcbi5oZWFkZXJfX2J1cmdlciBzdmc6Zm9jdXMgcGF0aCxcbi5oZWFkZXJfX2J1cmdlciBzdmc6YWN0aXZlIHBhdGgge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICBmaWxsOiAjOEQyMzIzO1xufVxuXG4uaGVhZGVyX19sb2dvIHN2ZyBwYXRoLFxuLmhlYWRlcl9fYnVyZ2VyIHN2ZyBwYXRoIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgZmlsbDogI0RERDNDNztcbn1cblxuLmhlYWRlcl9fbWVudSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBwYWRkaW5nOiAzMHB4IDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgY29sb3I6ICNGRkZGRkY7XG59XG5cbi5jb250YWluZXJfbWFpbiB7XG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMik7XG59XG5cbi5wYWdlLWNvbnRlbnQge1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZzogMCAzMHB4O1xufVxuXG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgU2Vnb2UgVUksIFJvYm90bywgSGVsdmV0aWNhIE5ldWUsIEFyaWFsLCBOb3RvIFNhbnMsIHNhbnMtc2VyaWYsIEFwcGxlIENvbG9yIEVtb2ppLCBTZWdvZSBVSSBFbW9qaSwgU2Vnb2UgVUkgU3ltYm9sLCBOb3RvIENvbG9yIEVtb2ppO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IHRvcCBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbmJvZHkge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi8uLi9pbWFnZXMvYWJvdXQtbWlsa2luay9iYWNrZ3JvdW5kLXRhYmxlLnBuZ1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIHJpZ2h0O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgLmhlYWRlcl9fbWVudSB7XG4gICAgcGFkZGluZzogNDNweCAwO1xuICB9XG5cbiAgYm9keSB7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IGZpeGVkO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIH1cblxuICAucGFnZS1jb250ZW50IHtcbiAgICB3aWR0aDogOTAlO1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cblxuICBib2R5IHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi8uLi9pbWFnZXMvYWJvdXQtbWlsa2luay9iYWNrZ3JvdW5kLnBuZ1wiKTtcbiAgfVxufVxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbU52Ym1acFp5OWZjbVZ6WlhRdWMyTnpjeUlzSW1GaWIzVjBMVzFwYkd0cGJtc3ZZV0p2ZFhRdGJXbHNhMmx1YXk1amMzTWlMQ0pqYjIxd2IyNWxiblJ6TDJadmIzUmxjaTV6WTNOeklpd2lZMjl0Y0c5dVpXNTBjeTlvWldGa1pYSXVjMk56Y3lJc0ltTnZibVpwWnk5ZlkyOXNiM0p6TG5OamMzTWlMQ0pqYjI1bWFXY3ZYMk52Ym1acFp5NXpZM056SWl3aVlXSnZkWFF0Yldsc2EybHVheTloWW05MWRDMXRhV3hyYVc1ckxuTmpjM01pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFN096dERRVUZCTzBGQlMwRTdPenM3T3pzN096czdPenM3UlVGaFJTeGhRVUZCTzBWQlEwRXNaVUZCUVR0RlFVTkJMRk5CUVVFN1JVRkRRU3hWUVVGQk8wVkJRMEVzZDBKQlFVRTdSVUZEUVN4VFFVRkJPMEZEUVVZN08wRkVSMEVzWjBSQlFVRTdRVUZEUVRzN1JVRkZSU3hqUVVGQk8wRkRRVVk3TzBGRVIwRTdSVUZEUlN4alFVRkJPMEZEUVVZN08wRkVSMEU3UlVGRFJTeG5Ra0ZCUVR0QlEwRkdPenRCUkVkQk8wVkJRMFVzV1VGQlFUdEJRMEZHT3p0QlJFZEJPenRGUVVWRkxGZEJRVUU3UlVGRFFTeGhRVUZCTzBGRFFVWTdPMEZFUjBFN1JVRkRSU3hwUWtGQlFUdEZRVU5CTEhsQ1FVRkJPMEZEUVVZN08wRkRjRVJCTzBWQlEwVXNaVUZCUVR0RlFVTkJMRlZCUVVFN1FVUjFSRVk3TzBGRmRFUkZPMFZCUTBVc1dVRkJRVHRGUVVOQkxGbEJRVUU3UVVaNVJFbzdRVVYwUkVVN1JVRkRSU3hYUVVGQk8wVkJRMEVzV1VGQlFUdEZRVU5CTEhsQ1FVRkJPMEZHZDBSS08wRkZkRVJKTzBWQlIwVXNlVUpCUVVFN1JVRkRRU3gxUWtGQlFUdEJSbk5FVGp0QlJUZERUVHRGUVVORkxIbENRVUZCTzBWQlEwRXNZVU16UW10Q08wRklNRVV4UWp0QlJUTkRTVHRGUVVORkxIbENRVUZCTzBWQlEwRXNZVU5zUTJVN1FVZ3JSWEpDTzBGRmVrTkZPMFZCUTBVc1lVRkJRVHRGUVVOQkxIRkNRVUZCTzBWQlEwRXNiVUpCUVVFN1JVRkRRU3c0UWtGQlFUdEZRVU5CTEdWQlFVRTdSVUZEUVN4clFrRkJRVHRCUmpKRFNqczdRVVYyUTBFN1JVRkZTVHRKUVVORkxHVkJRVUU3UlVaNVEwbzdRVUZEUmp0QlNYUkdRVHRGUVVORkxITkNRVUZCTzBWQlEwRXNVMEZCUVR0RlFVTkJMRlZCUVVFN1JVRkRRU3hqUVVGQk8wRktkMFpHT3p0QlNYSkdRVHRGUVVORkxHbENRVUZCTzBWQlEwRXNiME5FWkhOQ08wRkljMGQ0UWpzN1FVbHlSa0U3UlVGRFJTeGpRVUZCTzBWQlEwRXNaVUZCUVR0QlNuZEdSanM3UVVseVJrRTdSVUZEUlN4dlRFRkJRVHRGUVVOQkxESkNRVUZCTzBWQlEwRXNLMEpCUVVFN1JVRkRRU3h6UWtGQlFUdEJTbmRHUmpzN1FVbHlSa0U3UlVGRFJUdEpRVU5GTERSQ1FVRkJPMGxCUTBFc05FSkJRVUU3U1VGRFFTeHJRMEZCUVR0RlNuZEdSanRGU1hKR1FUdEpRVU5GTEZWQmJFTnRRanRKUVcxRGJrSXNWVUZCUVR0RlNuVkdSanRCUVVOR08wRkxPVWhCTzBWQlEwVXNkMFZCUVVFN1JVRkRRU3hwUTBGQlFUdEJUR2RKUmpzN1FVczFTRUU3UlVGRFJUdEpRVU5GTEd0RlFVRkJPMFZNSzBoR08wRkJRMFlpTENKbWFXeGxJam9pWVdKdmRYUXRiV2xzYTJsdWF5OWhZbTkxZEMxdGFXeHJhVzVyTG1OemN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJaThxSUdoMGRIQTZMeTl0WlhsbGNuZGxZaTVqYjIwdlpYSnBZeTkwYjI5c2N5OWpjM012Y21WelpYUXZYRzRnSUNCMk1pNHdJSHdnTWpBeE1UQXhNalpjYmlBZ0lFeHBZMlZ1YzJVNklHNXZibVVnS0hCMVlteHBZeUJrYjIxaGFXNHBYRzRxTDF4dVhHNW9kRzFzTENCaWIyUjVMQ0JrYVhZc0lITndZVzRzSUdGd2NHeGxkQ3dnYjJKcVpXTjBMQ0JwWm5KaGJXVXNYRzVvTVN3Z2FESXNJR2d6TENCb05Dd2dhRFVzSUdnMkxDQndMQ0JpYkc5amEzRjFiM1JsTENCd2NtVXNYRzVoTENCaFltSnlMQ0JoWTNKdmJubHRMQ0JoWkdSeVpYTnpMQ0JpYVdjc0lHTnBkR1VzSUdOdlpHVXNYRzVrWld3c0lHUm1iaXdnWlcwc0lHbHRaeXdnYVc1ekxDQnJZbVFzSUhFc0lITXNJSE5oYlhBc1hHNXpiV0ZzYkN3Z2MzUnlhV3RsTENCemRISnZibWNzSUhOMVlpd2djM1Z3TENCMGRDd2dkbUZ5TEZ4dVlpd2dkU3dnYVN3Z1kyVnVkR1Z5TEZ4dVpHd3NJR1IwTENCa1pDd2diMndzSUhWc0xDQnNhU3hjYm1acFpXeGtjMlYwTENCbWIzSnRMQ0JzWVdKbGJDd2diR1ZuWlc1a0xGeHVkR0ZpYkdVc0lHTmhjSFJwYjI0c0lIUmliMlI1TENCMFptOXZkQ3dnZEdobFlXUXNJSFJ5TENCMGFDd2dkR1FzWEc1aGNuUnBZMnhsTENCaGMybGtaU3dnWTJGdWRtRnpMQ0JrWlhSaGFXeHpMQ0JsYldKbFpDeGNibVpwWjNWeVpTd2dabWxuWTJGd2RHbHZiaXdnWm05dmRHVnlMQ0JvWldGa1pYSXNJR2huY205MWNDeGNibTFsYm5Vc0lHNWhkaXdnYjNWMGNIVjBMQ0J5ZFdKNUxDQnpaV04wYVc5dUxDQnpkVzF0WVhKNUxGeHVkR2x0WlN3Z2JXRnlheXdnWVhWa2FXOHNJSFpwWkdWdklIdGNiaUFnWm05dWREb2dhVzVvWlhKcGREdGNiaUFnWm05dWRDMXphWHBsT2lBeE1EQWxPMXh1SUNCdFlYSm5hVzQ2SURBN1hHNGdJSEJoWkdScGJtYzZJREE3WEc0Z0lIWmxjblJwWTJGc0xXRnNhV2R1T2lCaVlYTmxiR2x1WlR0Y2JpQWdZbTl5WkdWeU9pQXdPMXh1ZlZ4dVhHNHZLaUJJVkUxTU5TQmthWE53YkdGNUxYSnZiR1VnY21WelpYUWdabTl5SUc5c1pHVnlJR0p5YjNkelpYSnpJQ292WEc1aGNuUnBZMnhsTENCaGMybGtaU3dnWkdWMFlXbHNjeXdnWm1sblkyRndkR2x2Yml3Z1ptbG5kWEpsTEZ4dVptOXZkR1Z5TENCb1pXRmtaWElzSUdobmNtOTFjQ3dnYldWdWRTd2dibUYyTENCelpXTjBhVzl1SUh0Y2JpQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNTlYRzVjYm1KdlpIa2dlMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dNVHRjYm4xY2JseHViMndzSUhWc0lIdGNiaUFnYkdsemRDMXpkSGxzWlRvZ2JtOXVaVHRjYm4xY2JseHVZbXh2WTJ0eGRXOTBaU3dnY1NCN1hHNGdJSEYxYjNSbGN6b2dibTl1WlR0Y2JuMWNibHh1WW14dlkydHhkVzkwWlRwaVpXWnZjbVVzSUdKc2IyTnJjWFZ2ZEdVNllXWjBaWElzWEc1eE9tSmxabTl5WlN3Z2NUcGhablJsY2lCN1hHNGdJR052Ym5SbGJuUTZJQ2NuTzF4dUlDQmpiMjUwWlc1ME9pQnViMjVsTzF4dWZWeHVYRzUwWVdKc1pTQjdYRzRnSUdKdmNtUmxjaTF6Y0dGamFXNW5PaUF3TzF4dUlDQmliM0prWlhJdFkyOXNiR0Z3YzJVNklHTnZiR3hoY0hObE8xeHVmU0lzSWk4cUlHaDBkSEE2THk5dFpYbGxjbmRsWWk1amIyMHZaWEpwWXk5MGIyOXNjeTlqYzNNdmNtVnpaWFF2WEc0Z0lDQjJNaTR3SUh3Z01qQXhNVEF4TWpaY2JpQWdJRXhwWTJWdWMyVTZJRzV2Ym1VZ0tIQjFZbXhwWXlCa2IyMWhhVzRwWEc0cUwxeHVhSFJ0YkN3Z1ltOWtlU3dnWkdsMkxDQnpjR0Z1TENCaGNIQnNaWFFzSUc5aWFtVmpkQ3dnYVdaeVlXMWxMRnh1YURFc0lHZ3lMQ0JvTXl3Z2FEUXNJR2cxTENCb05pd2djQ3dnWW14dlkydHhkVzkwWlN3Z2NISmxMRnh1WVN3Z1lXSmljaXdnWVdOeWIyNTViU3dnWVdSa2NtVnpjeXdnWW1sbkxDQmphWFJsTENCamIyUmxMRnh1WkdWc0xDQmtabTRzSUdWdExDQnBiV2NzSUdsdWN5d2dhMkprTENCeExDQnpMQ0J6WVcxd0xGeHVjMjFoYkd3c0lITjBjbWxyWlN3Z2MzUnliMjVuTENCemRXSXNJSE4xY0N3Z2RIUXNJSFpoY2l4Y2JtSXNJSFVzSUdrc0lHTmxiblJsY2l4Y2JtUnNMQ0JrZEN3Z1pHUXNJRzlzTENCMWJDd2diR2tzWEc1bWFXVnNaSE5sZEN3Z1ptOXliU3dnYkdGaVpXd3NJR3hsWjJWdVpDeGNiblJoWW14bExDQmpZWEIwYVc5dUxDQjBZbTlrZVN3Z2RHWnZiM1FzSUhSb1pXRmtMQ0IwY2l3Z2RHZ3NJSFJrTEZ4dVlYSjBhV05zWlN3Z1lYTnBaR1VzSUdOaGJuWmhjeXdnWkdWMFlXbHNjeXdnWlcxaVpXUXNYRzVtYVdkMWNtVXNJR1pwWjJOaGNIUnBiMjRzSUdadmIzUmxjaXdnYUdWaFpHVnlMQ0JvWjNKdmRYQXNYRzV0Wlc1MUxDQnVZWFlzSUc5MWRIQjFkQ3dnY25WaWVTd2djMlZqZEdsdmJpd2djM1Z0YldGeWVTeGNiblJwYldVc0lHMWhjbXNzSUdGMVpHbHZMQ0IyYVdSbGJ5QjdYRzRnSUdadmJuUTZJR2x1YUdWeWFYUTdYRzRnSUdadmJuUXRjMmw2WlRvZ01UQXdKVHRjYmlBZ2JXRnlaMmx1T2lBd08xeHVJQ0J3WVdSa2FXNW5PaUF3TzF4dUlDQjJaWEowYVdOaGJDMWhiR2xuYmpvZ1ltRnpaV3hwYm1VN1hHNGdJR0p2Y21SbGNqb2dNRHRjYm4xY2JseHVMeW9nU0ZSTlREVWdaR2x6Y0d4aGVTMXliMnhsSUhKbGMyVjBJR1p2Y2lCdmJHUmxjaUJpY205M2MyVnljeUFxTDF4dVlYSjBhV05zWlN3Z1lYTnBaR1VzSUdSbGRHRnBiSE1zSUdacFoyTmhjSFJwYjI0c0lHWnBaM1Z5WlN4Y2JtWnZiM1JsY2l3Z2FHVmhaR1Z5TENCb1ozSnZkWEFzSUcxbGJuVXNJRzVoZGl3Z2MyVmpkR2x2YmlCN1hHNGdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVmVnh1WEc1aWIyUjVJSHRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREU3WEc1OVhHNWNibTlzTENCMWJDQjdYRzRnSUd4cGMzUXRjM1I1YkdVNklHNXZibVU3WEc1OVhHNWNibUpzYjJOcmNYVnZkR1VzSUhFZ2UxeHVJQ0J4ZFc5MFpYTTZJRzV2Ym1VN1hHNTlYRzVjYm1Kc2IyTnJjWFZ2ZEdVNlltVm1iM0psTENCaWJHOWphM0YxYjNSbE9tRm1kR1Z5TEZ4dWNUcGlaV1p2Y21Vc0lIRTZZV1owWlhJZ2UxeHVJQ0JqYjI1MFpXNTBPaUJjSWx3aU8xeHVJQ0JqYjI1MFpXNTBPaUJ1YjI1bE8xeHVmVnh1WEc1MFlXSnNaU0I3WEc0Z0lHSnZjbVJsY2kxemNHRmphVzVuT2lBd08xeHVJQ0JpYjNKa1pYSXRZMjlzYkdGd2MyVTZJR052Ykd4aGNITmxPMXh1ZlZ4dVhHNHVabTl2ZEdWeUlIdGNiaUFnWm05dWRDMXphWHBsT2lBeE5uQjRPMXh1SUNCamIyeHZjam9nY21Wa08xeHVmVnh1WEc0dWFHVmhaR1Z5WDE5c2IyZHZJSE4yWnlCN1hHNGdJSGRwWkhSb09pQXhNekJ3ZUR0Y2JpQWdhR1ZwWjJoME9pQTBOWEI0TzF4dWZWeHVMbWhsWVdSbGNsOWZZblZ5WjJWeUlITjJaeUI3WEc0Z0lIZHBaSFJvT2lBME5YQjRPMXh1SUNCb1pXbG5hSFE2SURRMWNIZzdYRzRnSUhSeVlXNXphWFJwYjI0NklHRnNiQ0F3TGpOeklHVmhjMlU3WEc1OVhHNHVhR1ZoWkdWeVgxOWlkWEpuWlhJZ2MzWm5PbWh2ZG1WeUxDQXVhR1ZoWkdWeVgxOWlkWEpuWlhJZ2MzWm5PbVp2WTNWekxDQXVhR1ZoWkdWeVgxOWlkWEpuWlhJZ2MzWm5PbUZqZEdsMlpTQjdYRzRnSUhSeVlXNXphWFJwYjI0NklHRnNiQ0F3TGpOeklHVmhjMlU3WEc0Z0lIUnlZVzV6Wm05eWJUb2djbTkwWVhSbEtEUmtaV2NwTzF4dWZWeHVMbWhsWVdSbGNsOWZiRzluYnlCemRtYzZhRzkyWlhJZ2NHRjBhQ3dnTG1obFlXUmxjbDlmYkc5bmJ5QnpkbWM2Wm05amRYTWdjR0YwYUN3Z0xtaGxZV1JsY2w5ZmJHOW5ieUJ6ZG1jNllXTjBhWFpsSUhCaGRHZ3NJQzVvWldGa1pYSmZYMkoxY21kbGNpQnpkbWM2YUc5MlpYSWdjR0YwYUN3Z0xtaGxZV1JsY2w5ZlluVnlaMlZ5SUhOMlp6cG1iMk4xY3lCd1lYUm9MQ0F1YUdWaFpHVnlYMTlpZFhKblpYSWdjM1puT21GamRHbDJaU0J3WVhSb0lIdGNiaUFnZEhKaGJuTnBkR2x2YmpvZ1lXeHNJREF1TTNNZ1pXRnpaVHRjYmlBZ1ptbHNiRG9nSXpoRU1qTXlNenRjYm4xY2JpNW9aV0ZrWlhKZlgyeHZaMjhnYzNabklIQmhkR2dzSUM1b1pXRmtaWEpmWDJKMWNtZGxjaUJ6ZG1jZ2NHRjBhQ0I3WEc0Z0lIUnlZVzV6YVhScGIyNDZJR0ZzYkNBd0xqTnpJR1ZoYzJVN1hHNGdJR1pwYkd3NklDTkVSRVF6UXpjN1hHNTlYRzR1YUdWaFpHVnlYMTl0Wlc1MUlIdGNiaUFnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnWVd4cFoyNHRZMjl1ZEdWdWREb2dZMlZ1ZEdWeU8xeHVJQ0JtYkdWNExXUnBjbVZqZEdsdmJqb2djbTkzTzF4dUlDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklITndZV05sTFdKbGRIZGxaVzQ3WEc0Z0lIQmhaR1JwYm1jNklETXdjSGdnTUR0Y2JpQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh1ZlZ4dVhHNUFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV2x1TFhkcFpIUm9PaUF4TURJMWNIZ3BJSHRjYmlBZ0xtaGxZV1JsY2w5ZmJXVnVkU0I3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dORE53ZUNBd08xeHVJQ0I5WEc1OVhHNHFJSHRjYmlBZ1ltOTRMWE5wZW1sdVp6b2dZbTl5WkdWeUxXSnZlRHRjYmlBZ2JXRnlaMmx1T2lBd08xeHVJQ0J3WVdSa2FXNW5PaUF3TzF4dUlDQmpiMnh2Y2pvZ0kwWkdSa1pHUmp0Y2JuMWNibHh1TG1OdmJuUmhhVzVsY2w5dFlXbHVJSHRjYmlBZ2JXbHVMV2hsYVdkb2REb2dNVEF3ZG1nN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSEpuWW1Fb01Dd2dNQ3dnTUN3Z01DNHlLVHRjYm4xY2JseHVMbkJoWjJVdFkyOXVkR1Z1ZENCN1hHNGdJRzFoY21kcGJqb2dNQ0JoZFhSdk8xeHVJQ0J3WVdSa2FXNW5PaUF3SURNd2NIZzdYRzU5WEc1Y2JtSnZaSGtnZTF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nTFdGd2NHeGxMWE41YzNSbGJTd2dRbXhwYm10TllXTlRlWE4wWlcxR2IyNTBMQ0JUWldkdlpTQlZTU3dnVW05aWIzUnZMQ0JJWld4MlpYUnBZMkVnVG1WMVpTd2dRWEpwWVd3c0lFNXZkRzhnVTJGdWN5d2djMkZ1Y3kxelpYSnBaaXdnUVhCd2JHVWdRMjlzYjNJZ1JXMXZhbWtzSUZObFoyOWxJRlZKSUVWdGIycHBMQ0JUWldkdlpTQlZTU0JUZVcxaWIyd3NJRTV2ZEc4Z1EyOXNiM0lnUlcxdmFtazdYRzRnSUdKaFkydG5jbTkxYm1RdGNtVndaV0YwT2lCeVpYQmxZWFF0ZVR0Y2JpQWdZbUZqYTJkeWIzVnVaQzF3YjNOcGRHbHZiam9nZEc5d0lHTmxiblJsY2p0Y2JpQWdZbUZqYTJkeWIzVnVaQzF6YVhwbE9pQmpiM1psY2p0Y2JuMWNibHh1UUcxbFpHbGhJSE5qY21WbGJpQmhibVFnS0cxcGJpMTNhV1IwYURvZ01UQXlOWEI0S1NCN1hHNGdJR0p2WkhrZ2UxeHVJQ0FnSUdKaFkydG5jbTkxYm1RdGNtVndaV0YwT2lCdWJ5MXlaWEJsWVhRN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkMxaGRIUmhZMmh0Wlc1ME9pQm1hWGhsWkR0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFhCdmMybDBhVzl1T2lCalpXNTBaWElnWTJWdWRHVnlPMXh1SUNCOVhHNGdJQzV3WVdkbExXTnZiblJsYm5RZ2UxeHVJQ0FnSUhkcFpIUm9PaUE1TUNVN1hHNGdJQ0FnY0dGa1pHbHVaem9nTUR0Y2JpQWdmVnh1ZlZ4dVltOWtlU0I3WEc0Z0lHSmhZMnRuY205MWJtUXRhVzFoWjJVNklIVnliQ2hjSWk0dUx5NHVMMmx0WVdkbGN5OWhZbTkxZEMxdGFXeHJhVzVyTDJKaFkydG5jbTkxYm1RdGRHRmliR1V1Y0c1blhDSXBPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYQnZjMmwwYVc5dU9pQmpaVzUwWlhJZ2NtbG5hSFE3WEc1OVhHNWNia0J0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SURFd01qVndlQ2tnZTF4dUlDQmliMlI1SUh0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFdsdFlXZGxPaUIxY213b1hDSXVMaTh1TGk5cGJXRm5aWE12WVdKdmRYUXRiV2xzYTJsdWF5OWlZV05yWjNKdmRXNWtMbkJ1WjF3aUtUdGNiaUFnZlZ4dWZTSXNJaTVtYjI5MFpYSWdlMXh1SUNCbWIyNTBMWE5wZW1VNklERTJjSGc3WEc0Z0lHTnZiRzl5T2lCeVpXUTdYRzU5SWl3aVFHbHRjRzl5ZENBbkxpNHZZMjl1Wm1sbkwyTnZiRzl5Y3ljN1hHNWNiaTVvWldGa1pYSWdlMXh1SUNBbVgxOXNiMmR2SUhOMlp5QjdYRzRnSUNBZ2QybGtkR2c2SURFek1IQjRPMXh1SUNBZ0lHaGxhV2RvZERvZ05EVndlRHRjYmlBZ2ZWeHVYRzRnSUNaZlgySjFjbWRsY2lCemRtY2dlMXh1SUNBZ0lIZHBaSFJvT2lBME5YQjRPMXh1SUNBZ0lHaGxhV2RvZERvZ05EVndlRHRjYmlBZ0lDQjBjbUZ1YzJsMGFXOXVPaUJoYkd3Z0xqTnpJR1ZoYzJVN1hHNWNiaUFnSUNBbU9taHZkbVZ5TEZ4dUlDQWdJQ1k2Wm05amRYTXNYRzRnSUNBZ0pqcGhZM1JwZG1VZ2UxeHVJQ0FnSUNBZ2RISmhibk5wZEdsdmJqb2dZV3hzSUM0emN5QmxZWE5sTzF4dUlDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCeWIzUmhkR1VvTkdSbFp5azdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdKbDlmYkc5bmJ5QnpkbWNzWEc0Z0lDWmZYMkoxY21kbGNpQnpkbWNnZTF4dUlDQWdJQ1k2YUc5MlpYSXNYRzRnSUNBZ0pqcG1iMk4xY3l4Y2JpQWdJQ0FtT21GamRHbDJaU0I3WEc0Z0lDQWdJQ0J3WVhSb0lIdGNiaUFnSUNBZ0lDQWdkSEpoYm5OcGRHbHZiam9nWVd4c0lDNHpjeUJsWVhObE8xeHVJQ0FnSUNBZ0lDQm1hV3hzT2lBa1oyeHZZbUZzUTI5c2IzSlFjbWx0WVhKNVNHOTJaWEk3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjR0YwYUNCN1hHNGdJQ0FnSUNCMGNtRnVjMmwwYVc5dU9pQmhiR3dnTGpOeklHVmhjMlU3WEc0Z0lDQWdJQ0JtYVd4c09pQWtaMnh2WW1Gc1EyOXNiM0pRY21sdFlYSjVPMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJQ1pmWDIxbGJuVWdlMXh1SUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lDQWdZV3hwWjI0dFkyOXVkR1Z1ZERvZ1kyVnVkR1Z5TzF4dUlDQWdJR1pzWlhndFpHbHlaV04wYVc5dU9pQnliM2M3WEc0Z0lDQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQnpjR0ZqWlMxaVpYUjNaV1Z1TzF4dUlDQWdJSEJoWkdScGJtYzZJRE13Y0hnZ01EdGNiaUFnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNGdJSDFjYm4xY2JseHVRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFwYmkxM2FXUjBhRG9nTVRBeU5YQjRLU0I3WEc0Z0lDNW9aV0ZrWlhJZ2UxeHVJQ0FnSUNaZlgyMWxiblVnZTF4dUlDQWdJQ0FnY0dGa1pHbHVaem9nTkROd2VDQXdPMXh1SUNBZ0lIMWNiaUFnZlZ4dWZTSXNJaVJuYkc5aVlXeERiMnh2Y2xCeWFXMWhjbms2SUNORVJFUXpRemM3WEc0a1oyeHZZbUZzUTI5c2IzSlFjbWx0WVhKNVNHOTJaWEk2SUNNNFJESXpNak03WEc0a1oyeHZZbUZzUW1GamEyZHliM1Z1WkVOdmJHOXlPaUFqTURBd01EQXdNek03SWl3aVFHbHRjRzl5ZENBbkxpOXlaWE5sZENjN1hHNUFhVzF3YjNKMElDY3VMeTR1TDJOdmJYQnZibVZ1ZEhNdlptOXZkR1Z5Snp0Y2JrQnBiWEJ2Y25RZ0p5NHZMaTR2WTI5dGNHOXVaVzUwY3k5b1pXRmtaWEluTzF4dVFHbHRjRzl5ZENBbkxpNHZZMjl1Wm1sbkwyTnZiRzl5Y3ljN1hHNWNiaVJuYkc5aVlXeERiMjUwWVdsdVpYSlhhV1IwYURvZ09UQWxPMXh1WEc0cUlIdGNiaUFnWW05NExYTnBlbWx1WnpvZ1ltOXlaR1Z5TFdKdmVEdGNiaUFnYldGeVoybHVPaUF3TzF4dUlDQndZV1JrYVc1bk9pQXdPMXh1SUNCamIyeHZjam9nSTBaR1JrWkdSanRjYm4xY2JseHVMbU52Ym5SaGFXNWxjbDl0WVdsdUlIdGNiaUFnYldsdUxXaGxhV2RvZERvZ01UQXdkbWc3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDUm5iRzlpWVd4Q1lXTnJaM0p2ZFc1a1EyOXNiM0k3WEc1OVhHNWNiaTV3WVdkbExXTnZiblJsYm5RZ2UxeHVJQ0J0WVhKbmFXNDZJREFnWVhWMGJ6dGNiaUFnY0dGa1pHbHVaem9nTUNBek1IQjRPMXh1ZlZ4dVhHNWliMlI1SUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUMxaGNIQnNaUzF6ZVhOMFpXMHNJRUpzYVc1clRXRmpVM2x6ZEdWdFJtOXVkQ3dnVTJWbmIyVWdWVWtzSUZKdlltOTBieXdnU0dWc2RtVjBhV05oSUU1bGRXVXNJRUZ5YVdGc0xDQk9iM1J2SUZOaGJuTXNJSE5oYm5NdGMyVnlhV1lzSUVGd2NHeGxJRU52Ykc5eUlFVnRiMnBwTENCVFpXZHZaU0JWU1NCRmJXOXFhU3dnVTJWbmIyVWdWVWtnVTNsdFltOXNMQ0JPYjNSdklFTnZiRzl5SUVWdGIycHBPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYSmxjR1ZoZERvZ2NtVndaV0YwTFhrN1hHNGdJR0poWTJ0bmNtOTFibVF0Y0c5emFYUnBiMjQ2SUhSdmNDQmpaVzUwWlhJN1hHNGdJR0poWTJ0bmNtOTFibVF0YzJsNlpUb2dZMjkyWlhJN1hHNTlYRzVjYmtCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNklERXdNalZ3ZUNrZ2UxeHVJQ0JpYjJSNUlIdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xYSmxjR1ZoZERvZ2JtOHRjbVZ3WldGME8xeHVJQ0FnSUdKaFkydG5jbTkxYm1RdFlYUjBZV05vYldWdWREb2dabWw0WldRN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkMxd2IzTnBkR2x2YmpvZ1kyVnVkR1Z5SUdObGJuUmxjanRjYmlBZ2ZWeHVYRzRnSUM1d1lXZGxMV052Ym5SbGJuUWdlMXh1SUNBZ0lIZHBaSFJvT2lBa1oyeHZZbUZzUTI5dWRHRnBibVZ5VjJsa2RHZzdYRzRnSUNBZ2NHRmtaR2x1WnpvZ01EdGNiaUFnZlZ4dWZTSXNJa0JwYlhCdmNuUWdKeTR1TDJOdmJtWnBaeTlqYjI1bWFXY25PMXh1WEc1aWIyUjVJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMXBiV0ZuWlRvZ2RYSnNLQ2N1TGk4dUxpOXBiV0ZuWlhNdllXSnZkWFF0Yldsc2EybHVheTlpWVdOclozSnZkVzVrTFhSaFlteGxMbkJ1WnljcE8xeHVJQ0JpWVdOclozSnZkVzVrTFhCdmMybDBhVzl1T2lCalpXNTBaWElnY21sbmFIUTdYRzVjYm4xY2JseHVRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFwYmkxM2FXUjBhRG9nTVRBeU5YQjRLU0I3WEc0Z0lHSnZaSGtnZTF4dUlDQWdJR0poWTJ0bmNtOTFibVF0YVcxaFoyVTZJSFZ5YkNnbkxpNHZMaTR2YVcxaFoyVnpMMkZpYjNWMExXMXBiR3RwYm1zdlltRmphMmR5YjNWdVpDNXdibWNuS1R0Y2JpQWdmVnh1ZlNKZGZRPT0gKi9cbiIsIkBpbXBvcnQgJy4uL2NvbmZpZy9jb2xvcnMnO1xuXG4uaGVhZGVyIHtcbiAgJl9fbG9nbyBzdmcge1xuICAgIHdpZHRoOiAxMzBweDtcbiAgICBoZWlnaHQ6IDQ1cHg7XG4gIH1cblxuICAmX19idXJnZXIgc3ZnIHtcbiAgICB3aWR0aDogNDVweDtcbiAgICBoZWlnaHQ6IDQ1cHg7XG4gICAgdHJhbnNpdGlvbjogYWxsIC4zcyBlYXNlO1xuXG4gICAgJjpob3ZlcixcbiAgICAmOmZvY3VzLFxuICAgICY6YWN0aXZlIHtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAuM3MgZWFzZTtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDRkZWcpO1xuICAgIH1cbiAgfVxuXG4gICZfX2xvZ28gc3ZnLFxuICAmX19idXJnZXIgc3ZnIHtcbiAgICAmOmhvdmVyLFxuICAgICY6Zm9jdXMsXG4gICAgJjphY3RpdmUge1xuICAgICAgcGF0aCB7XG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAuM3MgZWFzZTtcbiAgICAgICAgZmlsbDogJGdsb2JhbENvbG9yUHJpbWFyeUhvdmVyO1xuICAgICAgfVxuICAgIH1cblxuICAgIHBhdGgge1xuICAgICAgdHJhbnNpdGlvbjogYWxsIC4zcyBlYXNlO1xuICAgICAgZmlsbDogJGdsb2JhbENvbG9yUHJpbWFyeTtcbiAgICB9XG4gIH1cblxuICAmX19tZW51IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBwYWRkaW5nOiAzMHB4IDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkge1xuICAuaGVhZGVyIHtcbiAgICAmX19tZW51IHtcbiAgICAgIHBhZGRpbmc6IDQzcHggMDtcbiAgICB9XG4gIH1cbn0iLCIvKiBodHRwOi8vbWV5ZXJ3ZWIuY29tL2VyaWMvdG9vbHMvY3NzL3Jlc2V0L1xuICAgdjIuMCB8IDIwMTEwMTI2XG4gICBMaWNlbnNlOiBub25lIChwdWJsaWMgZG9tYWluKVxuKi9cbmh0bWwsIGJvZHksIGRpdiwgc3BhbiwgYXBwbGV0LCBvYmplY3QsIGlmcmFtZSxcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHAsIGJsb2NrcXVvdGUsIHByZSxcbmEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSxcbmRlbCwgZGZuLCBlbSwgaW1nLCBpbnMsIGtiZCwgcSwgcywgc2FtcCxcbnNtYWxsLCBzdHJpa2UsIHN0cm9uZywgc3ViLCBzdXAsIHR0LCB2YXIsXG5iLCB1LCBpLCBjZW50ZXIsXG5kbCwgZHQsIGRkLCBvbCwgdWwsIGxpLFxuZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsXG50YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCxcbmFydGljbGUsIGFzaWRlLCBjYW52YXMsIGRldGFpbHMsIGVtYmVkLFxuZmlndXJlLCBmaWdjYXB0aW9uLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLFxubWVudSwgbmF2LCBvdXRwdXQsIHJ1YnksIHNlY3Rpb24sIHN1bW1hcnksXG50aW1lLCBtYXJrLCBhdWRpbywgdmlkZW8ge1xuICBmb250OiBpbmhlcml0O1xuICBmb250LXNpemU6IDEwMCU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICBib3JkZXI6IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cbmFydGljbGUsIGFzaWRlLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsXG5mb290ZXIsIGhlYWRlciwgaGdyb3VwLCBtZW51LCBuYXYsIHNlY3Rpb24ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuYm9keSB7XG4gIGxpbmUtaGVpZ2h0OiAxO1xufVxuXG5vbCwgdWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5ibG9ja3F1b3RlLCBxIHtcbiAgcXVvdGVzOiBub25lO1xufVxuXG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlcixcbnE6YmVmb3JlLCBxOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgY29udGVudDogbm9uZTtcbn1cblxudGFibGUge1xuICBib3JkZXItc3BhY2luZzogMDtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbn1cblxuLmZvb3RlciB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgY29sb3I6IHJlZDtcbn1cblxuLmhlYWRlcl9fbG9nbyBzdmcge1xuICB3aWR0aDogMTMwcHg7XG4gIGhlaWdodDogNDVweDtcbn1cbi5oZWFkZXJfX2J1cmdlciBzdmcge1xuICB3aWR0aDogNDVweDtcbiAgaGVpZ2h0OiA0NXB4O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xufVxuLmhlYWRlcl9fYnVyZ2VyIHN2Zzpob3ZlciwgLmhlYWRlcl9fYnVyZ2VyIHN2Zzpmb2N1cywgLmhlYWRlcl9fYnVyZ2VyIHN2ZzphY3RpdmUge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg0ZGVnKTtcbn1cbi5oZWFkZXJfX2xvZ28gc3ZnOmhvdmVyIHBhdGgsIC5oZWFkZXJfX2xvZ28gc3ZnOmZvY3VzIHBhdGgsIC5oZWFkZXJfX2xvZ28gc3ZnOmFjdGl2ZSBwYXRoLCAuaGVhZGVyX19idXJnZXIgc3ZnOmhvdmVyIHBhdGgsIC5oZWFkZXJfX2J1cmdlciBzdmc6Zm9jdXMgcGF0aCwgLmhlYWRlcl9fYnVyZ2VyIHN2ZzphY3RpdmUgcGF0aCB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gIGZpbGw6ICM4RDIzMjM7XG59XG4uaGVhZGVyX19sb2dvIHN2ZyBwYXRoLCAuaGVhZGVyX19idXJnZXIgc3ZnIHBhdGgge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICBmaWxsOiAjREREM0M3O1xufVxuLmhlYWRlcl9fbWVudSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBwYWRkaW5nOiAzMHB4IDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gIC5oZWFkZXJfX21lbnUge1xuICAgIHBhZGRpbmc6IDQzcHggMDtcbiAgfVxufVxuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgY29sb3I6ICNGRkZGRkY7XG59XG5cbi5jb250YWluZXJfbWFpbiB7XG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMik7XG59XG5cbi5wYWdlLWNvbnRlbnQge1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZzogMCAzMHB4O1xufVxuXG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgU2Vnb2UgVUksIFJvYm90bywgSGVsdmV0aWNhIE5ldWUsIEFyaWFsLCBOb3RvIFNhbnMsIHNhbnMtc2VyaWYsIEFwcGxlIENvbG9yIEVtb2ppLCBTZWdvZSBVSSBFbW9qaSwgU2Vnb2UgVUkgU3ltYm9sLCBOb3RvIENvbG9yIEVtb2ppO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IHRvcCBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkge1xuICBib2R5IHtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogZml4ZWQ7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgfVxuICAucGFnZS1jb250ZW50IHtcbiAgICB3aWR0aDogOTAlO1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cbn1cbmJvZHkge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi8uLi9pbWFnZXMvYWJvdXQtbWlsa2luay9iYWNrZ3JvdW5kLXRhYmxlLnBuZ1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIHJpZ2h0O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgYm9keSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vLi4vaW1hZ2VzL2Fib3V0LW1pbGtpbmsvYmFja2dyb3VuZC5wbmdcIik7XG4gIH1cbn0iLCJAaW1wb3J0ICcuL3Jlc2V0JztcbkBpbXBvcnQgJy4vLi4vY29tcG9uZW50cy9mb290ZXInO1xuQGltcG9ydCAnLi8uLi9jb21wb25lbnRzL2hlYWRlcic7XG5AaW1wb3J0ICcuLi9jb25maWcvY29sb3JzJztcblxuJGdsb2JhbENvbnRhaW5lcldpZHRoOiA5MCU7XG5cbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGNvbG9yOiAjRkZGRkZGO1xufVxuXG4uY29udGFpbmVyX21haW4ge1xuICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGdsb2JhbEJhY2tncm91bmRDb2xvcjtcbn1cblxuLnBhZ2UtY29udGVudCB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nOiAwIDMwcHg7XG59XG5cbmJvZHkge1xuICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBTZWdvZSBVSSwgUm9ib3RvLCBIZWx2ZXRpY2EgTmV1ZSwgQXJpYWwsIE5vdG8gU2Fucywgc2Fucy1zZXJpZiwgQXBwbGUgQ29sb3IgRW1vamksIFNlZ29lIFVJIEVtb2ppLCBTZWdvZSBVSSBTeW1ib2wsIE5vdG8gQ29sb3IgRW1vamk7XG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3Zlcjtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gIGJvZHkge1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICB9XG5cbiAgLnBhZ2UtY29udGVudCB7XG4gICAgd2lkdGg6ICRnbG9iYWxDb250YWluZXJXaWR0aDtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG59IiwiQGltcG9ydCAnLi4vY29uZmlnL2NvbmZpZyc7XG5cbmJvZHkge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uLy4uL2ltYWdlcy9hYm91dC1taWxraW5rL2JhY2tncm91bmQtdGFibGUucG5nJyk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciByaWdodDtcblxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgYm9keSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi8uLi9pbWFnZXMvYWJvdXQtbWlsa2luay9iYWNrZ3JvdW5kLnBuZycpO1xuICB9XG59Il19 */
