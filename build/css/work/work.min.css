a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{font:inherit;font-size:100%;margin:0;padding:0;vertical-align:baseline;border:0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-spacing:0;border-collapse:collapse}.footer{font-size:16px;color:red}@keyframes a{0%{opacity:0}to{opacity:1}}.fadeIn{animation-name:a}@keyframes b{0%{opacity:0;transform:translate3d(0,-100%,0)}to{opacity:1;transform:none}}.fadeInDown{animation-name:b}@keyframes c{0%{opacity:0;transform:translate3d(-100%,0,0)}to{opacity:1;transform:none}}.fadeInLeft{animation-name:c}@keyframes d{0%{opacity:0;transform:translate3d(100%,0,0)}to{opacity:1;transform:none}}.fadeInRight{animation-name:d}@keyframes e{0%{opacity:0;transform:translate3d(0,100%,0)}to{opacity:1;transform:none}}.fadeInUp{animation-name:e}@keyframes f{0%{transform:translate3d(0,100%,0);visibility:visible}to{transform:translateZ(0)}}.slideInUp{animation-name:f}.reverse{animation-direction:reverse;animation-fill-mode:forwards}.gray-layer{position:absolute;z-index:-1;width:100%;height:100%;opacity:.3;background-color:#030303}.close{display:block;width:45px;height:45px}.close__svg{transition:all .4s ease;fill:#ddd3c7}.close__svg:active,.close__svg:focus,.close__svg:hover{transition:all .4s ease;transform:rotate(4deg);fill:#8d2323}header{position:sticky;top:0}.header__logo svg{width:130px;height:45px}.header__burger svg{width:45px;height:45px;transition:all .4s ease}.header__burger svg:active,.header__burger svg:focus,.header__burger svg:hover{transition:all .4s ease;transform:rotate(4deg)}.header__burger svg:active path,.header__burger svg:focus path,.header__burger svg:hover path,.header__logo svg:active path,.header__logo svg:focus path,.header__logo svg:hover path{transition:all .4s ease;fill:#8d2323}.header__burger svg path,.header__logo svg path{transition:all .4s ease;fill:#ddd3c7}.header__burger-wrapper{position:fixed;z-index:9999;bottom:0;left:0;display:flex;align-items:center;flex-direction:column;justify-content:center;width:100%;height:100%;animation-duration:.6s;text-align:center;border-radius:30px 0 0 30px;background-image:url(../../images/menu/menu-background.png);background-attachment:fixed;background-position:50%;background-size:cover}.header__menu{display:flex;align-content:center;flex-direction:row;justify-content:space-between;padding:30px 0;text-align:center}.header__menu-item{transition:all .4s ease;text-decoration:none}.header__menu-item:active,.header__menu-item:focus,.header__menu-item:hover{transition:all .4s ease;transform:skew(-8deg)}.header__menu-item:active a,.header__menu-item:focus a,.header__menu-item:hover a{color:#8d2323}.header__menu-item a{font-size:52px;font-weight:700;line-height:1.2em;text-decoration:none;letter-spacing:-1.1px;color:#ddd3c7}.header__mobile-privacy{text-decoration:none}.hidden{display:none}*{box-sizing:border-box;margin:0;padding:0;color:#fff}.container_main{min-height:100vh;background-color:rgba(0,0,0,.2)}.page-content{margin:0 auto;padding:0 30px}body{font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif;background-repeat:repeat-y;background-position:top;background-size:cover}.header__work{color:#8d2323!important}body{background-image:url(../../images/work/background-table.png);background-position:50%}@media screen and (min-width:1025px){.header__menu{padding:43px 0}.header__mobile{display:none}body{background-repeat:no-repeat;background-attachment:fixed;background-position:50%}.page-content{width:90%;padding:0}body{background-image:url(../../images/work/background.png);background-position:100% 0;background-size:cover}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndvcmsuY3NzIiwiYW5pbWF0aW9ucy9mYWRlSW4uc2NzcyIsIndvcmsvd29yay5jc3MiLCJhbmltYXRpb25zL3NsaWRlSW4uc2NzcyIsImNvbXBvbmVudHMvaGVhZGVyLnNjc3MiLCJjb25maWcvX2NvbnN0LnNjc3MiLCJjb25maWcvX2NvbmZpZy5zY3NzIiwid29yay93b3JrLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS0EsMlpDd0JFLGFEMERBLEFDMURBLGVEMkRBLEFDMURFLFNBQ0EsQUMwREYsVUR4REEsQUN3REEsd0JGRUEsQUMxREEsUUFDRSxDRDBESCxBQUlELDhFRVdFLGFBQUEsQ0ZHRixBRUZBLEtBR0EsYUFBQSxDRkNDLEFBRUQsTUFFRSxlQ3ZERSxDRHdESCxBQUVELGFFRUUsV0FBQSxDRkdGLEFFRkEsb0RDekhFLFdIZ0lBLEFHaElBLFlBQ0UsQ0hnSUgsQUFFRCxNQUNFLGlCRUNBLEFDaElFLHdCRGdJRixDRkdGLEFFRkEsUUFHQSxlRkNFLEFFREYsU0ZDYSxDQUdiLEFJMUlBLGFGMklBLEdGQ0ksU0FBVyxDSXZJZixBQUVFLEdBQ0EsU0FBQSxDQUNBLENKeUlELEFFRUQsUUZDRSxnQkFBdUIsQ0FHekIsQUkxSUEsYUFHRSxHRnlJRixVQUFBLEFFdklFLGdDQUFBLENGMklGLEFFMUlJLEdBR0EsVUFBQSxBQUdFLGNBQUEsQ0FDQSxDSnVJTCxBQUVELFlJbklBLGdCQUFBLENKcUlDLEFFRUQsYUZDRSxHSWxJQSxVQUFBLEFBQ0UsZ0NBQUEsQ0FDQSxBQUdGLEdBQ0UsVUFBQSxBQUNBLGNBQUEsQ0FDQSxDSnFJSixBRUZBLFlFN0hNLGdCQUFBLENKbUlOLEFFRkEsYUV0SFEsR0YwSFIsVUFBQSxBRXRISSwrQkFBQSxDRjBISixBRXpITSxHQUtKLFVBQUEsQUFDRSxjQUFBLENBQ0EsQ0pzSEgsQUFFRCxhSXBISSxnQkFBQSxDSnNISCxBQUVELGFJcEhJLEdBQ0EsVUFBQSxBQUNBLCtCQUFBLENBQ0EsQUFFQSxHQUNBLFVBQUEsQUFDQSxjQUFBLENGc0hKLENGR0EsQUl0SEUsVUFHRSxnQkFBQSxDSnFISCxBQUVELGFFQ0EsR0VuSEksZ0NBQUEsQUFDRSxrQkFBQSxDQUNBLEFBRUEsR0FHRSx1QkMxR1ksQ0QyR1osQ0pxSFIsQUVGQSxXQUdBLGdCQUFBLENGR0EsQUlsSE0sU0FLRSw0QkFBQSxBQUNBLDRCQUFBLENKK0dQLEFFRUQsWUV6R0ksa0JBQUEsQUFDRSxXRjJHTixBRTNHTSxXSjRHSixBRURGLFlGQ2UsQUl2R2YsV0FBQSxBQUVJLHdCQUFBLENKd0dILEFBRUQsT0FDRSxjRUNBLEFFdkdJLFdGdUdKLEFBQ0YsV0FBQSxDQUdBLEFFdEdBLFlKdUdFLHdCQUEwQixBTXpQNUIsWUFBQSxDTjJQQyxBQUVELHVEQUdFLHdCQUEwQixBTXpQNUIsdUJBQUEsQUFDRSxZQUFBLENOMlBELEFBRUQsT016UEEsZ0JBQUEsQUFDRSxLQUFBLENOMlBELEFBRUQsa0JNelBBLFlBQUEsQUFDRSxXQUFBLENOMlBELEFBRUQsb0JFQ0EsV0ZDRSxBRURGLFlGQ2UsQU1yUGYsdUJBQUEsQ051UEMsQUFFRCwrRU1sUEUsd0JOc1BBLEFNdFBBLHNCQXJDcUIsQ040UnRCLEFFRUQsc0xLMVJFLHdCQUFBLEFBQ0EsWUFBQSxDTGlTRixBSzlSQSxnRFBrU0Usd0JBQ0EsQU9qU0UsWUFDQSxDUGlTSCxBRUVELHdCRkNFLGVBQWdCLEFBQ2hCLGFBQWMsQUFDZCxTQUFVLEFBQ1YsT0FBUSxBQUNSLGFBQWMsQUFDZCxtQkFBb0IsQUFDcEIsc0JBQXVCLEFBQ3ZCLHVCQUF3QixBQUN4QixXQUFZLEFBQ1osWUFBYSxBQUNiLHVCQUF5QixBQUN6QixrQkFBbUIsQUFDbkIsNEJBQTZCLEFBQzdCLDREQUErRCxBQUMvRCw0QkFBNkIsQUFDN0Isd0JBQW1DLEFBQ25DLHFCQUF1QixDQUN4QixBQUVELGNBQ0UsYUFBYyxBQUNkLHFCQUFzQixBQUN0QixtQkFBb0IsQUFDcEIsOEJBQStCLEFBQy9CLGVBQWdCLEFBQ2hCLGlCQUFtQixDQUNwQixBQUVELG1CQUNFLHdCQUEwQixBQUMxQixvQkFBc0IsQ0FDdkIsQUFFRCw0RUFHRSx3QkFBMEIsQUFDMUIscUJBQXVCLENBQ3hCLEFBRUQsa0ZBR0UsYUFBZSxDQUNoQixBQUVELHFCQUNFLGVBQWdCLEFBQ2hCLGdCQUFrQixBQUNsQixrQkFBbUIsQUFDbkIscUJBQXNCLEFBQ3RCLHNCQUF1QixBQUN2QixhQUFlLENBQ2hCLEFBRUQsd0JBQ0Usb0JBQXNCLENBQ3ZCLEFBRUQsUUFDRSxZQUFjLENBQ2YsQUFFRCxFQUNFLHNCQUF1QixBQUN2QixTQUFVLEFBQ1YsVUFBVyxBQUNYLFVBQWUsQ0FDaEIsQUFFRCxnQkFDRSxpQkFBa0IsQUFDbEIsK0JBQXFDLENBQ3RDLEFBRUQsY0FDRSxjQUFlLEFBQ2YsY0FBZ0IsQ0FDakIsQUFFRCxLQUNFLHVHQUFxTCxBQUNyTCwyQkFBNEIsQUFDNUIsd0JBQWdDLEFBQ2hDLHFCQUF1QixDQUN4QixBQUVELGNBQ0UsdUJBQTBCLENBQzNCLEFBRUQsS0FDRSw2REFBZ0UsQUFDaEUsdUJBQW1DLENBQ3BDLEFBRUQscUNBQ0UsY0FDRSxjQUFnQixDQUNqQixBQUVELGdCQUNFLFlBQWMsQ0FDZixBQUVELEtBQ0UsNEJBQTZCLEFBQzdCLDRCQUE2QixBQUM3Qix1QkFBbUMsQ0FDcEMsQUFFRCxjQUNFLFVBQVcsQUFDWCxTQUFXLENBQ1osQUFFRCxLQUNFLHVEQUEwRCxBQUMxRCwyQkFBK0IsQUFDL0IscUJBQXVCLENBQ3hCLENBQ0YiLCJmaWxlIjoid29yay93b3JrLm1pbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBodHRwOi8vbWV5ZXJ3ZWIuY29tL2VyaWMvdG9vbHMvY3NzL3Jlc2V0L1xuICAgdjIuMCB8IDIwMTEwMTI2XG4gICBMaWNlbnNlOiBub25lIChwdWJsaWMgZG9tYWluKVxuKi9cblxuaHRtbCxcbmJvZHksXG5kaXYsXG5zcGFuLFxuYXBwbGV0LFxub2JqZWN0LFxuaWZyYW1lLFxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2LFxucCxcbmJsb2NrcXVvdGUsXG5wcmUsXG5hLFxuYWJicixcbmFjcm9ueW0sXG5hZGRyZXNzLFxuYmlnLFxuY2l0ZSxcbmNvZGUsXG5kZWwsXG5kZm4sXG5lbSxcbmltZyxcbmlucyxcbmtiZCxcbnEsXG5zLFxuc2FtcCxcbnNtYWxsLFxuc3RyaWtlLFxuc3Ryb25nLFxuc3ViLFxuc3VwLFxudHQsXG52YXIsXG5iLFxudSxcbmksXG5jZW50ZXIsXG5kbCxcbmR0LFxuZGQsXG5vbCxcbnVsLFxubGksXG5maWVsZHNldCxcbmZvcm0sXG5sYWJlbCxcbmxlZ2VuZCxcbnRhYmxlLFxuY2FwdGlvbixcbnRib2R5LFxudGZvb3QsXG50aGVhZCxcbnRyLFxudGgsXG50ZCxcbmFydGljbGUsXG5hc2lkZSxcbmNhbnZhcyxcbmRldGFpbHMsXG5lbWJlZCxcbmZpZ3VyZSxcbmZpZ2NhcHRpb24sXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tZW51LFxubmF2LFxub3V0cHV0LFxucnVieSxcbnNlY3Rpb24sXG5zdW1tYXJ5LFxudGltZSxcbm1hcmssXG5hdWRpbyxcbnZpZGVvIHtcbiAgZm9udDogaW5oZXJpdDtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgYm9yZGVyOiAwO1xufVxuXG4vKiBIVE1MNSBkaXNwbGF5LXJvbGUgcmVzZXQgZm9yIG9sZGVyIGJyb3dzZXJzICovXG5cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubWVudSxcbm5hdixcbnNlY3Rpb24ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuYm9keSB7XG4gIGxpbmUtaGVpZ2h0OiAxO1xufVxuXG5vbCxcbnVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuYmxvY2txdW90ZSxcbnEge1xuICBxdW90ZXM6IG5vbmU7XG59XG5cbmJsb2NrcXVvdGU6YmVmb3JlLFxuYmxvY2txdW90ZTphZnRlcixcbnE6YmVmb3JlLFxucTphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGNvbnRlbnQ6IG5vbmU7XG59XG5cbnRhYmxlIHtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG59XG5cbi5mb290ZXIge1xuICBmb250LXNpemU6IDE2cHg7XG4gIGNvbG9yOiByZWQ7XG59XG5cbkBrZXlmcmFtZXMgZmFkZUluIHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxuXG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG59XG5cbi5mYWRlSW4ge1xuICBhbmltYXRpb24tbmFtZTogZmFkZUluO1xufVxuXG5Aa2V5ZnJhbWVzIGZhZGVJbkRvd24ge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgLTEwMCUsIDApO1xuICB9XG5cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNmb3JtOiBub25lO1xuICB9XG59XG5cbi5mYWRlSW5Eb3duIHtcbiAgYW5pbWF0aW9uLW5hbWU6IGZhZGVJbkRvd247XG59XG5cbkBrZXlmcmFtZXMgZmFkZUluTGVmdCB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtMTAwJSwgMCwgMCk7XG4gIH1cblxuICB0byB7XG4gICAgb3BhY2l0eTogMTtcbiAgICB0cmFuc2Zvcm06IG5vbmU7XG4gIH1cbn1cblxuLmZhZGVJbkxlZnQge1xuICBhbmltYXRpb24tbmFtZTogZmFkZUluTGVmdDtcbn1cblxuQGtleWZyYW1lcyBmYWRlSW5SaWdodCB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgxMDAlLCAwLCAwKTtcbiAgfVxuXG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogbm9uZTtcbiAgfVxufVxuXG4uZmFkZUluUmlnaHQge1xuICBhbmltYXRpb24tbmFtZTogZmFkZUluUmlnaHQ7XG59XG5cbkBrZXlmcmFtZXMgZmFkZUluVXAge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMTAwJSwgMCk7XG4gIH1cblxuICB0byB7XG4gICAgb3BhY2l0eTogMTtcbiAgICB0cmFuc2Zvcm06IG5vbmU7XG4gIH1cbn1cblxuLmZhZGVJblVwIHtcbiAgYW5pbWF0aW9uLW5hbWU6IGZhZGVJblVwO1xufVxuXG5Aa2V5ZnJhbWVzIHNsaWRlSW5VcCB7XG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMTAwJSwgMCk7XG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgfVxuXG4gIHRvIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICB9XG59XG5cbi5zbGlkZUluVXAge1xuICBhbmltYXRpb24tbmFtZTogc2xpZGVJblVwO1xufVxuXG4ucmV2ZXJzZSB7XG4gIGFuaW1hdGlvbi1kaXJlY3Rpb246IHJldmVyc2U7XG4gIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xufVxuXG4uZ3JheS1sYXllciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogLTE7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG9wYWNpdHk6IDAuMztcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAzMDMwMztcbn1cblxuLmNsb3NlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiA0NXB4O1xuICBoZWlnaHQ6IDQ1cHg7XG59XG5cbi5jbG9zZV9fc3ZnIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNHMgZWFzZTtcbiAgZmlsbDogI0RERDNDNztcbn1cblxuLmNsb3NlX19zdmc6aG92ZXIsXG4uY2xvc2VfX3N2Zzpmb2N1cyxcbi5jbG9zZV9fc3ZnOmFjdGl2ZSB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjRzIGVhc2U7XG4gIHRyYW5zZm9ybTogcm90YXRlKDRkZWcpO1xuICBmaWxsOiAjOEQyMzIzO1xufVxuXG5oZWFkZXIge1xuICBwb3NpdGlvbjogc3RpY2t5O1xuICB0b3A6IDA7XG59XG5cbi5oZWFkZXJfX2xvZ28gc3ZnIHtcbiAgd2lkdGg6IDEzMHB4O1xuICBoZWlnaHQ6IDQ1cHg7XG59XG5cbi5oZWFkZXJfX2J1cmdlciBzdmcge1xuICB3aWR0aDogNDVweDtcbiAgaGVpZ2h0OiA0NXB4O1xuICB0cmFuc2l0aW9uOiBhbGwgMC40cyBlYXNlO1xufVxuXG4uaGVhZGVyX19idXJnZXIgc3ZnOmhvdmVyLFxuLmhlYWRlcl9fYnVyZ2VyIHN2Zzpmb2N1cyxcbi5oZWFkZXJfX2J1cmdlciBzdmc6YWN0aXZlIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNHMgZWFzZTtcbiAgdHJhbnNmb3JtOiByb3RhdGUoNGRlZyk7XG59XG5cbi5oZWFkZXJfX2xvZ28gc3ZnOmhvdmVyIHBhdGgsXG4uaGVhZGVyX19sb2dvIHN2Zzpmb2N1cyBwYXRoLFxuLmhlYWRlcl9fbG9nbyBzdmc6YWN0aXZlIHBhdGgsXG4uaGVhZGVyX19idXJnZXIgc3ZnOmhvdmVyIHBhdGgsXG4uaGVhZGVyX19idXJnZXIgc3ZnOmZvY3VzIHBhdGgsXG4uaGVhZGVyX19idXJnZXIgc3ZnOmFjdGl2ZSBwYXRoIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNHMgZWFzZTtcbiAgZmlsbDogIzhEMjMyMztcbn1cblxuLmhlYWRlcl9fbG9nbyBzdmcgcGF0aCxcbi5oZWFkZXJfX2J1cmdlciBzdmcgcGF0aCB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjRzIGVhc2U7XG4gIGZpbGw6ICNEREQzQzc7XG59XG5cbi5oZWFkZXJfX2J1cmdlci13cmFwcGVyIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiA5OTk5O1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBhbmltYXRpb24tZHVyYXRpb246IDAuNnM7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogMzBweCAwIDAgMzBweDtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vLi4vaW1hZ2VzL21lbnUvbWVudS1iYWNrZ3JvdW5kLnBuZ1wiKTtcbiAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3Zlcjtcbn1cblxuLmhlYWRlcl9fbWVudSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBwYWRkaW5nOiAzMHB4IDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmhlYWRlcl9fbWVudS1pdGVtIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNHMgZWFzZTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4uaGVhZGVyX19tZW51LWl0ZW06aG92ZXIsXG4uaGVhZGVyX19tZW51LWl0ZW06Zm9jdXMsXG4uaGVhZGVyX19tZW51LWl0ZW06YWN0aXZlIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNHMgZWFzZTtcbiAgdHJhbnNmb3JtOiBza2V3KC04ZGVnKTtcbn1cblxuLmhlYWRlcl9fbWVudS1pdGVtOmhvdmVyIGEsXG4uaGVhZGVyX19tZW51LWl0ZW06Zm9jdXMgYSxcbi5oZWFkZXJfX21lbnUtaXRlbTphY3RpdmUgYSB7XG4gIGNvbG9yOiAjOEQyMzIzO1xufVxuXG4uaGVhZGVyX19tZW51LWl0ZW0gYSB7XG4gIGZvbnQtc2l6ZTogNTJweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGxpbmUtaGVpZ2h0OiAxLjJlbTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBsZXR0ZXItc3BhY2luZzogLTEuMXB4O1xuICBjb2xvcjogI0RERDNDNztcbn1cblxuLmhlYWRlcl9fbW9iaWxlLXByaXZhY3kge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5oaWRkZW4ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4qIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBjb2xvcjogI0ZGRkZGRjtcbn1cblxuLmNvbnRhaW5lcl9tYWluIHtcbiAgbWluLWhlaWdodDogMTAwdmg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yKTtcbn1cblxuLnBhZ2UtY29udGVudCB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nOiAwIDMwcHg7XG59XG5cbmJvZHkge1xuICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBTZWdvZSBVSSwgUm9ib3RvLCBIZWx2ZXRpY2EgTmV1ZSwgQXJpYWwsIE5vdG8gU2Fucywgc2Fucy1zZXJpZiwgQXBwbGUgQ29sb3IgRW1vamksIFNlZ29lIFVJIEVtb2ppLCBTZWdvZSBVSSBTeW1ib2wsIE5vdG8gQ29sb3IgRW1vamk7XG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3Zlcjtcbn1cblxuLmhlYWRlcl9fd29yayB7XG4gIGNvbG9yOiAjOEQyMzIzICFpbXBvcnRhbnQ7XG59XG5cbmJvZHkge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi8uLi9pbWFnZXMvd29yay9iYWNrZ3JvdW5kLXRhYmxlLnBuZ1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSB7XG4gIC5oZWFkZXJfX21lbnUge1xuICAgIHBhZGRpbmc6IDQzcHggMDtcbiAgfVxuXG4gIC5oZWFkZXJfX21vYmlsZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gIGJvZHkge1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICB9XG5cbiAgLnBhZ2UtY29udGVudCB7XG4gICAgd2lkdGg6IDkwJTtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG5cbiAgYm9keSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vLi4vaW1hZ2VzL3dvcmsvYmFja2dyb3VuZC5wbmdcIik7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wIHJpZ2h0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIH1cbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zjg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1OdmJtWnBaeTlmY21WelpYUXVjMk56Y3lJc0luZHZjbXN2ZDI5eWF5NWpjM01pTENKamIyMXdiMjVsYm5SekwyWnZiM1JsY2k1elkzTnpJaXdpWVc1cGJXRjBhVzl1Y3k5bVlXUmxTVzR1YzJOemN5SXNJbUZ1YVcxaGRHbHZibk12YzJ4cFpHVkpiaTV6WTNOeklpd2lZMjl0Y0c5dVpXNTBjeTlvWldGa1pYSXVjMk56Y3lJc0ltTnZibVpwWnk5ZlkyOXVjM1F1YzJOemN5SXNJbU52Ym1acFp5OWZZMjl1Wm1sbkxuTmpjM01pTENKM2IzSnJMM2R2Y21zdWMyTnpjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVRzN08wTkJRVUU3UVVGTFFUczdPenM3T3pzN096czdPenRGUVdGRkxHRkJRVUU3UlVGRFFTeGxRVUZCTzBWQlEwRXNVMEZCUVR0RlFVTkJMRlZCUVVFN1JVRkRRU3gzUWtGQlFUdEZRVU5CTEZOQlFVRTdRVU5CUmpzN1FVUkhRU3huUkVGQlFUdEJRVU5CT3p0RlFVVkZMR05CUVVFN1FVTkJSanM3UVVSSFFUdEZRVU5GTEdOQlFVRTdRVU5CUmpzN1FVUkhRVHRGUVVORkxHZENRVUZCTzBGRFFVWTdPMEZFUjBFN1JVRkRSU3haUVVGQk8wRkRRVVk3TzBGRVIwRTdPMFZCUlVVc1YwRkJRVHRGUVVOQkxHRkJRVUU3UVVOQlJqczdRVVJIUVR0RlFVTkZMR2xDUVVGQk8wVkJRMEVzZVVKQlFVRTdRVU5CUmpzN1FVTndSRUU3UlVGRFJTeGxRVUZCTzBWQlEwRXNWVUZCUVR0QlJIVkVSanM3UVVWNlJFRTdSVUZEUlR0SlFVTkZMRlZCUVVFN1JVWTBSRVk3UlVVeFJFRTdTVUZEUlN4VlFVRkJPMFZHTkVSR08wRkJRMFk3UVVWNlJFRTdSVUZEUlN4elFrRkJRVHRCUmpKRVJqczdRVVY0UkVFN1JVRkRSVHRKUVVORkxGVkJRVUU3U1VGRFFTeHRRMEZCUVR0RlJqSkVSanRGUlhwRVFUdEpRVU5GTEZWQlFVRTdTVUZEUVN4bFFVRkJPMFZHTWtSR08wRkJRMFk3UVVWNFJFRTdSVUZEUlN3d1FrRkJRVHRCUmpCRVJqczdRVVYyUkVFN1JVRkRSVHRKUVVORkxGVkJRVUU3U1VGRFFTeHRRMEZCUVR0RlJqQkVSanRGUlhoRVFUdEpRVU5GTEZWQlFVRTdTVUZEUVN4bFFVRkJPMFZHTUVSR08wRkJRMFk3UVVWMlJFRTdSVUZEUlN3d1FrRkJRVHRCUm5sRVJqczdRVVYwUkVFN1JVRkRSVHRKUVVORkxGVkJRVUU3U1VGRFFTeHJRMEZCUVR0RlJubEVSanRGUlhaRVFUdEpRVU5GTEZWQlFVRTdTVUZEUVN4bFFVRkJPMFZHZVVSR08wRkJRMFk3UVVWMFJFRTdSVUZEUlN3eVFrRkJRVHRCUm5kRVJqczdRVVZ5UkVFN1JVRkRSVHRKUVVORkxGVkJRVUU3U1VGRFFTeHJRMEZCUVR0RlJuZEVSanRGUlhSRVFUdEpRVU5GTEZWQlFVRTdTVUZEUVN4bFFVRkJPMFZHZDBSR08wRkJRMFk3UVVWeVJFRTdSVUZEUlN4M1FrRkJRVHRCUm5WRVJqczdRVWMzU0VFN1JVRkRSVHRKUVVORkxHdERRVUZCTzBsQlEwRXNiVUpCUVVFN1JVaG5TVVk3UlVjNVNFRTdTVUZEUlN3clFrRkJRVHRGU0dkSlJqdEJRVU5HTzBGSE4waEJPMFZCUTBVc2VVSkJRVUU3UVVnclNFWTdPMEZKZEVsQk8wVkJRMFVzTkVKQlFVRTdSVUZEUVN3MlFrRkJRVHRCU25sSlJqczdRVWwwU1VFN1JVRkRSU3hyUWtGQlFUdEZRVU5CTEZkQlFVRTdSVUZEUVN4WFFVRkJPMFZCUTBFc1dVRkJRVHRGUVVOQkxGbEJRVUU3UlVGRFFTeDVRa05ZWjBJN1FVeHZTbXhDT3p0QlNYUkpRVHRGUVVORkxHTkJRVUU3UlVGRFFTeFhRVUZCTzBWQlEwRXNXVUZCUVR0QlNubEpSanRCU1haSlJUdEZRVU5GTEhsQ1EycENaMEk3UlVSclFtaENMR0ZEZUVKcFFqdEJUR2xMY2tJN1FVbDJTVWs3UlVGSFJTeDVRa04yUW1NN1JVUjNRbVFzZFVKQlFVRTdSVUZEUVN4aFF6bENiMEk3UVV4eFN6RkNPenRCU1d4SlFUdEZRVU5GTEdkQ1FVRkJPMFZCUTBFc1RVRkJRVHRCU25GSlJqczdRVWxxU1VVN1JVRkRSU3haUVVGQk8wVkJRMEVzV1VGQlFUdEJTbTlKU2p0QlNXcEpSVHRGUVVORkxGZEJRVUU3UlVGRFFTeFpRVUZCTzBWQlEwRXNlVUpETlVOblFqdEJUQ3RMY0VJN1FVbHFTVWs3UlVGSFJTeDVRa05xUkdNN1JVUnJSR1FzZFVKQlFVRTdRVXBwU1U0N1FVbDRTRTA3UlVGRFJTeDVRa00xUkZrN1JVUTJSRm9zWVVOc1JXdENPMEZNTkV3eFFqdEJTWFJJU1R0RlFVTkZMSGxDUTJ4Rll6dEZSRzFGWkN4aFEzcEZaVHRCVEdsTmNrSTdRVWx3U0VVN1JVRkRSU3hsUVVGQk8wVkJRMEVzWVVGQlFUdEZRVU5CTEZOQlFVRTdSVUZEUVN4UFFVRkJPMFZCUTBFc1lVRkJRVHRGUVVOQkxHMUNRVUZCTzBWQlEwRXNjMEpCUVVFN1JVRkRRU3gxUWtGQlFUdEZRVU5CTEZkQlFVRTdSVUZEUVN4WlFVRkJPMFZCUTBFc2QwSkRha1oxUWp0RlJHdEdka0lzYTBKQlFVRTdSVUZEUVN3MFFrRkJRVHRGUVVOQkxEaEVRVUZCTzBWQlEwRXNORUpCUVVFN1JVRkRRU3hyUTBGQlFUdEZRVU5CTEhOQ1FVRkJPMEZLYzBoS08wRkpia2hGTzBWQlEwVXNZVUZCUVR0RlFVTkJMSEZDUVVGQk8wVkJRMEVzYlVKQlFVRTdSVUZEUVN3NFFrRkJRVHRGUVVOQkxHVkJRVUU3UlVGRFFTeHJRa0ZCUVR0QlNuRklTanRCU1c1SVNUdEZRVU5GTEhsQ1EzQkhZenRGUkhGSFpDeHhRa0ZCUVR0QlNuRklUanRCU1c1SVRUdEZRVWRGTEhsQ1F6RkhXVHRGUkRKSFdpeHpRa0ZCUVR0QlNtMUlVanRCU1dwSVVUdEZRVU5GTEdORGJraG5RanRCVEhOUE1VSTdRVWt2UjAwN1JVRkhSU3hsUVVGQk8wVkJRMEVzYVVKQlFVRTdSVUZEUVN4clFrRkJRVHRGUVVOQkxIRkNRVUZCTzBWQlEwRXNjMEpCUVVFN1JVRkRRU3hqUTJoSllUdEJUQ3RQY2tJN1FVbDZSMGs3UlVGRFJTeHhRa0ZCUVR0QlNqSkhUanM3UVVsMFIwRTdSVUZGU1R0SlFVTkZMR1ZCUVVFN1JVcDNSMG83UlVseVIwVTdTVUZEUlN4aFFVRkJPMFZLZFVkS08wRkJRMFk3UVVsdVIwRTdSVUZEUlN4aFFVRkJPMEZLY1VkR096dEJUWGhRUVR0RlFVTkZMSE5DUVVGQk8wVkJRMEVzVTBGQlFUdEZRVU5CTEZWQlFVRTdSVUZEUVN4alFVRkJPMEZPTWxCR096dEJUWGhRUVR0RlFVTkZMR2xDUVVGQk8wVkJRMEVzYjBORVluTkNPMEZNZDFGNFFqczdRVTE0VUVFN1JVRkRSU3hqUVVGQk8wVkJRMEVzWlVGQlFUdEJUakpRUmpzN1FVMTRVRUU3UlVGRFJTeHZURUZCUVR0RlFVTkJMREpDUVVGQk8wVkJRMEVzSzBKQlFVRTdSVUZEUVN4elFrRkJRVHRCVGpKUVJqczdRVTF3VUVFN1JVRkRSVHRKUVVORkxEUkNRVUZCTzBsQlEwRXNORUpCUVVFN1NVRkRRU3hyUTBGQlFUdEZUblZRUmp0RlRYQlFRVHRKUVVORkxGVkJkRU50UWp0SlFYVkRia0lzVlVGQlFUdEZUbk5RUmp0QlFVTkdPMEZQYUZORk8wVkJRMFVzZVVKQlFVRTdRVkJyVTBvN08wRlBPVkpCTzBWQlEwVXNLMFJCUVVFN1JVRkRRU3hyUTBGQlFUdEJVR2xUUmpzN1FVODVVa0U3UlVGRFJUdEpRVU5GTEhsRVFVRkJPMGxCUTBFc09FSkJRVUU3U1VGRFFTeHpRa0ZCUVR0RlVHbFRSanRCUVVOR0lpd2labWxzWlNJNkluZHZjbXN2ZDI5eWF5NWpjM01pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lJdktpQm9kSFJ3T2k4dmJXVjVaWEozWldJdVkyOXRMMlZ5YVdNdmRHOXZiSE12WTNOekwzSmxjMlYwTDF4dUlDQWdkakl1TUNCOElESXdNVEV3TVRJMlhHNGdJQ0JNYVdObGJuTmxPaUJ1YjI1bElDaHdkV0pzYVdNZ1pHOXRZV2x1S1Z4dUtpOWNibHh1YUhSdGJDd2dZbTlrZVN3Z1pHbDJMQ0J6Y0dGdUxDQmhjSEJzWlhRc0lHOWlhbVZqZEN3Z2FXWnlZVzFsTEZ4dWFERXNJR2d5TENCb015d2dhRFFzSUdnMUxDQm9OaXdnY0N3Z1lteHZZMnR4ZFc5MFpTd2djSEpsTEZ4dVlTd2dZV0ppY2l3Z1lXTnliMjU1YlN3Z1lXUmtjbVZ6Y3l3Z1ltbG5MQ0JqYVhSbExDQmpiMlJsTEZ4dVpHVnNMQ0JrWm00c0lHVnRMQ0JwYldjc0lHbHVjeXdnYTJKa0xDQnhMQ0J6TENCellXMXdMRnh1YzIxaGJHd3NJSE4wY21sclpTd2djM1J5YjI1bkxDQnpkV0lzSUhOMWNDd2dkSFFzSUhaaGNpeGNibUlzSUhVc0lHa3NJR05sYm5SbGNpeGNibVJzTENCa2RDd2daR1FzSUc5c0xDQjFiQ3dnYkdrc1hHNW1hV1ZzWkhObGRDd2dabTl5YlN3Z2JHRmlaV3dzSUd4bFoyVnVaQ3hjYm5SaFlteGxMQ0JqWVhCMGFXOXVMQ0IwWW05a2VTd2dkR1p2YjNRc0lIUm9aV0ZrTENCMGNpd2dkR2dzSUhSa0xGeHVZWEowYVdOc1pTd2dZWE5wWkdVc0lHTmhiblpoY3l3Z1pHVjBZV2xzY3l3Z1pXMWlaV1FzWEc1bWFXZDFjbVVzSUdacFoyTmhjSFJwYjI0c0lHWnZiM1JsY2l3Z2FHVmhaR1Z5TENCb1ozSnZkWEFzWEc1dFpXNTFMQ0J1WVhZc0lHOTFkSEIxZEN3Z2NuVmllU3dnYzJWamRHbHZiaXdnYzNWdGJXRnllU3hjYm5ScGJXVXNJRzFoY21zc0lHRjFaR2x2TENCMmFXUmxieUI3WEc0Z0lHWnZiblE2SUdsdWFHVnlhWFE3WEc0Z0lHWnZiblF0YzJsNlpUb2dNVEF3SlR0Y2JpQWdiV0Z5WjJsdU9pQXdPMXh1SUNCd1lXUmthVzVuT2lBd08xeHVJQ0IyWlhKMGFXTmhiQzFoYkdsbmJqb2dZbUZ6Wld4cGJtVTdYRzRnSUdKdmNtUmxjam9nTUR0Y2JuMWNibHh1THlvZ1NGUk5URFVnWkdsemNHeGhlUzF5YjJ4bElISmxjMlYwSUdadmNpQnZiR1JsY2lCaWNtOTNjMlZ5Y3lBcUwxeHVZWEowYVdOc1pTd2dZWE5wWkdVc0lHUmxkR0ZwYkhNc0lHWnBaMk5oY0hScGIyNHNJR1pwWjNWeVpTeGNibVp2YjNSbGNpd2dhR1ZoWkdWeUxDQm9aM0p2ZFhBc0lHMWxiblVzSUc1aGRpd2djMlZqZEdsdmJpQjdYRzRnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1ZlZ4dVhHNWliMlI1SUh0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SURFN1hHNTlYRzVjYm05c0xDQjFiQ0I3WEc0Z0lHeHBjM1F0YzNSNWJHVTZJRzV2Ym1VN1hHNTlYRzVjYm1Kc2IyTnJjWFZ2ZEdVc0lIRWdlMXh1SUNCeGRXOTBaWE02SUc1dmJtVTdYRzU5WEc1Y2JtSnNiMk5yY1hWdmRHVTZZbVZtYjNKbExDQmliRzlqYTNGMWIzUmxPbUZtZEdWeUxGeHVjVHBpWldadmNtVXNJSEU2WVdaMFpYSWdlMXh1SUNCamIyNTBaVzUwT2lBbkp6dGNiaUFnWTI5dWRHVnVkRG9nYm05dVpUdGNibjFjYmx4dWRHRmliR1VnZTF4dUlDQmliM0prWlhJdGMzQmhZMmx1WnpvZ01EdGNiaUFnWW05eVpHVnlMV052Ykd4aGNITmxPaUJqYjJ4c1lYQnpaVHRjYm4waUxDSXZLaUJvZEhSd09pOHZiV1Y1WlhKM1pXSXVZMjl0TDJWeWFXTXZkRzl2YkhNdlkzTnpMM0psYzJWMEwxeHVJQ0FnZGpJdU1DQjhJREl3TVRFd01USTJYRzRnSUNCTWFXTmxibk5sT2lCdWIyNWxJQ2h3ZFdKc2FXTWdaRzl0WVdsdUtWeHVLaTljYm1oMGJXd3NJR0p2Wkhrc0lHUnBkaXdnYzNCaGJpd2dZWEJ3YkdWMExDQnZZbXBsWTNRc0lHbG1jbUZ0WlN4Y2JtZ3hMQ0JvTWl3Z2FETXNJR2cwTENCb05Td2dhRFlzSUhBc0lHSnNiMk5yY1hWdmRHVXNJSEJ5WlN4Y2JtRXNJR0ZpWW5Jc0lHRmpjbTl1ZVcwc0lHRmtaSEpsYzNNc0lHSnBaeXdnWTJsMFpTd2dZMjlrWlN4Y2JtUmxiQ3dnWkdadUxDQmxiU3dnYVcxbkxDQnBibk1zSUd0aVpDd2djU3dnY3l3Z2MyRnRjQ3hjYm5OdFlXeHNMQ0J6ZEhKcGEyVXNJSE4wY205dVp5d2djM1ZpTENCemRYQXNJSFIwTENCMllYSXNYRzVpTENCMUxDQnBMQ0JqWlc1MFpYSXNYRzVrYkN3Z1pIUXNJR1JrTENCdmJDd2dkV3dzSUd4cExGeHVabWxsYkdSelpYUXNJR1p2Y20wc0lHeGhZbVZzTENCc1pXZGxibVFzWEc1MFlXSnNaU3dnWTJGd2RHbHZiaXdnZEdKdlpIa3NJSFJtYjI5MExDQjBhR1ZoWkN3Z2RISXNJSFJvTENCMFpDeGNibUZ5ZEdsamJHVXNJR0Z6YVdSbExDQmpZVzUyWVhNc0lHUmxkR0ZwYkhNc0lHVnRZbVZrTEZ4dVptbG5kWEpsTENCbWFXZGpZWEIwYVc5dUxDQm1iMjkwWlhJc0lHaGxZV1JsY2l3Z2FHZHliM1Z3TEZ4dWJXVnVkU3dnYm1GMkxDQnZkWFJ3ZFhRc0lISjFZbmtzSUhObFkzUnBiMjRzSUhOMWJXMWhjbmtzWEc1MGFXMWxMQ0J0WVhKckxDQmhkV1JwYnl3Z2RtbGtaVzhnZTF4dUlDQm1iMjUwT2lCcGJtaGxjbWwwTzF4dUlDQm1iMjUwTFhOcGVtVTZJREV3TUNVN1hHNGdJRzFoY21kcGJqb2dNRHRjYmlBZ2NHRmtaR2x1WnpvZ01EdGNiaUFnZG1WeWRHbGpZV3d0WVd4cFoyNDZJR0poYzJWc2FXNWxPMXh1SUNCaWIzSmtaWEk2SURBN1hHNTlYRzVjYmk4cUlFaFVUVXcxSUdScGMzQnNZWGt0Y205c1pTQnlaWE5sZENCbWIzSWdiMnhrWlhJZ1luSnZkM05sY25NZ0tpOWNibUZ5ZEdsamJHVXNJR0Z6YVdSbExDQmtaWFJoYVd4ekxDQm1hV2RqWVhCMGFXOXVMQ0JtYVdkMWNtVXNYRzVtYjI5MFpYSXNJR2hsWVdSbGNpd2dhR2R5YjNWd0xDQnRaVzUxTENCdVlYWXNJSE5sWTNScGIyNGdlMXh1SUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYm4xY2JseHVZbTlrZVNCN1hHNGdJR3hwYm1VdGFHVnBaMmgwT2lBeE8xeHVmVnh1WEc1dmJDd2dkV3dnZTF4dUlDQnNhWE4wTFhOMGVXeGxPaUJ1YjI1bE8xeHVmVnh1WEc1aWJHOWphM0YxYjNSbExDQnhJSHRjYmlBZ2NYVnZkR1Z6T2lCdWIyNWxPMXh1ZlZ4dVhHNWliRzlqYTNGMWIzUmxPbUpsWm05eVpTd2dZbXh2WTJ0eGRXOTBaVHBoWm5SbGNpeGNibkU2WW1WbWIzSmxMQ0J4T21GbWRHVnlJSHRjYmlBZ1kyOXVkR1Z1ZERvZ1hDSmNJanRjYmlBZ1kyOXVkR1Z1ZERvZ2JtOXVaVHRjYm4xY2JseHVkR0ZpYkdVZ2UxeHVJQ0JpYjNKa1pYSXRjM0JoWTJsdVp6b2dNRHRjYmlBZ1ltOXlaR1Z5TFdOdmJHeGhjSE5sT2lCamIyeHNZWEJ6WlR0Y2JuMWNibHh1TG1admIzUmxjaUI3WEc0Z0lHWnZiblF0YzJsNlpUb2dNVFp3ZUR0Y2JpQWdZMjlzYjNJNklISmxaRHRjYm4xY2JseHVRR3RsZVdaeVlXMWxjeUJtWVdSbFNXNGdlMXh1SUNCbWNtOXRJSHRjYmlBZ0lDQnZjR0ZqYVhSNU9pQXdPMXh1SUNCOVhHNGdJSFJ2SUh0Y2JpQWdJQ0J2Y0dGamFYUjVPaUF4TzF4dUlDQjlYRzU5WEc0dVptRmtaVWx1SUh0Y2JpQWdZVzVwYldGMGFXOXVMVzVoYldVNklHWmhaR1ZKYmp0Y2JuMWNibHh1UUd0bGVXWnlZVzFsY3lCbVlXUmxTVzVFYjNkdUlIdGNiaUFnWm5KdmJTQjdYRzRnSUNBZ2IzQmhZMmwwZVRvZ01EdGNiaUFnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpUTmtLREFzSUMweE1EQWxMQ0F3S1R0Y2JpQWdmVnh1SUNCMGJ5QjdYRzRnSUNBZ2IzQmhZMmwwZVRvZ01UdGNiaUFnSUNCMGNtRnVjMlp2Y20wNklHNXZibVU3WEc0Z0lIMWNibjFjYmk1bVlXUmxTVzVFYjNkdUlIdGNiaUFnWVc1cGJXRjBhVzl1TFc1aGJXVTZJR1poWkdWSmJrUnZkMjQ3WEc1OVhHNWNia0JyWlhsbWNtRnRaWE1nWm1Ga1pVbHVUR1ZtZENCN1hHNGdJR1p5YjIwZ2UxeHVJQ0FnSUc5d1lXTnBkSGs2SURBN1hHNGdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdVelpDZ3RNVEF3SlN3Z01Dd2dNQ2s3WEc0Z0lIMWNiaUFnZEc4Z2UxeHVJQ0FnSUc5d1lXTnBkSGs2SURFN1hHNGdJQ0FnZEhKaGJuTm1iM0p0T2lCdWIyNWxPMXh1SUNCOVhHNTlYRzR1Wm1Ga1pVbHVUR1ZtZENCN1hHNGdJR0Z1YVcxaGRHbHZiaTF1WVcxbE9pQm1ZV1JsU1c1TVpXWjBPMXh1ZlZ4dVhHNUFhMlY1Wm5KaGJXVnpJR1poWkdWSmJsSnBaMmgwSUh0Y2JpQWdabkp2YlNCN1hHNGdJQ0FnYjNCaFkybDBlVG9nTUR0Y2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlROa0tERXdNQ1VzSURBc0lEQXBPMXh1SUNCOVhHNGdJSFJ2SUh0Y2JpQWdJQ0J2Y0dGamFYUjVPaUF4TzF4dUlDQWdJSFJ5WVc1elptOXliVG9nYm05dVpUdGNiaUFnZlZ4dWZWeHVMbVpoWkdWSmJsSnBaMmgwSUh0Y2JpQWdZVzVwYldGMGFXOXVMVzVoYldVNklHWmhaR1ZKYmxKcFoyaDBPMXh1ZlZ4dVhHNUFhMlY1Wm5KaGJXVnpJR1poWkdWSmJsVndJSHRjYmlBZ1puSnZiU0I3WEc0Z0lDQWdiM0JoWTJsMGVUb2dNRHRjYmlBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVE5rS0RBc0lERXdNQ1VzSURBcE8xeHVJQ0I5WEc0Z0lIUnZJSHRjYmlBZ0lDQnZjR0ZqYVhSNU9pQXhPMXh1SUNBZ0lIUnlZVzV6Wm05eWJUb2dibTl1WlR0Y2JpQWdmVnh1ZlZ4dUxtWmhaR1ZKYmxWd0lIdGNiaUFnWVc1cGJXRjBhVzl1TFc1aGJXVTZJR1poWkdWSmJsVndPMXh1ZlZ4dVhHNUFhMlY1Wm5KaGJXVnpJSE5zYVdSbFNXNVZjQ0I3WEc0Z0lHWnliMjBnZTF4dUlDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsTTJRb01Dd2dNVEF3SlN3Z01DazdYRzRnSUNBZ2RtbHphV0pwYkdsMGVUb2dkbWx6YVdKc1pUdGNiaUFnZlZ4dUlDQjBieUI3WEc0Z0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1V6WkNnd0xDQXdMQ0F3S1R0Y2JpQWdmVnh1ZlZ4dUxuTnNhV1JsU1c1VmNDQjdYRzRnSUdGdWFXMWhkR2x2YmkxdVlXMWxPaUJ6Ykdsa1pVbHVWWEE3WEc1OVhHNWNiaTV5WlhabGNuTmxJSHRjYmlBZ1lXNXBiV0YwYVc5dUxXUnBjbVZqZEdsdmJqb2djbVYyWlhKelpUdGNiaUFnWVc1cGJXRjBhVzl1TFdacGJHd3RiVzlrWlRvZ1ptOXlkMkZ5WkhNN1hHNTlYRzVjYmk1bmNtRjVMV3hoZVdWeUlIdGNiaUFnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQjZMV2x1WkdWNE9pQXRNVHRjYmlBZ2QybGtkR2c2SURFd01DVTdYRzRnSUdobGFXZG9kRG9nTVRBd0pUdGNiaUFnYjNCaFkybDBlVG9nTUM0ek8xeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqTURNd016QXpPMXh1ZlZ4dVhHNHVZMnh2YzJVZ2UxeHVJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnZDJsa2RHZzZJRFExY0hnN1hHNGdJR2hsYVdkb2REb2dORFZ3ZUR0Y2JuMWNiaTVqYkc5elpWOWZjM1puSUh0Y2JpQWdkSEpoYm5OcGRHbHZiam9nWVd4c0lEQXVOSE1nWldGelpUdGNiaUFnWm1sc2JEb2dJMFJFUkRORE56dGNibjFjYmk1amJHOXpaVjlmYzNabk9taHZkbVZ5TENBdVkyeHZjMlZmWDNOMlp6cG1iMk4xY3l3Z0xtTnNiM05sWDE5emRtYzZZV04wYVhabElIdGNiaUFnZEhKaGJuTnBkR2x2YmpvZ1lXeHNJREF1TkhNZ1pXRnpaVHRjYmlBZ2RISmhibk5tYjNKdE9pQnliM1JoZEdVb05HUmxaeWs3WEc0Z0lHWnBiR3c2SUNNNFJESXpNak03WEc1OVhHNWNibWhsWVdSbGNpQjdYRzRnSUhCdmMybDBhVzl1T2lCemRHbGphM2s3WEc0Z0lIUnZjRG9nTUR0Y2JuMWNibHh1TG1obFlXUmxjbDlmYkc5bmJ5QnpkbWNnZTF4dUlDQjNhV1IwYURvZ01UTXdjSGc3WEc0Z0lHaGxhV2RvZERvZ05EVndlRHRjYm4xY2JpNW9aV0ZrWlhKZlgySjFjbWRsY2lCemRtY2dlMXh1SUNCM2FXUjBhRG9nTkRWd2VEdGNiaUFnYUdWcFoyaDBPaUEwTlhCNE8xeHVJQ0IwY21GdWMybDBhVzl1T2lCaGJHd2dNQzQwY3lCbFlYTmxPMXh1ZlZ4dUxtaGxZV1JsY2w5ZlluVnlaMlZ5SUhOMlp6cG9iM1psY2l3Z0xtaGxZV1JsY2w5ZlluVnlaMlZ5SUhOMlp6cG1iMk4xY3l3Z0xtaGxZV1JsY2w5ZlluVnlaMlZ5SUhOMlp6cGhZM1JwZG1VZ2UxeHVJQ0IwY21GdWMybDBhVzl1T2lCaGJHd2dNQzQwY3lCbFlYTmxPMXh1SUNCMGNtRnVjMlp2Y20wNklISnZkR0YwWlNnMFpHVm5LVHRjYm4xY2JpNW9aV0ZrWlhKZlgyeHZaMjhnYzNabk9taHZkbVZ5SUhCaGRHZ3NJQzVvWldGa1pYSmZYMnh2WjI4Z2MzWm5PbVp2WTNWeklIQmhkR2dzSUM1b1pXRmtaWEpmWDJ4dloyOGdjM1puT21GamRHbDJaU0J3WVhSb0xDQXVhR1ZoWkdWeVgxOWlkWEpuWlhJZ2MzWm5PbWh2ZG1WeUlIQmhkR2dzSUM1b1pXRmtaWEpmWDJKMWNtZGxjaUJ6ZG1jNlptOWpkWE1nY0dGMGFDd2dMbWhsWVdSbGNsOWZZblZ5WjJWeUlITjJaenBoWTNScGRtVWdjR0YwYUNCN1hHNGdJSFJ5WVc1emFYUnBiMjQ2SUdGc2JDQXdMalJ6SUdWaGMyVTdYRzRnSUdacGJHdzZJQ000UkRJek1qTTdYRzU5WEc0dWFHVmhaR1Z5WDE5c2IyZHZJSE4yWnlCd1lYUm9MQ0F1YUdWaFpHVnlYMTlpZFhKblpYSWdjM1puSUhCaGRHZ2dlMXh1SUNCMGNtRnVjMmwwYVc5dU9pQmhiR3dnTUM0MGN5QmxZWE5sTzF4dUlDQm1hV3hzT2lBalJFUkVNME0zTzF4dWZWeHVMbWhsWVdSbGNsOWZZblZ5WjJWeUxYZHlZWEJ3WlhJZ2UxeHVJQ0J3YjNOcGRHbHZiam9nWm1sNFpXUTdYRzRnSUhvdGFXNWtaWGc2SURrNU9UazdYRzRnSUdKdmRIUnZiVG9nTUR0Y2JpQWdiR1ZtZERvZ01EdGNiaUFnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2JpQWdabXhsZUMxa2FYSmxZM1JwYjI0NklHTnZiSFZ0Ymp0Y2JpQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQmpaVzUwWlhJN1hHNGdJSGRwWkhSb09pQXhNREFsTzF4dUlDQm9aV2xuYUhRNklERXdNQ1U3WEc0Z0lHRnVhVzFoZEdsdmJpMWtkWEpoZEdsdmJqb2dNQzQyY3p0Y2JpQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh1SUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUF6TUhCNElEQWdNQ0F6TUhCNE8xeHVJQ0JpWVdOclozSnZkVzVrTFdsdFlXZGxPaUIxY213b1hDSXVMaTh1TGk5cGJXRm5aWE12YldWdWRTOXRaVzUxTFdKaFkydG5jbTkxYm1RdWNHNW5YQ0lwTzF4dUlDQmlZV05yWjNKdmRXNWtMV0YwZEdGamFHMWxiblE2SUdacGVHVmtPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYQnZjMmwwYVc5dU9pQmpaVzUwWlhJZ1kyVnVkR1Z5TzF4dUlDQmlZV05yWjNKdmRXNWtMWE5wZW1VNklHTnZkbVZ5TzF4dWZWeHVMbWhsWVdSbGNsOWZiV1Z1ZFNCN1hHNGdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJR0ZzYVdkdUxXTnZiblJsYm5RNklHTmxiblJsY2p0Y2JpQWdabXhsZUMxa2FYSmxZM1JwYjI0NklISnZkenRjYmlBZ2FuVnpkR2xtZVMxamIyNTBaVzUwT2lCemNHRmpaUzFpWlhSM1pXVnVPMXh1SUNCd1lXUmthVzVuT2lBek1IQjRJREE3WEc0Z0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNqdGNibjFjYmk1b1pXRmtaWEpmWDIxbGJuVXRhWFJsYlNCN1hHNGdJSFJ5WVc1emFYUnBiMjQ2SUdGc2JDQXdMalJ6SUdWaGMyVTdYRzRnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYm05dVpUdGNibjFjYmk1b1pXRmtaWEpmWDIxbGJuVXRhWFJsYlRwb2IzWmxjaXdnTG1obFlXUmxjbDlmYldWdWRTMXBkR1Z0T21adlkzVnpMQ0F1YUdWaFpHVnlYMTl0Wlc1MUxXbDBaVzA2WVdOMGFYWmxJSHRjYmlBZ2RISmhibk5wZEdsdmJqb2dZV3hzSURBdU5ITWdaV0Z6WlR0Y2JpQWdkSEpoYm5ObWIzSnRPaUJ6YTJWM0tDMDRaR1ZuS1R0Y2JuMWNiaTVvWldGa1pYSmZYMjFsYm5VdGFYUmxiVHBvYjNabGNpQmhMQ0F1YUdWaFpHVnlYMTl0Wlc1MUxXbDBaVzA2Wm05amRYTWdZU3dnTG1obFlXUmxjbDlmYldWdWRTMXBkR1Z0T21GamRHbDJaU0JoSUh0Y2JpQWdZMjlzYjNJNklDTTRSREl6TWpNN1hHNTlYRzR1YUdWaFpHVnlYMTl0Wlc1MUxXbDBaVzBnWVNCN1hHNGdJR1p2Ym5RdGMybDZaVG9nTlRKd2VEdGNiaUFnWm05dWRDMTNaV2xuYUhRNklHSnZiR1E3WEc0Z0lHeHBibVV0YUdWcFoyaDBPaUF4TGpKbGJUdGNiaUFnZEdWNGRDMWtaV052Y21GMGFXOXVPaUJ1YjI1bE8xeHVJQ0JzWlhSMFpYSXRjM0JoWTJsdVp6b2dMVEV1TVhCNE8xeHVJQ0JqYjJ4dmNqb2dJMFJFUkRORE56dGNibjFjYmk1b1pXRmtaWEpmWDIxdlltbHNaUzF3Y21sMllXTjVJSHRjYmlBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCdWIyNWxPMXh1ZlZ4dVhHNUFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV2x1TFhkcFpIUm9PaUF4TURJMWNIZ3BJSHRjYmlBZ0xtaGxZV1JsY2w5ZmJXVnVkU0I3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dORE53ZUNBd08xeHVJQ0I5WEc0Z0lDNW9aV0ZrWlhKZlgyMXZZbWxzWlNCN1hHNGdJQ0FnWkdsemNHeGhlVG9nYm05dVpUdGNiaUFnZlZ4dWZWeHVMbWhwWkdSbGJpQjdYRzRnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzU5WEc1Y2Jpb2dlMXh1SUNCaWIzZ3RjMmw2YVc1bk9pQmliM0prWlhJdFltOTRPMXh1SUNCdFlYSm5hVzQ2SURBN1hHNGdJSEJoWkdScGJtYzZJREE3WEc0Z0lHTnZiRzl5T2lBalJrWkdSa1pHTzF4dWZWeHVYRzR1WTI5dWRHRnBibVZ5WDIxaGFXNGdlMXh1SUNCdGFXNHRhR1ZwWjJoME9pQXhNREIyYUR0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2djbWRpWVNnd0xDQXdMQ0F3TENBd0xqSXBPMXh1ZlZ4dVhHNHVjR0ZuWlMxamIyNTBaVzUwSUh0Y2JpQWdiV0Z5WjJsdU9pQXdJR0YxZEc4N1hHNGdJSEJoWkdScGJtYzZJREFnTXpCd2VEdGNibjFjYmx4dVltOWtlU0I3WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUF0WVhCd2JHVXRjM2x6ZEdWdExDQkNiR2x1YTAxaFkxTjVjM1JsYlVadmJuUXNJRk5sWjI5bElGVkpMQ0JTYjJKdmRHOHNJRWhsYkhabGRHbGpZU0JPWlhWbExDQkJjbWxoYkN3Z1RtOTBieUJUWVc1ekxDQnpZVzV6TFhObGNtbG1MQ0JCY0hCc1pTQkRiMnh2Y2lCRmJXOXFhU3dnVTJWbmIyVWdWVWtnUlcxdmFta3NJRk5sWjI5bElGVkpJRk41YldKdmJDd2dUbTkwYnlCRGIyeHZjaUJGYlc5cWFUdGNiaUFnWW1GamEyZHliM1Z1WkMxeVpYQmxZWFE2SUhKbGNHVmhkQzE1TzF4dUlDQmlZV05yWjNKdmRXNWtMWEJ2YzJsMGFXOXVPaUIwYjNBZ1kyVnVkR1Z5TzF4dUlDQmlZV05yWjNKdmRXNWtMWE5wZW1VNklHTnZkbVZ5TzF4dWZWeHVYRzVBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldsdUxYZHBaSFJvT2lBeE1ESTFjSGdwSUh0Y2JpQWdZbTlrZVNCN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkMxeVpYQmxZWFE2SUc1dkxYSmxjR1ZoZER0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFdGMGRHRmphRzFsYm5RNklHWnBlR1ZrTzF4dUlDQWdJR0poWTJ0bmNtOTFibVF0Y0c5emFYUnBiMjQ2SUdObGJuUmxjaUJqWlc1MFpYSTdYRzRnSUgxY2JpQWdMbkJoWjJVdFkyOXVkR1Z1ZENCN1hHNGdJQ0FnZDJsa2RHZzZJRGt3SlR0Y2JpQWdJQ0J3WVdSa2FXNW5PaUF3TzF4dUlDQjlYRzU5WEc0dWFHVmhaR1Z5WDE5M2IzSnJJSHRjYmlBZ1kyOXNiM0k2SUNNNFJESXpNak1nSVdsdGNHOXlkR0Z1ZER0Y2JuMWNibHh1WW05a2VTQjdYRzRnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUhWeWJDaGNJaTR1THk0dUwybHRZV2RsY3k5M2IzSnJMMkpoWTJ0bmNtOTFibVF0ZEdGaWJHVXVjRzVuWENJcE8xeHVJQ0JpWVdOclozSnZkVzVrTFhCdmMybDBhVzl1T2lCalpXNTBaWElnWTJWdWRHVnlPMXh1ZlZ4dVhHNUFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV2x1TFhkcFpIUm9PaUF4TURJMWNIZ3BJSHRjYmlBZ1ltOWtlU0I3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFwYldGblpUb2dkWEpzS0Z3aUxpNHZMaTR2YVcxaFoyVnpMM2R2Y21zdlltRmphMmR5YjNWdVpDNXdibWRjSWlrN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkMxd2IzTnBkR2x2YmpvZ2RHOXdJSEpwWjJoME8xeHVJQ0FnSUdKaFkydG5jbTkxYm1RdGMybDZaVG9nWTI5MlpYSTdYRzRnSUgxY2JuMGlMQ0l1Wm05dmRHVnlJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXhObkI0TzF4dUlDQmpiMnh2Y2pvZ2NtVmtPMXh1ZlNJc0lrQnJaWGxtY21GdFpYTWdabUZrWlVsdUlIdGNiaUFnWm5KdmJTQjdYRzRnSUNBZ2IzQmhZMmwwZVRvZ01GeHVJQ0I5WEc0Z0lIUnZJSHRjYmlBZ0lDQnZjR0ZqYVhSNU9pQXhPMXh1SUNCOVhHNTlYRzVjYmk1bVlXUmxTVzRnZTF4dUlDQmhibWx0WVhScGIyNHRibUZ0WlRvZ1ptRmtaVWx1TzF4dWZWeHVYRzVBYTJWNVpuSmhiV1Z6SUdaaFpHVkpia1J2ZDI0Z2UxeHVJQ0JtY205dElIdGNiaUFnSUNCdmNHRmphWFI1T2lBd08xeHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbE0yUW9NQ3dnTFRFd01DVXNJREFwTzF4dUlDQjlYRzRnSUhSdklIdGNiaUFnSUNCdmNHRmphWFI1T2lBeE8xeHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2JtOXVaVHRjYmlBZ2ZWeHVmVnh1WEc0dVptRmtaVWx1Ukc5M2JpQjdYRzRnSUdGdWFXMWhkR2x2YmkxdVlXMWxPaUJtWVdSbFNXNUViM2R1TzF4dWZWeHVYRzVBYTJWNVpuSmhiV1Z6SUdaaFpHVkpia3hsWm5RZ2UxeHVJQ0JtY205dElIdGNiaUFnSUNCdmNHRmphWFI1T2lBd08xeHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbE0yUW9MVEV3TUNVc0lEQXNJREFwTzF4dUlDQjlYRzRnSUhSdklIdGNiaUFnSUNCdmNHRmphWFI1T2lBeE8xeHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2JtOXVaVHRjYmlBZ2ZWeHVmVnh1WEc0dVptRmtaVWx1VEdWbWRDQjdYRzRnSUdGdWFXMWhkR2x2YmkxdVlXMWxPaUJtWVdSbFNXNU1aV1owTzF4dWZWeHVYRzVBYTJWNVpuSmhiV1Z6SUdaaFpHVkpibEpwWjJoMElIdGNiaUFnWm5KdmJTQjdYRzRnSUNBZ2IzQmhZMmwwZVRvZ01EdGNiaUFnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpUTmtLREV3TUNVc0lEQXNJREFwTzF4dUlDQjlYRzRnSUhSdklIdGNiaUFnSUNCdmNHRmphWFI1T2lBeE8xeHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2JtOXVaVHRjYmlBZ2ZWeHVmVnh1WEc0dVptRmtaVWx1VW1sbmFIUWdlMXh1SUNCaGJtbHRZWFJwYjI0dGJtRnRaVG9nWm1Ga1pVbHVVbWxuYUhRN1hHNTlYRzVjYmtCclpYbG1jbUZ0WlhNZ1ptRmtaVWx1VlhBZ2UxeHVJQ0JtY205dElIdGNiaUFnSUNCdmNHRmphWFI1T2lBd08xeHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbE0yUW9NQ3dnTVRBd0pTd2dNQ2s3WEc0Z0lIMWNiaUFnZEc4Z2UxeHVJQ0FnSUc5d1lXTnBkSGs2SURFN1hHNGdJQ0FnZEhKaGJuTm1iM0p0T2lCdWIyNWxPMXh1SUNCOVhHNTlYRzVjYmk1bVlXUmxTVzVWY0NCN1hHNGdJR0Z1YVcxaGRHbHZiaTF1WVcxbE9pQm1ZV1JsU1c1VmNEdGNibjBpTENKQWEyVjVabkpoYldWeklITnNhV1JsU1c1VmNDQjdYRzRnSUdaeWIyMGdlMXh1SUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxNMlFvTUN3Z01UQXdKU3dnTUNrN1hHNGdJQ0FnZG1semFXSnBiR2wwZVRvZ2RtbHphV0pzWlZ4dUlDQjlYRzRnSUhSdklIdGNiaUFnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpUTmtLREFzSURBc0lEQXBYRzRnSUgxY2JuMWNibHh1TG5Oc2FXUmxTVzVWY0NCN1hHNGdJR0Z1YVcxaGRHbHZiaTF1WVcxbE9pQnpiR2xrWlVsdVZYQmNibjBpTENKQWFXMXdiM0owSUNjdUxpOWpiMjVtYVdjdlkyOXVjM1FuTzF4dVFHbHRjRzl5ZENBbkxpNHZZVzVwYldGMGFXOXVjeTltWVdSbFNXNG5PMXh1UUdsdGNHOXlkQ0FuTGk0dllXNXBiV0YwYVc5dWN5OXpiR2xrWlVsdUp6dGNibHh1TG5KbGRtVnljMlVnZTF4dUlDQmhibWx0WVhScGIyNHRaR2x5WldOMGFXOXVPaUJ5WlhabGNuTmxPMXh1SUNCaGJtbHRZWFJwYjI0dFptbHNiQzF0YjJSbE9pQm1iM0ozWVhKa2N6dGNibjFjYmx4dUxtZHlZWGt0YkdGNVpYSWdlMXh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJSG90YVc1a1pYZzZJQzB4TzF4dUlDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ2FHVnBaMmgwT2lBeE1EQWxPMXh1SUNCdmNHRmphWFI1T2lBd0xqTTdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNSbmJHOWlZV3hIY21GNVRHRjVaWEk3WEc1OVhHNWNiaTVqYkc5elpTQjdYRzRnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNCM2FXUjBhRG9nTkRWd2VEdGNiaUFnYUdWcFoyaDBPaUEwTlhCNE8xeHVYRzRnSUNaZlgzTjJaeUI3WEc0Z0lDQWdkSEpoYm5OcGRHbHZiam9nSkdSbFptRjFiSFJVY21GdWMybDBhVzl1TzF4dUlDQWdJR1pwYkd3NklDUm5iRzlpWVd4RGIyeHZjbEJ5YVcxaGNuazdYRzVjYmlBZ0lDQW1PbWh2ZG1WeUxGeHVJQ0FnSUNZNlptOWpkWE1zWEc0Z0lDQWdKanBoWTNScGRtVWdlMXh1SUNBZ0lDQWdkSEpoYm5OcGRHbHZiam9nSkdSbFptRjFiSFJVY21GdWMybDBhVzl1TzF4dUlDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCeWIzUmhkR1VvTkdSbFp5azdYRzRnSUNBZ0lDQm1hV3hzT2lBa1oyeHZZbUZzUTI5c2IzSlFjbWx0WVhKNVNHOTJaWEk3WEc0Z0lDQWdmVnh1SUNCOVhHNTlYRzVjYm1obFlXUmxjaUI3WEc0Z0lIQnZjMmwwYVc5dU9pQnpkR2xqYTNrN1hHNGdJSFJ2Y0RvZ01EdGNibjFjYmx4dUxtaGxZV1JsY2lCN1hHNGdJQ1pmWDJ4dloyOGdjM1puSUh0Y2JpQWdJQ0IzYVdSMGFEb2dNVE13Y0hnN1hHNGdJQ0FnYUdWcFoyaDBPaUEwTlhCNE8xeHVJQ0I5WEc1Y2JpQWdKbDlmWW5WeVoyVnlJSE4yWnlCN1hHNGdJQ0FnZDJsa2RHZzZJRFExY0hnN1hHNGdJQ0FnYUdWcFoyaDBPaUEwTlhCNE8xeHVJQ0FnSUhSeVlXNXphWFJwYjI0NklDUmtaV1poZFd4MFZISmhibk5wZEdsdmJqdGNibHh1SUNBZ0lDWTZhRzkyWlhJc1hHNGdJQ0FnSmpwbWIyTjFjeXhjYmlBZ0lDQW1PbUZqZEdsMlpTQjdYRzRnSUNBZ0lDQjBjbUZ1YzJsMGFXOXVPaUFrWkdWbVlYVnNkRlJ5WVc1emFYUnBiMjQ3WEc0Z0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhKdmRHRjBaU2cwWkdWbktUdGNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQW1YMTlzYjJkdklITjJaeXhjYmlBZ0psOWZZblZ5WjJWeUlITjJaeUI3WEc0Z0lDQWdKanBvYjNabGNpeGNiaUFnSUNBbU9tWnZZM1Z6TEZ4dUlDQWdJQ1k2WVdOMGFYWmxJSHRjYmlBZ0lDQWdJSEJoZEdnZ2UxeHVJQ0FnSUNBZ0lDQjBjbUZ1YzJsMGFXOXVPaUFrWkdWbVlYVnNkRlJ5WVc1emFYUnBiMjQ3WEc0Z0lDQWdJQ0FnSUdacGJHdzZJQ1JuYkc5aVlXeERiMnh2Y2xCeWFXMWhjbmxJYjNabGNqdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNCd1lYUm9JSHRjYmlBZ0lDQWdJSFJ5WVc1emFYUnBiMjQ2SUNSa1pXWmhkV3gwVkhKaGJuTnBkR2x2Ymp0Y2JpQWdJQ0FnSUdacGJHdzZJQ1JuYkc5aVlXeERiMnh2Y2xCeWFXMWhjbms3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnSmw5ZlluVnlaMlZ5TFhkeVlYQndaWElnZTF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJtYVhobFpEdGNiaUFnSUNCNkxXbHVaR1Y0T2lBNU9UazVPMXh1SUNBZ0lHSnZkSFJ2YlRvZ01EdGNiaUFnSUNCc1pXWjBPaUF3TzF4dUlDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJQ0FnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2JpQWdJQ0JtYkdWNExXUnBjbVZqZEdsdmJqb2dZMjlzZFcxdU8xeHVJQ0FnSUdwMWMzUnBabmt0WTI5dWRHVnVkRG9nWTJWdWRHVnlPMXh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lHaGxhV2RvZERvZ01UQXdKVHRjYmlBZ0lDQmhibWx0WVhScGIyNHRaSFZ5WVhScGIyNDZJQ1JrWldaaGRXeDBRVzVwYldGMGFXOXVSSFZ5WVhScGIyNDdYRzRnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHVJQ0FnSUdKdmNtUmxjaTF5WVdScGRYTTZJRE13Y0hnZ01DQXdJRE13Y0hnN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkMxcGJXRm5aVG9nZFhKc0tDY3VMaTh1TGk5cGJXRm5aWE12YldWdWRTOXRaVzUxTFdKaFkydG5jbTkxYm1RdWNHNW5KeWs3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFoZEhSaFkyaHRaVzUwT2lCbWFYaGxaRHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtMWEJ2YzJsMGFXOXVPaUJqWlc1MFpYSWdZMlZ1ZEdWeU8xeHVJQ0FnSUdKaFkydG5jbTkxYm1RdGMybDZaVG9nWTI5MlpYSTdYRzRnSUgxY2JseHVJQ0FtWDE5dFpXNTFJSHRjYmlBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJR0ZzYVdkdUxXTnZiblJsYm5RNklHTmxiblJsY2p0Y2JpQWdJQ0JtYkdWNExXUnBjbVZqZEdsdmJqb2djbTkzTzF4dUlDQWdJR3AxYzNScFpua3RZMjl1ZEdWdWREb2djM0JoWTJVdFltVjBkMlZsYmp0Y2JpQWdJQ0J3WVdSa2FXNW5PaUF6TUhCNElEQTdYRzRnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHVYRzRnSUNBZ0ppMXBkR1Z0SUh0Y2JpQWdJQ0FnSUhSeVlXNXphWFJwYjI0NklDUmtaV1poZFd4MFZISmhibk5wZEdsdmJqdGNiaUFnSUNBZ0lIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JtOXVaVHRjYmx4dUlDQWdJQ0FnSmpwb2IzWmxjaXhjYmlBZ0lDQWdJQ1k2Wm05amRYTXNYRzRnSUNBZ0lDQW1PbUZqZEdsMlpTQjdYRzRnSUNBZ0lDQWdJSFJ5WVc1emFYUnBiMjQ2SUNSa1pXWmhkV3gwVkhKaGJuTnBkR2x2Ymp0Y2JpQWdJQ0FnSUNBZ2RISmhibk5tYjNKdE9pQnphMlYzS0MwNFpHVm5LVHRjYmx4dUlDQWdJQ0FnSUNCaElIdGNiaUFnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2dKR2RzYjJKaGJFTnZiRzl5VUhKcGJXRnllVWh2ZG1WeU8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJR0VnZTF4dUlDQWdJQ0FnSUNBdkwyWnZiblF0Wm1GdGFXeDVPaUFuUW1GemFXVnlJRUp2YkdRbkxDQnpZVzV6TFhObGNtbG1PMXh1SUNBZ0lDQWdJQ0F2TDJadmJuUXRabUZ0YVd4NU9pQW5VblZpYVdzbkxDQnpZVzV6TFhObGNtbG1PMXh1SUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SURVeWNIZzdYRzRnSUNBZ0lDQWdJR1p2Ym5RdGQyVnBaMmgwT2lCaWIyeGtPMXh1SUNBZ0lDQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01TNHlaVzA3WEc0Z0lDQWdJQ0FnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYm05dVpUdGNiaUFnSUNBZ0lDQWdiR1YwZEdWeUxYTndZV05wYm1jNklDMHhMakZ3ZUR0Y2JpQWdJQ0FnSUNBZ1kyOXNiM0k2SUNSbmJHOWlZV3hEYjJ4dmNsQnlhVzFoY25rN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ0psOWZiVzlpYVd4bElIdGNiaUFnSUNBbUxYQnlhWFpoWTNrZ2UxeHVJQ0FnSUNBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCdWIyNWxPMXh1SUNBZ0lIMWNiaUFnZlZ4dWZWeHVYRzVBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldsdUxYZHBaSFJvT2lBeE1ESTFjSGdwSUh0Y2JpQWdMbWhsWVdSbGNpQjdYRzRnSUNBZ0psOWZiV1Z1ZFNCN1hHNGdJQ0FnSUNCd1lXUmthVzVuT2lBME0zQjRJREE3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdKbDlmYlc5aWFXeGxJSHRjYmlBZ0lDQWdJR1JwYzNCc1lYazZJRzV2Ym1VN1hHNGdJQ0FnZlZ4dUlDQjlYRzU5WEc1Y2JpNW9hV1JrWlc0Z2UxeHVJQ0JrYVhOd2JHRjVPaUJ1YjI1bE8xeHVmU0lzSWk4dklFTnZiRzl5YzF4dUpHZHNiMkpoYkVOdmJHOXlVSEpwYldGeWVUb2dJMFJFUkRORE56dGNiaVJuYkc5aVlXeERiMnh2Y2xCeWFXMWhjbmxJYjNabGNqb2dJemhFTWpNeU16dGNiaVJuYkc5aVlXeENZV05yWjNKdmRXNWtRMjlzYjNJNklDTXdNREF3TURBek16dGNiaVJuYkc5aVlXeEhjbUY1VEdGNVpYSTZJQ013TXpBek1ETTdYRzVjYmk4dklFTnZibk4wWEc0a1pHVm1ZWFZzZEZSeVlXNXphWFJwYjI0NklHRnNiQ0F1TkhNZ1pXRnpaVHRjYmlSa1pXWmhkV3gwUVc1cGJXRjBhVzl1UkhWeVlYUnBiMjQ2SUM0MmN6c2lMQ0pBYVcxd2IzSjBJQ2N1TDNKbGMyVjBKenRjYmtCcGJYQnZjblFnSnk0dkxpNHZZMjl0Y0c5dVpXNTBjeTltYjI5MFpYSW5PMXh1UUdsdGNHOXlkQ0FuTGk4dUxpOWpiMjF3YjI1bGJuUnpMMmhsWVdSbGNpYzdYRzVBYVcxd2IzSjBJQ2N1TGk5amIyNW1hV2N2WTI5dWMzUW5PMXh1WEc0a1oyeHZZbUZzUTI5dWRHRnBibVZ5VjJsa2RHZzZJRGt3SlR0Y2JseHVLaUI3WEc0Z0lHSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2c3WEc0Z0lHMWhjbWRwYmpvZ01EdGNiaUFnY0dGa1pHbHVaem9nTUR0Y2JpQWdZMjlzYjNJNklDTkdSa1pHUmtZN1hHNTlYRzVjYmk1amIyNTBZV2x1WlhKZmJXRnBiaUI3WEc0Z0lHMXBiaTFvWldsbmFIUTZJREV3TUhab08xeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFrWjJ4dlltRnNRbUZqYTJkeWIzVnVaRU52Ykc5eU8xeHVmVnh1WEc0dWNHRm5aUzFqYjI1MFpXNTBJSHRjYmlBZ2JXRnlaMmx1T2lBd0lHRjFkRzg3WEc0Z0lIQmhaR1JwYm1jNklEQWdNekJ3ZUR0Y2JuMWNibHh1WW05a2VTQjdYRzRnSUdadmJuUXRabUZ0YVd4NU9pQXRZWEJ3YkdVdGMzbHpkR1Z0TENCQ2JHbHVhMDFoWTFONWMzUmxiVVp2Ym5Rc0lGTmxaMjlsSUZWSkxDQlNiMkp2ZEc4c0lFaGxiSFpsZEdsallTQk9aWFZsTENCQmNtbGhiQ3dnVG05MGJ5QlRZVzV6TENCellXNXpMWE5sY21sbUxDQkJjSEJzWlNCRGIyeHZjaUJGYlc5cWFTd2dVMlZuYjJVZ1ZVa2dSVzF2YW1rc0lGTmxaMjlsSUZWSklGTjViV0p2YkN3Z1RtOTBieUJEYjJ4dmNpQkZiVzlxYVR0Y2JpQWdZbUZqYTJkeWIzVnVaQzF5WlhCbFlYUTZJSEpsY0dWaGRDMTVPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYQnZjMmwwYVc5dU9pQjBiM0FnWTJWdWRHVnlPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYTnBlbVU2SUdOdmRtVnlPMXh1ZlZ4dVhHNUFiV1ZrYVdFZ2MyTnlaV1Z1SUdGdVpDQW9iV2x1TFhkcFpIUm9PaUEzTmpod2VDa2dlMXh1WEc1OVhHNWNia0J0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SURFd01qVndlQ2tnZTF4dUlDQmliMlI1SUh0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFhKbGNHVmhkRG9nYm04dGNtVndaV0YwTzF4dUlDQWdJR0poWTJ0bmNtOTFibVF0WVhSMFlXTm9iV1Z1ZERvZ1ptbDRaV1E3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzF3YjNOcGRHbHZiam9nWTJWdWRHVnlJR05sYm5SbGNqdGNiaUFnZlZ4dVhHNGdJQzV3WVdkbExXTnZiblJsYm5RZ2UxeHVJQ0FnSUhkcFpIUm9PaUFrWjJ4dlltRnNRMjl1ZEdGcGJtVnlWMmxrZEdnN1hHNGdJQ0FnY0dGa1pHbHVaem9nTUR0Y2JpQWdmVnh1ZlNJc0lrQnBiWEJ2Y25RZ0p5NHVMMk52Ym1acFp5OWpiMjVtYVdjbk8xeHVYRzR1YUdWaFpHVnlJSHRjYmlBZ0psOWZkMjl5YXlCN1hHNGdJQ0FnWTI5c2IzSTZJQ1JuYkc5aVlXeERiMnh2Y2xCeWFXMWhjbmxJYjNabGNpQWhhVzF3YjNKMFlXNTBPMXh1SUNCOVhHNTlYRzVjYm1KdlpIa2dlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXbHRZV2RsT2lCMWNtd29KeTR1THk0dUwybHRZV2RsY3k5M2IzSnJMMkpoWTJ0bmNtOTFibVF0ZEdGaWJHVXVjRzVuSnlrN1hHNGdJR0poWTJ0bmNtOTFibVF0Y0c5emFYUnBiMjQ2SUdObGJuUmxjaUJqWlc1MFpYSTdYRzU5WEc1Y2JrQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZJREV3TWpWd2VDa2dlMXh1SUNCaWIyUjVJSHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtMV2x0WVdkbE9pQjFjbXdvSnk0dUx5NHVMMmx0WVdkbGN5OTNiM0pyTDJKaFkydG5jbTkxYm1RdWNHNW5KeWs3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzF3YjNOcGRHbHZiam9nZEc5d0lISnBaMmgwTzF4dUlDQWdJR0poWTJ0bmNtOTFibVF0YzJsNlpUb2dZMjkyWlhJN1hHNGdJSDFjYm4waVhYMD0gKi9cbiIsIkBrZXlmcmFtZXMgZmFkZUluIHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMFxuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG59XG5cbi5mYWRlSW4ge1xuICBhbmltYXRpb24tbmFtZTogZmFkZUluO1xufVxuXG5Aa2V5ZnJhbWVzIGZhZGVJbkRvd24ge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgLTEwMCUsIDApO1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogbm9uZTtcbiAgfVxufVxuXG4uZmFkZUluRG93biB7XG4gIGFuaW1hdGlvbi1uYW1lOiBmYWRlSW5Eb3duO1xufVxuXG5Aa2V5ZnJhbWVzIGZhZGVJbkxlZnQge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTEwMCUsIDAsIDApO1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogbm9uZTtcbiAgfVxufVxuXG4uZmFkZUluTGVmdCB7XG4gIGFuaW1hdGlvbi1uYW1lOiBmYWRlSW5MZWZ0O1xufVxuXG5Aa2V5ZnJhbWVzIGZhZGVJblJpZ2h0IHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDEwMCUsIDAsIDApO1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogbm9uZTtcbiAgfVxufVxuXG4uZmFkZUluUmlnaHQge1xuICBhbmltYXRpb24tbmFtZTogZmFkZUluUmlnaHQ7XG59XG5cbkBrZXlmcmFtZXMgZmFkZUluVXAge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMTAwJSwgMCk7XG4gIH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNmb3JtOiBub25lO1xuICB9XG59XG5cbi5mYWRlSW5VcCB7XG4gIGFuaW1hdGlvbi1uYW1lOiBmYWRlSW5VcDtcbn0iLCIvKiBodHRwOi8vbWV5ZXJ3ZWIuY29tL2VyaWMvdG9vbHMvY3NzL3Jlc2V0L1xuICAgdjIuMCB8IDIwMTEwMTI2XG4gICBMaWNlbnNlOiBub25lIChwdWJsaWMgZG9tYWluKVxuKi9cbmh0bWwsIGJvZHksIGRpdiwgc3BhbiwgYXBwbGV0LCBvYmplY3QsIGlmcmFtZSxcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHAsIGJsb2NrcXVvdGUsIHByZSxcbmEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSxcbmRlbCwgZGZuLCBlbSwgaW1nLCBpbnMsIGtiZCwgcSwgcywgc2FtcCxcbnNtYWxsLCBzdHJpa2UsIHN0cm9uZywgc3ViLCBzdXAsIHR0LCB2YXIsXG5iLCB1LCBpLCBjZW50ZXIsXG5kbCwgZHQsIGRkLCBvbCwgdWwsIGxpLFxuZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsXG50YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCxcbmFydGljbGUsIGFzaWRlLCBjYW52YXMsIGRldGFpbHMsIGVtYmVkLFxuZmlndXJlLCBmaWdjYXB0aW9uLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLFxubWVudSwgbmF2LCBvdXRwdXQsIHJ1YnksIHNlY3Rpb24sIHN1bW1hcnksXG50aW1lLCBtYXJrLCBhdWRpbywgdmlkZW8ge1xuICBmb250OiBpbmhlcml0O1xuICBmb250LXNpemU6IDEwMCU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICBib3JkZXI6IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cbmFydGljbGUsIGFzaWRlLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsXG5mb290ZXIsIGhlYWRlciwgaGdyb3VwLCBtZW51LCBuYXYsIHNlY3Rpb24ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuYm9keSB7XG4gIGxpbmUtaGVpZ2h0OiAxO1xufVxuXG5vbCwgdWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5ibG9ja3F1b3RlLCBxIHtcbiAgcXVvdGVzOiBub25lO1xufVxuXG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlcixcbnE6YmVmb3JlLCBxOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgY29udGVudDogbm9uZTtcbn1cblxudGFibGUge1xuICBib3JkZXItc3BhY2luZzogMDtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbn1cblxuLmZvb3RlciB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgY29sb3I6IHJlZDtcbn1cblxuQGtleWZyYW1lcyBmYWRlSW4ge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG59XG4uZmFkZUluIHtcbiAgYW5pbWF0aW9uLW5hbWU6IGZhZGVJbjtcbn1cblxuQGtleWZyYW1lcyBmYWRlSW5Eb3duIHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIC0xMDAlLCAwKTtcbiAgfVxuICB0byB7XG4gICAgb3BhY2l0eTogMTtcbiAgICB0cmFuc2Zvcm06IG5vbmU7XG4gIH1cbn1cbi5mYWRlSW5Eb3duIHtcbiAgYW5pbWF0aW9uLW5hbWU6IGZhZGVJbkRvd247XG59XG5cbkBrZXlmcmFtZXMgZmFkZUluTGVmdCB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtMTAwJSwgMCwgMCk7XG4gIH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNmb3JtOiBub25lO1xuICB9XG59XG4uZmFkZUluTGVmdCB7XG4gIGFuaW1hdGlvbi1uYW1lOiBmYWRlSW5MZWZ0O1xufVxuXG5Aa2V5ZnJhbWVzIGZhZGVJblJpZ2h0IHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDEwMCUsIDAsIDApO1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogbm9uZTtcbiAgfVxufVxuLmZhZGVJblJpZ2h0IHtcbiAgYW5pbWF0aW9uLW5hbWU6IGZhZGVJblJpZ2h0O1xufVxuXG5Aa2V5ZnJhbWVzIGZhZGVJblVwIHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDEwMCUsIDApO1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogbm9uZTtcbiAgfVxufVxuLmZhZGVJblVwIHtcbiAgYW5pbWF0aW9uLW5hbWU6IGZhZGVJblVwO1xufVxuXG5Aa2V5ZnJhbWVzIHNsaWRlSW5VcCB7XG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMTAwJSwgMCk7XG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgfVxuICB0byB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgfVxufVxuLnNsaWRlSW5VcCB7XG4gIGFuaW1hdGlvbi1uYW1lOiBzbGlkZUluVXA7XG59XG5cbi5yZXZlcnNlIHtcbiAgYW5pbWF0aW9uLWRpcmVjdGlvbjogcmV2ZXJzZTtcbiAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG59XG5cbi5ncmF5LWxheWVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAtMTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgb3BhY2l0eTogMC4zO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDMwMzAzO1xufVxuXG4uY2xvc2Uge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDQ1cHg7XG4gIGhlaWdodDogNDVweDtcbn1cbi5jbG9zZV9fc3ZnIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNHMgZWFzZTtcbiAgZmlsbDogI0RERDNDNztcbn1cbi5jbG9zZV9fc3ZnOmhvdmVyLCAuY2xvc2VfX3N2Zzpmb2N1cywgLmNsb3NlX19zdmc6YWN0aXZlIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNHMgZWFzZTtcbiAgdHJhbnNmb3JtOiByb3RhdGUoNGRlZyk7XG4gIGZpbGw6ICM4RDIzMjM7XG59XG5cbmhlYWRlciB7XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogMDtcbn1cblxuLmhlYWRlcl9fbG9nbyBzdmcge1xuICB3aWR0aDogMTMwcHg7XG4gIGhlaWdodDogNDVweDtcbn1cbi5oZWFkZXJfX2J1cmdlciBzdmcge1xuICB3aWR0aDogNDVweDtcbiAgaGVpZ2h0OiA0NXB4O1xuICB0cmFuc2l0aW9uOiBhbGwgMC40cyBlYXNlO1xufVxuLmhlYWRlcl9fYnVyZ2VyIHN2Zzpob3ZlciwgLmhlYWRlcl9fYnVyZ2VyIHN2Zzpmb2N1cywgLmhlYWRlcl9fYnVyZ2VyIHN2ZzphY3RpdmUge1xuICB0cmFuc2l0aW9uOiBhbGwgMC40cyBlYXNlO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg0ZGVnKTtcbn1cbi5oZWFkZXJfX2xvZ28gc3ZnOmhvdmVyIHBhdGgsIC5oZWFkZXJfX2xvZ28gc3ZnOmZvY3VzIHBhdGgsIC5oZWFkZXJfX2xvZ28gc3ZnOmFjdGl2ZSBwYXRoLCAuaGVhZGVyX19idXJnZXIgc3ZnOmhvdmVyIHBhdGgsIC5oZWFkZXJfX2J1cmdlciBzdmc6Zm9jdXMgcGF0aCwgLmhlYWRlcl9fYnVyZ2VyIHN2ZzphY3RpdmUgcGF0aCB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjRzIGVhc2U7XG4gIGZpbGw6ICM4RDIzMjM7XG59XG4uaGVhZGVyX19sb2dvIHN2ZyBwYXRoLCAuaGVhZGVyX19idXJnZXIgc3ZnIHBhdGgge1xuICB0cmFuc2l0aW9uOiBhbGwgMC40cyBlYXNlO1xuICBmaWxsOiAjREREM0M3O1xufVxuLmhlYWRlcl9fYnVyZ2VyLXdyYXBwZXIge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHotaW5kZXg6IDk5OTk7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMC42cztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXItcmFkaXVzOiAzMHB4IDAgMCAzMHB4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi8uLi9pbWFnZXMvbWVudS9tZW51LWJhY2tncm91bmQucG5nXCIpO1xuICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IGZpeGVkO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufVxuLmhlYWRlcl9fbWVudSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBwYWRkaW5nOiAzMHB4IDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5oZWFkZXJfX21lbnUtaXRlbSB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjRzIGVhc2U7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cbi5oZWFkZXJfX21lbnUtaXRlbTpob3ZlciwgLmhlYWRlcl9fbWVudS1pdGVtOmZvY3VzLCAuaGVhZGVyX19tZW51LWl0ZW06YWN0aXZlIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNHMgZWFzZTtcbiAgdHJhbnNmb3JtOiBza2V3KC04ZGVnKTtcbn1cbi5oZWFkZXJfX21lbnUtaXRlbTpob3ZlciBhLCAuaGVhZGVyX19tZW51LWl0ZW06Zm9jdXMgYSwgLmhlYWRlcl9fbWVudS1pdGVtOmFjdGl2ZSBhIHtcbiAgY29sb3I6ICM4RDIzMjM7XG59XG4uaGVhZGVyX19tZW51LWl0ZW0gYSB7XG4gIGZvbnQtc2l6ZTogNTJweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGxpbmUtaGVpZ2h0OiAxLjJlbTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBsZXR0ZXItc3BhY2luZzogLTEuMXB4O1xuICBjb2xvcjogI0RERDNDNztcbn1cbi5oZWFkZXJfX21vYmlsZS1wcml2YWN5IHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgLmhlYWRlcl9fbWVudSB7XG4gICAgcGFkZGluZzogNDNweCAwO1xuICB9XG4gIC5oZWFkZXJfX21vYmlsZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuLmhpZGRlbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGNvbG9yOiAjRkZGRkZGO1xufVxuXG4uY29udGFpbmVyX21haW4ge1xuICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjIpO1xufVxuXG4ucGFnZS1jb250ZW50IHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDAgMzBweDtcbn1cblxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFNlZ29lIFVJLCBSb2JvdG8sIEhlbHZldGljYSBOZXVlLCBBcmlhbCwgTm90byBTYW5zLCBzYW5zLXNlcmlmLCBBcHBsZSBDb2xvciBFbW9qaSwgU2Vnb2UgVUkgRW1vamksIFNlZ29lIFVJIFN5bWJvbCwgTm90byBDb2xvciBFbW9qaTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC15O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3AgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgYm9keSB7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IGZpeGVkO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIH1cbiAgLnBhZ2UtY29udGVudCB7XG4gICAgd2lkdGg6IDkwJTtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG59XG4uaGVhZGVyX193b3JrIHtcbiAgY29sb3I6ICM4RDIzMjMgIWltcG9ydGFudDtcbn1cblxuYm9keSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uLy4uL2ltYWdlcy93b3JrL2JhY2tncm91bmQtdGFibGUucG5nXCIpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgYm9keSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vLi4vaW1hZ2VzL3dvcmsvYmFja2dyb3VuZC5wbmdcIik7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wIHJpZ2h0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIH1cbn0iLCJAa2V5ZnJhbWVzIHNsaWRlSW5VcCB7XG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMTAwJSwgMCk7XG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZVxuICB9XG4gIHRvIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApXG4gIH1cbn1cblxuLnNsaWRlSW5VcCB7XG4gIGFuaW1hdGlvbi1uYW1lOiBzbGlkZUluVXBcbn0iLCJAaW1wb3J0ICcuLi9jb25maWcvY29uc3QnO1xuQGltcG9ydCAnLi4vYW5pbWF0aW9ucy9mYWRlSW4nO1xuQGltcG9ydCAnLi4vYW5pbWF0aW9ucy9zbGlkZUluJztcblxuLnJldmVyc2Uge1xuICBhbmltYXRpb24tZGlyZWN0aW9uOiByZXZlcnNlO1xuICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbn1cblxuLmdyYXktbGF5ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IC0xO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBvcGFjaXR5OiAwLjM7XG4gIGJhY2tncm91bmQtY29sb3I6ICRnbG9iYWxHcmF5TGF5ZXI7XG59XG5cbi5jbG9zZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogNDVweDtcbiAgaGVpZ2h0OiA0NXB4O1xuXG4gICZfX3N2ZyB7XG4gICAgdHJhbnNpdGlvbjogJGRlZmF1bHRUcmFuc2l0aW9uO1xuICAgIGZpbGw6ICRnbG9iYWxDb2xvclByaW1hcnk7XG5cbiAgICAmOmhvdmVyLFxuICAgICY6Zm9jdXMsXG4gICAgJjphY3RpdmUge1xuICAgICAgdHJhbnNpdGlvbjogJGRlZmF1bHRUcmFuc2l0aW9uO1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNGRlZyk7XG4gICAgICBmaWxsOiAkZ2xvYmFsQ29sb3JQcmltYXJ5SG92ZXI7XG4gICAgfVxuICB9XG59XG5cbmhlYWRlciB7XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogMDtcbn1cblxuLmhlYWRlciB7XG4gICZfX2xvZ28gc3ZnIHtcbiAgICB3aWR0aDogMTMwcHg7XG4gICAgaGVpZ2h0OiA0NXB4O1xuICB9XG5cbiAgJl9fYnVyZ2VyIHN2ZyB7XG4gICAgd2lkdGg6IDQ1cHg7XG4gICAgaGVpZ2h0OiA0NXB4O1xuICAgIHRyYW5zaXRpb246ICRkZWZhdWx0VHJhbnNpdGlvbjtcblxuICAgICY6aG92ZXIsXG4gICAgJjpmb2N1cyxcbiAgICAmOmFjdGl2ZSB7XG4gICAgICB0cmFuc2l0aW9uOiAkZGVmYXVsdFRyYW5zaXRpb247XG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0ZGVnKTtcbiAgICB9XG4gIH1cblxuICAmX19sb2dvIHN2ZyxcbiAgJl9fYnVyZ2VyIHN2ZyB7XG4gICAgJjpob3ZlcixcbiAgICAmOmZvY3VzLFxuICAgICY6YWN0aXZlIHtcbiAgICAgIHBhdGgge1xuICAgICAgICB0cmFuc2l0aW9uOiAkZGVmYXVsdFRyYW5zaXRpb247XG4gICAgICAgIGZpbGw6ICRnbG9iYWxDb2xvclByaW1hcnlIb3ZlcjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBwYXRoIHtcbiAgICAgIHRyYW5zaXRpb246ICRkZWZhdWx0VHJhbnNpdGlvbjtcbiAgICAgIGZpbGw6ICRnbG9iYWxDb2xvclByaW1hcnk7XG4gICAgfVxuICB9XG5cbiAgJl9fYnVyZ2VyLXdyYXBwZXIge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB6LWluZGV4OiA5OTk5O1xuICAgIGJvdHRvbTogMDtcbiAgICBsZWZ0OiAwO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBhbmltYXRpb24tZHVyYXRpb246ICRkZWZhdWx0QW5pbWF0aW9uRHVyYXRpb247XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJvcmRlci1yYWRpdXM6IDMwcHggMCAwIDMwcHg7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi8uLi9pbWFnZXMvbWVudS9tZW51LWJhY2tncm91bmQucG5nJyk7XG4gICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIH1cblxuICAmX19tZW51IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBwYWRkaW5nOiAzMHB4IDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gICAgJi1pdGVtIHtcbiAgICAgIHRyYW5zaXRpb246ICRkZWZhdWx0VHJhbnNpdGlvbjtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblxuICAgICAgJjpob3ZlcixcbiAgICAgICY6Zm9jdXMsXG4gICAgICAmOmFjdGl2ZSB7XG4gICAgICAgIHRyYW5zaXRpb246ICRkZWZhdWx0VHJhbnNpdGlvbjtcbiAgICAgICAgdHJhbnNmb3JtOiBza2V3KC04ZGVnKTtcblxuICAgICAgICBhIHtcbiAgICAgICAgICBjb2xvcjogJGdsb2JhbENvbG9yUHJpbWFyeUhvdmVyO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGEge1xuICAgICAgICAvL2ZvbnQtZmFtaWx5OiAnQmFzaWVyIEJvbGQnLCBzYW5zLXNlcmlmO1xuICAgICAgICAvL2ZvbnQtZmFtaWx5OiAnUnViaWsnLCBzYW5zLXNlcmlmO1xuICAgICAgICBmb250LXNpemU6IDUycHg7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICBsaW5lLWhlaWdodDogMS4yZW07XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IC0xLjFweDtcbiAgICAgICAgY29sb3I6ICRnbG9iYWxDb2xvclByaW1hcnk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgJl9fbW9iaWxlIHtcbiAgICAmLXByaXZhY3kge1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgLmhlYWRlciB7XG4gICAgJl9fbWVudSB7XG4gICAgICBwYWRkaW5nOiA0M3B4IDA7XG4gICAgfVxuXG4gICAgJl9fbW9iaWxlIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICB9XG59XG5cbi5oaWRkZW4ge1xuICBkaXNwbGF5OiBub25lO1xufSIsIi8vIENvbG9yc1xuJGdsb2JhbENvbG9yUHJpbWFyeTogI0RERDNDNztcbiRnbG9iYWxDb2xvclByaW1hcnlIb3ZlcjogIzhEMjMyMztcbiRnbG9iYWxCYWNrZ3JvdW5kQ29sb3I6ICMwMDAwMDAzMztcbiRnbG9iYWxHcmF5TGF5ZXI6ICMwMzAzMDM7XG5cbi8vIENvbnN0XG4kZGVmYXVsdFRyYW5zaXRpb246IGFsbCAuNHMgZWFzZTtcbiRkZWZhdWx0QW5pbWF0aW9uRHVyYXRpb246IC42czsiLCJAaW1wb3J0ICcuL3Jlc2V0JztcbkBpbXBvcnQgJy4vLi4vY29tcG9uZW50cy9mb290ZXInO1xuQGltcG9ydCAnLi8uLi9jb21wb25lbnRzL2hlYWRlcic7XG5AaW1wb3J0ICcuLi9jb25maWcvY29uc3QnO1xuXG4kZ2xvYmFsQ29udGFpbmVyV2lkdGg6IDkwJTtcblxuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgY29sb3I6ICNGRkZGRkY7XG59XG5cbi5jb250YWluZXJfbWFpbiB7XG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ2xvYmFsQmFja2dyb3VuZENvbG9yO1xufVxuXG4ucGFnZS1jb250ZW50IHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDAgMzBweDtcbn1cblxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFNlZ29lIFVJLCBSb2JvdG8sIEhlbHZldGljYSBOZXVlLCBBcmlhbCwgTm90byBTYW5zLCBzYW5zLXNlcmlmLCBBcHBsZSBDb2xvciBFbW9qaSwgU2Vnb2UgVUkgRW1vamksIFNlZ29lIFVJIFN5bWJvbCwgTm90byBDb2xvciBFbW9qaTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC15O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3AgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuXG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkge1xuICBib2R5IHtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogZml4ZWQ7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgfVxuXG4gIC5wYWdlLWNvbnRlbnQge1xuICAgIHdpZHRoOiAkZ2xvYmFsQ29udGFpbmVyV2lkdGg7XG4gICAgcGFkZGluZzogMDtcbiAgfVxufSIsIkBpbXBvcnQgJy4uL2NvbmZpZy9jb25maWcnO1xuXG4uaGVhZGVyIHtcbiAgJl9fd29yayB7XG4gICAgY29sb3I6ICRnbG9iYWxDb2xvclByaW1hcnlIb3ZlciAhaW1wb3J0YW50O1xuICB9XG59XG5cbmJvZHkge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uLy4uL2ltYWdlcy93b3JrL2JhY2tncm91bmQtdGFibGUucG5nJyk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkge1xuICBib2R5IHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uLy4uL2ltYWdlcy93b3JrL2JhY2tncm91bmQucG5nJyk7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wIHJpZ2h0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIH1cbn0iXX0= */
