a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{font:inherit;font-size:100%;margin:0;padding:0;vertical-align:baseline;border:0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-spacing:0;border-collapse:collapse}.footer{font-size:16px;color:red}@keyframes a{0%{opacity:0}to{opacity:1}}.fadeIn{animation-name:a}@keyframes b{0%{opacity:0;transform:translate3d(0,-100%,0)}to{opacity:1;transform:none}}.fadeInDown{animation-name:b}@keyframes c{0%{opacity:0;transform:translate3d(-100%,0,0)}to{opacity:1;transform:none}}.fadeInLeft{animation-name:c}@keyframes d{0%{opacity:0;transform:translate3d(100%,0,0)}to{opacity:1;transform:none}}.fadeInRight{animation-name:d}@keyframes e{0%{opacity:0;transform:translate3d(0,100%,0)}to{opacity:1;transform:none}}.fadeInUp{animation-name:e}@keyframes f{0%{transform:translate3d(0,100%,0);visibility:visible}to{transform:translateZ(0)}}.slideInUp{animation-name:f}.reverse{animation-direction:reverse;animation-fill-mode:forwards}.gray-layer{position:absolute;z-index:-1;width:100%;height:100%;opacity:.3;background-color:#030303}.close{display:block;width:45px;height:45px}.close__svg{transition:all .4s ease;fill:#ddd3c7}.close__svg:active,.close__svg:focus,.close__svg:hover{transition:all .4s ease;transform:rotate(4deg);fill:#8d2323}header{position:sticky;top:0}.header__logo svg{width:130px;height:45px}.header__burger svg{width:45px;height:45px;transition:all .4s ease}.header__burger svg:active,.header__burger svg:focus,.header__burger svg:hover{transition:all .4s ease;transform:rotate(4deg)}.header__burger svg:active path,.header__burger svg:focus path,.header__burger svg:hover path,.header__logo svg:active path,.header__logo svg:focus path,.header__logo svg:hover path{transition:all .4s ease;fill:#8d2323}.header__burger svg path,.header__logo svg path{transition:all .4s ease;fill:#ddd3c7}.header__burger-wrapper{position:fixed;z-index:9999;bottom:0;left:0;display:flex;align-items:center;flex-direction:column;justify-content:center;width:100%;height:100%;animation-duration:.6s;text-align:center;background-image:url(../../images/menu/menu-background.png);background-attachment:fixed;background-position:50%;background-size:cover}.header__about,.header__services,.header__talk,.header__welcome,.header__work{font-size:52px;font-weight:700;line-height:1.2em;display:block;width:100%;transition:all .4s ease;text-decoration:none;letter-spacing:-1.1px;color:#ddd3c7}.header__about:active,.header__about:focus,.header__about:hover,.header__services:active,.header__services:focus,.header__services:hover,.header__talk:active,.header__talk:focus,.header__talk:hover,.header__welcome:active,.header__welcome:focus,.header__welcome:hover,.header__work:active,.header__work:focus,.header__work:hover{transition:all .4s ease;color:#8d2323}.header__about_red,.header__services_red,.header__talk_red,.header__welcome_red,.header__work_red{color:#8d2323}.header__menu{display:flex;align-content:center;flex-direction:row;justify-content:space-between;padding:30px 0;text-align:center}.header__menu-item{transition:all .4s ease;text-decoration:none}.header__menu-item:active,.header__menu-item:focus,.header__menu-item:hover{transition:all .4s ease;transform:skew(-8deg)}.header__menu-item-list{width:100%;max-width:80%;padding:0 0 25px}.header__mobile-privacy{font-family:Basier Bold,sans-serif;font-size:17px;font-weight:600;line-height:1.3em;transition:all .4s ease;text-decoration:none;letter-spacing:0;color:#ddd3c7}.header__mobile-privacy:active,.header__mobile-privacy:focus,.header__mobile-privacy:hover{transition:all .4s ease;color:#8d2323}.icons-wrapper{display:flex;flex-direction:row;justify-content:space-evenly;max-width:160px;margin:0 auto;padding:15px 0 0}.icon-svg__behance,.icon-svg__dribbble,.icon-svg__instagram,.icon-svg__linkedin{width:20px;height:20px;fill:#ddd3c7}.icon-behance,.icon-dribbble,.icon-instagram,.icon-linkedin{width:40px;height:40px;padding:10px;transition:all .4s ease}.icon-behance:active,.icon-behance:focus,.icon-behance:hover,.icon-dribbble:active,.icon-dribbble:focus,.icon-dribbble:hover,.icon-instagram:active,.icon-instagram:focus,.icon-instagram:hover,.icon-linkedin:active,.icon-linkedin:focus,.icon-linkedin:hover{transition:all .4s ease;transform:translateY(8px);opacity:.9;border-radius:10px;background-color:#8d2323}.hidden{display:none}*{box-sizing:border-box;margin:0;padding:0;color:#fff}.container_main{min-height:100vh;background-color:rgba(0,0,0,.2)}.page-content{margin:0 auto;padding:0 30px}body{font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif;background-repeat:repeat-y;background-position:top;background-size:cover;background-image:url(../../images/services/background-table.png)}@media screen and (min-width:768px){.header__burger-wrapper{border-radius:30px 0 0 30px}}@media screen and (min-width:1025px){.header__menu{padding:43px 0}.header__mobile{display:none}body{background-repeat:no-repeat;background-attachment:fixed;background-position:50%}.page-content{width:90%;padding:0}body{background-image:url(../../images/services/background.png)}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
